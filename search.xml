<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2022/09/05/1001%20A+B%20Format%20(20%20point(s))/</url>
    <content><![CDATA[<h1 id="1001-A-B-Format-20-point-s"><a href="#1001-A-B-Format-20-point-s" class="headerlink" title="1001 A+B Format (20 point(s))"></a>1001 A+B Format (20 point(s))</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805528788582400">题目链接</a></h2><h2 id="一、算法分析"><a href="#一、算法分析" class="headerlink" title="一、算法分析"></a>一、算法分析</h2><p>把两个数相加得到的结果每三位进行处理，注意特殊情况的判断。</p>
<h2 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="built_in">int</span> ct[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> a, b;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">int</span> c = a + b;</span><br><span class="line">	<span class="keyword">if</span>(c &lt; <span class="number">0</span>)&#123;<span class="comment">//特殊情况的判断 </span></span><br><span class="line">		printf(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">		c *= <span class="number">-1</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(c == <span class="number">0</span>)&#123;<span class="comment">//特殊情况的判断</span></span><br><span class="line">		puts(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(c)&#123;<span class="comment">//每三位处理一下 </span></span><br><span class="line">		<span class="built_in">int</span> x = c % <span class="number">1000</span>;</span><br><span class="line">		ct[++ t] = x;</span><br><span class="line">		c /= <span class="number">1000</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">int</span> m = t;</span><br><span class="line">	<span class="keyword">while</span>(t)&#123;<span class="comment">//每三位格式化输出 </span></span><br><span class="line">		<span class="keyword">if</span>(t == m)</span><br><span class="line">			printf(<span class="string">&quot;%d&quot;</span>, ct[t]);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			printf(<span class="string">&quot;%03d&quot;</span>, ct[t]);</span><br><span class="line">		<span class="keyword">if</span>(t &gt; <span class="number">1</span>) printf(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">		t --;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h2 id="三、学习柳神"><a href="#三、学习柳神" class="headerlink" title="三、学习柳神"></a>三、学习柳神</h2><p>转化为字符串进行处理（注意一些STL的使用）</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> a, b;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">string</span> s = to_string(a + b);</span><br><span class="line">	<span class="keyword">if</span>(s[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">		printf(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">		s.erase(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">int</span> len = s.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		printf(<span class="string">&quot;%c&quot;</span>, s[i]);</span><br><span class="line">		<span class="keyword">if</span>((len - i - <span class="number">1</span>) % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i != len - <span class="number">1</span>)</span><br><span class="line">			printf(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1002%20A+B%20for%20Polynomials%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1002-A-B-for-Polynomials-25-分"><a href="#1002-A-B-for-Polynomials-25-分" class="headerlink" title="1002 A+B for Polynomials (25 分)"></a>1002 A+B for Polynomials (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805526272000000">题目链接</a></h2><h2 id="一、算法分析"><a href="#一、算法分析" class="headerlink" title="一、算法分析"></a>一、算法分析</h2><p>设立一个double类型的ans数组存下两次读入后的结果，然后输出即可。<br>&#x3D;&#x3D;要注意一点：系数非0才要输出&#x3D;&#x3D;</p>
<h2 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="built_in">double</span> ans[N];</span><br><span class="line"><span class="built_in">int</span> Ans, tmx;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> k, n;</span><br><span class="line">	<span class="built_in">double</span> x;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d%lf&quot;</span>, &amp;n, &amp;x);</span><br><span class="line">		<span class="keyword">if</span>(i == <span class="number">1</span>)	tmx = max(n, tmx);</span><br><span class="line">		ans[n] += x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="keyword">init</span>();</span><br><span class="line">	<span class="keyword">init</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= tmx; ++ i)	</span><br><span class="line">		<span class="keyword">if</span>(ans[i]) Ans ++;</span><br><span class="line">	printf(<span class="string">&quot;%d&quot;</span>, Ans);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = tmx; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(ans[i])&#123;</span><br><span class="line">			printf(<span class="string">&quot; %d %.1f&quot;</span>, i, ans[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="三、我跟柳神的差不多，把她的代码粘在下面"><a href="#三、我跟柳神的差不多，把她的代码粘在下面" class="headerlink" title="三、我跟柳神的差不多，把她的代码粘在下面"></a>三、我跟柳神的差不多，把她的代码粘在下面</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span> &#123;</span><br><span class="line">    <span class="built_in">float</span> c[<span class="number">1001</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">int</span> m, n, t;</span><br><span class="line">    <span class="built_in">float</span> num;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%d%f&quot;</span>, &amp;t, &amp;num);</span><br><span class="line">        c[t] += num;</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%d%f&quot;</span>, &amp;t, &amp;num);</span><br><span class="line">        c[t] += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1001</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i] != <span class="number">0</span>) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d&quot;</span>, cnt);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1000</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i] != <span class="number">0.0</span>)</span><br><span class="line">            printf(<span class="string">&quot; %d %.1f&quot;</span>, i, c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1002%20%E5%86%99%E5%87%BA%E8%BF%99%E4%B8%AA%E6%95%B0%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1002-写出这个数-20-分"><a href="#1002-写出这个数-20-分" class="headerlink" title="1002 写出这个数 (20 分)"></a>1002 写出这个数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805324509200384">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>模10取余并求和，然后输出结果每一位对应的字符串就好了。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string ss[<span class="number">15</span>] = &#123;<span class="string">&quot;ling&quot;</span>, <span class="string">&quot;yi&quot;</span>, <span class="string">&quot;er&quot;</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;wu&quot;</span>, <span class="string">&quot;liu&quot;</span>, <span class="string">&quot;qi&quot;</span>, <span class="string">&quot;ba&quot;</span>, <span class="string">&quot;jiu&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	cin&gt;&gt; s;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> lin = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		t += lin;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> chu = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(t &gt;= chu)	chu *= <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; ; ++ i)&#123;</span><br><span class="line">		chu /= <span class="number">10</span>;</span><br><span class="line">		<span class="type">int</span> k = t / chu;</span><br><span class="line">		t -= k * chu;</span><br><span class="line">		<span class="keyword">if</span>(chu != <span class="number">1</span>)	cout&lt;&lt; ss[k]&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cout&lt;&lt; ss[k];</span><br><span class="line">			<span class="keyword">break</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1001%20%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84(3n+1)%E7%8C%9C%E6%83%B3%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1001-害死人不偿命的-3n-1-猜想-15-分"><a href="#1001-害死人不偿命的-3n-1-猜想-15-分" class="headerlink" title="1001 害死人不偿命的(3n+1)猜想 (15 分)"></a>1001 害死人不偿命的(3n+1)猜想 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>while外层循环，内层分奇偶讨论并处理。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> a;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">	<span class="keyword">while</span>(a != <span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">		a = a / <span class="number">2</span>;</span><br><span class="line">		t ++;</span><br><span class="line">	&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">		a = (<span class="number">3</span> * a + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">		t ++;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1003%20%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1003-我要通过！-20-分"><a href="#1003-我要通过！-20-分" class="headerlink" title="1003 我要通过！ (20 分)"></a>1003 我要通过！ (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805323154440192">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>注意以下几点：<br>1.P,A,T三个字母必须都出现过，用on数组来记录。<br>2.只能有一个P和一个T出现，用on数组来记录<br>3.用jl数组记录被P和T分成三段的字符串中，A的个数<br>4.按照要求特判就好了</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> on[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> jl[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	string a;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; a;	</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)&#123;</span><br><span class="line">			jl[i] = <span class="number">0</span>;</span><br><span class="line">			on[i] = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> len = a.<span class="built_in">size</span>();</span><br><span class="line">		<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> T = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> judge = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> p1 = <span class="number">0</span>, p2 = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i] == <span class="string">&#x27;P&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(on[<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">					judge = <span class="number">1</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				p1 = i;</span><br><span class="line">				on[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">				jl[++ T] = t;</span><br><span class="line">				t = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(a[i] == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">				on[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">				++ t;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(a[i] == <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(on[<span class="number">3</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">					judge = <span class="number">1</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				p2 = i;</span><br><span class="line">				on[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">				jl[++ T] = t;</span><br><span class="line">				t = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>( (a[i] != <span class="string">&#x27;P&#x27;</span>) &amp;&amp; (a[i] != <span class="string">&#x27;A&#x27;</span>) &amp;&amp; (a[i] != <span class="string">&#x27;T&#x27;</span>) )&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">				judge = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(judge == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">		jl[++ T] = t;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(on[i] == <span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">				judge = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(judge == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(jl[<span class="number">2</span>] == <span class="number">0</span> || p1 &gt; p2)&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(jl[<span class="number">3</span>] == jl[<span class="number">1</span>] * jl[<span class="number">2</span>]) <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1004%20Counting%20Leaves%20(30%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1004-Counting-Leaves-30-分"><a href="#1004-Counting-Leaves-30-分" class="headerlink" title="1004 Counting Leaves (30 分)"></a>1004 Counting Leaves (30 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805521431773184">题目链接</a></h2><h2 id="一、算法分析"><a href="#一、算法分析" class="headerlink" title="一、算法分析"></a>一、算法分析</h2><p>用两个vector容器存下来关系图和层图（我姑且这么叫吧）<br>读入数据时，把每个父节点的子节点压到关系图里面。<br>分析数据时，按层进行循环，把这一层的节点的子节点压入下一层，并完成叶节点计算。</p>
<h2 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="built_in">vector</span>&lt; <span class="type">int</span> &gt;vec[N];</span><br><span class="line"><span class="built_in">vector</span>&lt; <span class="type">int</span> &gt;rel[N];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="type">int</span> u, num, v;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;u, &amp;num);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= num; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v);</span><br><span class="line">			rel[u].push_back(v);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	vec[<span class="number">1</span>].push_back(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; ; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!vec[i].size()) <span class="keyword">break</span>;</span><br><span class="line">		<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; vec[i].size(); ++ j)&#123;</span><br><span class="line">			<span class="type">int</span> next = vec[i][j];</span><br><span class="line">			<span class="keyword">if</span>(!rel[next].size()) cnt ++;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; rel[next].size(); ++ k)</span><br><span class="line">				vec[i + <span class="number">1</span>].push_back(rel[next][k]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(i == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, cnt);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, cnt);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1003%20Emergency%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%EF%BC%8C3%EF%BC%8C4%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1003-Emergency-25-分"><a href="#1003-Emergency-25-分" class="headerlink" title="1003 Emergency (25 分)"></a>1003 Emergency (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805523835109376">题目链接</a></h2><h2 id="一、算法分析"><a href="#一、算法分析" class="headerlink" title="一、算法分析"></a>一、算法分析</h2><p>从终点跑一次dijikstra最短路，并在路途中计算最短路的条数和路径上可选择的救援队伍最大值。<br>关键的两处处理就在：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">	dis[v] = dis[u] + w;</span><br><span class="line">	num_trace[v] = num_trace[u];</span><br><span class="line">	num_rescue[v] = num_rescue[u];</span><br><span class="line">	que.push(make_pair(-dis[v], v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + w == dis[v])&#123;</span><br><span class="line">	num_trace[v] += num_trace[u];</span><br><span class="line">	num_rescue[v] = max(num_rescue[u], num_rescue[v]);</span><br><span class="line">&#125;</span><br><span class="line">num_trace 最短路的条数</span><br><span class="line">num_rescue 救援队伍数量最大值</span><br></pre></td></tr></table></figure>
<h2 id="二、测试点"><a href="#二、测试点" class="headerlink" title="二、测试点"></a>二、测试点</h2><p>我错在234的原因是，读错了题，对于救援队伍数量的最大值，指的是一条最短路上的救援队伍，我理解成了所有条最短路，因此出错。<br>错误代码片段：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + w == dis[v])&#123;</span><br><span class="line">	num_trace[v] += num_trace[u];</span><br><span class="line">	num_rescue[v] += num_rescue[u];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>正确代码片段：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + w == dis[v])&#123;</span><br><span class="line">	num_trace[v] += num_trace[u];</span><br><span class="line">	num_rescue[v] = max(num_rescue[u], num_rescue[v]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 505</span></span><br><span class="line">vector&lt; pair&lt; <span class="built_in">int</span>, <span class="built_in">int</span> &gt; &gt;vec[N];</span><br><span class="line">priority_queue&lt; pair&lt; <span class="built_in">int</span> , <span class="built_in">int</span>&gt; &gt;que;</span><br><span class="line"><span class="built_in">int</span> restot[N];</span><br><span class="line"><span class="built_in">int</span> vis[N], dis[N], num_trace[N], num_rescue[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijikstra</span>(<span class="params"><span class="built_in">int</span> origin</span>)</span>&#123;</span><br><span class="line">	memset(dis, <span class="number">63</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">	que.push(make_pair(<span class="number">0</span>, origin));</span><br><span class="line">	dis[origin] = <span class="number">0</span>;</span><br><span class="line">	num_trace[origin] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(!que.empty())&#123;</span><br><span class="line">		<span class="built_in">int</span> u = que.top().second;</span><br><span class="line">		que.pop();</span><br><span class="line">		<span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">		vis[u] = <span class="number">1</span>;</span><br><span class="line">		num_rescue[u] += restot[u];</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; vec[u].size(); ++ i)&#123;</span><br><span class="line">			<span class="built_in">int</span> v = vec[u][i].first;</span><br><span class="line">			<span class="built_in">int</span> w = vec[u][i].second;</span><br><span class="line">			<span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">				dis[v] = dis[u] + w;</span><br><span class="line">				num_trace[v] = num_trace[u];</span><br><span class="line">				num_rescue[v] = num_rescue[u];</span><br><span class="line">				que.push(make_pair(-dis[v], v));</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + w == dis[v])&#123;</span><br><span class="line">				num_trace[v] += num_trace[u];</span><br><span class="line">				num_rescue[v] = max(num_rescue[u], num_rescue[v]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n, m, st, ed;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;st, &amp;ed);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; ++ i)</span><br><span class="line">		scanf(<span class="string">&quot;%d&quot;</span>, restot + i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">int</span> u, v, w;</span><br><span class="line">		scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">		vec[u].push_back(make_pair(v, w));</span><br><span class="line">		vec[v].push_back(make_pair(u, w));</span><br><span class="line">	&#125;</span><br><span class="line">	dijikstra(ed);</span><br><span class="line">	printf(<span class="string">&quot;%d %d&quot;</span>, num_trace[st], num_rescue[st]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="四、我和柳神思路一致，代码实现上稍有不同"><a href="#四、我和柳神思路一致，代码实现上稍有不同" class="headerlink" title="四、我和柳神思路一致，代码实现上稍有不同"></a>四、我和柳神思路一致，代码实现上稍有不同</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="built_in">int</span> n, m, c1, c2;</span><br><span class="line"><span class="built_in">int</span> e[<span class="number">510</span>][<span class="number">510</span>], weight[<span class="number">510</span>], dis[<span class="number">510</span>], num[<span class="number">510</span>], w[<span class="number">510</span>];</span><br><span class="line"><span class="built_in">bool</span> visit[<span class="number">510</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="built_in">int</span> inf = <span class="number">99999999</span>;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span> &#123;</span><br><span class="line">    scanf(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;c1, &amp;c2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        scanf(<span class="string">&quot;%d&quot;</span>, &amp;weight[i]);</span><br><span class="line">    fill(e[<span class="number">0</span>], e[<span class="number">0</span>] + <span class="number">510</span> * <span class="number">510</span>, inf);</span><br><span class="line">    fill(dis, dis + <span class="number">510</span>, inf);</span><br><span class="line">    <span class="built_in">int</span> a, b, c;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        e[a][b] = e[b][a] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    dis[c1] = <span class="number">0</span>;</span><br><span class="line">    w[c1] = weight[c1];</span><br><span class="line">    num[c1] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">int</span> u = <span class="number">-1</span>, minn = inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(visit[j] == <span class="literal">false</span> &amp;&amp; dis[j] &lt; minn) &#123;</span><br><span class="line">                u = j;</span><br><span class="line">                minn = dis[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(u == <span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        visit[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> v = <span class="number">0</span>; v &lt; n; v++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(visit[v] == <span class="literal">false</span> &amp;&amp; e[u][v] != inf) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dis[u] + e[u][v] &lt; dis[v]) &#123;</span><br><span class="line">                    dis[v] = dis[u] + e[u][v];</span><br><span class="line">                    num[v] = num[u];</span><br><span class="line">                    w[v] = w[u] + weight[v];</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + e[u][v] == dis[v]) &#123;</span><br><span class="line">                    num[v] = num[v] + num[u];</span><br><span class="line">                    <span class="keyword">if</span>(w[u] + weight[v] &gt; w[v])</span><br><span class="line">                        w[v] = w[u] + weight[v];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d %d&quot;</span>, num[c2], w[c2]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1005%20%E7%BB%A7%E7%BB%AD(3n+1)%E7%8C%9C%E6%83%B3%20(25%20%E5%88%86)(%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1005-继续-3n-1-猜想-25-分"><a href="#1005-继续-3n-1-猜想-25-分" class="headerlink" title="1005 继续(3n+1)猜想 (25 分)"></a>1005 继续(3n+1)猜想 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805320306507776">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>对于每一个数，都跑一次处理，把过程中出现的数字在on数组中标记为1，然后再判断是否被覆盖即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> on[<span class="number">10000</span>], a[<span class="number">110</span>];</span><br><span class="line"><span class="type">int</span> sk[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(x != <span class="number">1</span>)&#123;</span><br><span class="line">		on[x] ++;</span><br><span class="line">		<span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>)	x = x / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">else</span>	x = (<span class="number">3</span> * x + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> K, x, t = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;K);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">		<span class="built_in">work</span>(a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(on[a[i]] == <span class="number">1</span>)	sk[++ t] = a[i];</span><br><span class="line">	<span class="built_in">sort</span>(sk + <span class="number">1</span>, sk + t + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(i == t)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sk[i]); </span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, sk[i]); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1004%20%E6%88%90%E7%BB%A9%E6%8E%92%E5%90%8D%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1004-成绩排名-20-分"><a href="#1004-成绩排名-20-分" class="headerlink" title="1004 成绩排名 (20 分)"></a>1004 成绩排名 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805321640296448">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>结构体排序</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100000</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">s</span>&#123;</span><br><span class="line">	string name, id;</span><br><span class="line">	<span class="type">int</span> mark;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">s</span> a[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(s aa, s bb)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> aa.mark &lt; bb.mark;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		cin&gt;&gt; a[i].name&gt;&gt; a[i].id&gt;&gt; a[i].mark;</span><br><span class="line">	<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>, cmp);</span><br><span class="line">	cout&lt;&lt; a[n].name&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; a[n].id&lt;&lt; endl;</span><br><span class="line">	cout&lt;&lt; a[<span class="number">1</span>].name&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; a[<span class="number">1</span>].id&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1005%20Spell%20It%20Right%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B93%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1005-Spell-It-Right-20-分"><a href="#1005-Spell-It-Right-20-分" class="headerlink" title="1005 Spell It Right (20 分)"></a>1005 Spell It Right (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805519074574336">题目链接</a></h2><h2 id="一、算法分析"><a href="#一、算法分析" class="headerlink" title="一、算法分析"></a>一、算法分析</h2><p>用字符串读入，计算总和，然后把每一位分离开来，然后就把它对应的英文形式输出就好</p>
<h2 id="二、测试点"><a href="#二、测试点" class="headerlink" title="二、测试点"></a>二、测试点</h2><p>我错在测试点3，问题出在没有考虑只输入一个0的情况，所以加一个特判就行。</p>
<h2 id="三、代码实现"><a href="#三、代码实现" class="headerlink" title="三、代码实现"></a>三、代码实现</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 15</span></span><br><span class="line"><span class="type">char</span> eng[M][M] = &#123;<span class="string">&quot;zero&quot;</span>, <span class="string">&quot;one&quot;</span>, <span class="string">&quot;two&quot;</span>, <span class="string">&quot;three&quot;</span>, <span class="string">&quot;four&quot;</span>, <span class="string">&quot;five&quot;</span>, <span class="string">&quot;six&quot;</span>, <span class="string">&quot;seven&quot;</span>, <span class="string">&quot;eight&quot;</span>, <span class="string">&quot;nine&quot;</span>&#125;;</span><br><span class="line"><span class="type">int</span> ans[N], t, sum;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> s;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt; s;</span><br><span class="line">	<span class="type">int</span> len = s.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)</span><br><span class="line">		sum += s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span>(sum == <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;zero&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(sum)&#123;</span><br><span class="line">		ans[++ t] = sum % <span class="number">10</span>;</span><br><span class="line">		sum /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = t; i &gt;= <span class="number">1</span>; -- i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i == t) <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, eng[ans[i]]);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot; %s&quot;</span>, eng[ans[i]]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1006%20%E6%8D%A2%E4%B8%AA%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA%E6%95%B4%E6%95%B0%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1006-换个格式输出整数-15-分"><a href="#1006-换个格式输出整数-15-分" class="headerlink" title="1006 换个格式输出整数 (15 分)"></a>1006 换个格式输出整数 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://blog.csdn.net/qq_34771124?spm=3001.5343">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>三次循环，按要求输出</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">int</span> a = n / <span class="number">100</span>; n -= a * <span class="number">100</span>;</span><br><span class="line">	<span class="type">int</span> b = n / <span class="number">10</span>; n -= b * <span class="number">10</span>;</span><br><span class="line">	<span class="type">int</span> c = n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a; ++ i) cout&lt;&lt; <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; ++ i) cout&lt;&lt; <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= c; ++ i) cout&lt;&lt; i;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1006%20Sign%20In%20and%20Sign%20Out%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1006-Sign-In-and-Sign-Out-25-分"><a href="#1006-Sign-In-and-Sign-Out-25-分" class="headerlink" title="1006 Sign In and Sign Out (25 分)"></a>1006 Sign In and Sign Out (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805516654460928">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>开两个结构体数组，用sort排序即可</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">	string name;</span><br><span class="line">	string in;</span><br><span class="line">	string out;</span><br><span class="line">&#125;ind;</span><br><span class="line">ind tma[N], tmb[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(<span class="type">const</span> ind a, <span class="type">const</span> ind b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.in &lt; b.in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(<span class="type">const</span> ind a, <span class="type">const</span> ind b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.out &gt; b.out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> m;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; tma[i].name &gt;&gt; tma[i].in&gt;&gt; tmb[i].out;</span><br><span class="line">		tmb[i].name = tma[i].name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(tma + <span class="number">1</span>, tma + m + <span class="number">1</span>, cmp1);</span><br><span class="line">	<span class="built_in">sort</span>(tmb + <span class="number">1</span>, tmb + m + <span class="number">1</span>, cmp2);</span><br><span class="line">	cout&lt;&lt; tma[<span class="number">1</span>].name&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; tmb[<span class="number">1</span>].name;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1007%20Maximum%20Subsequence%20Sum%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%E3%80%815%E3%80%816%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1007-Maximum-Subsequence-Sum-25-分"><a href="#1007-Maximum-Subsequence-Sum-25-分" class="headerlink" title="1007 Maximum Subsequence Sum (25 分)"></a>1007 Maximum Subsequence Sum (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805514284679168">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>我用了vector数据结构，来存可能为解的和为整数的连续子列，然后再对每一个子列进行处理，末尾的负数和0给删掉，然后输出结果就可以了。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><h3 id="测试点二和测试点六：问题在没有把末尾的0删掉（i，j最小）"><a href="#测试点二和测试点六：问题在没有把末尾的0删掉（i，j最小）" class="headerlink" title="测试点二和测试点六：问题在没有把末尾的0删掉（i，j最小）"></a>测试点二和测试点六：问题在没有把末尾的0删掉（i，j最小）</h3><h3 id="测试点五：“段错误”，最后发现是用vector的pop-back导致段错误。修改了一下就没问题了。"><a href="#测试点五：“段错误”，最后发现是用vector的pop-back导致段错误。修改了一下就没问题了。" class="headerlink" title="测试点五：“段错误”，最后发现是用vector的pop_back导致段错误。修改了一下就没问题了。"></a>测试点五：“段错误”，最后发现是用vector的pop_back导致段错误。修改了一下就没问题了。</h3><p><img src="https://img-blog.csdnimg.cn/d21fcbf986914580ae725a845516de8a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> SK[N], x[N];</span><br><span class="line">vector&lt; <span class="type">int</span> &gt;Vec[N];</span><br><span class="line"><span class="type">int</span> L[N], R[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> Sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x[i]);</span><br><span class="line">		<span class="keyword">if</span>(Sum + x[i] &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">			flag = <span class="number">0</span>;</span><br><span class="line">			Vec[t].<span class="built_in">push_back</span>(x[i]);</span><br><span class="line">			Sum += x[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(Sum + x[i] &lt; <span class="number">0</span> || i == n)&#123;</span><br><span class="line">			SK[t] = Sum;</span><br><span class="line">			Sum = <span class="number">0</span>;</span><br><span class="line">			++ t;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;0 %d %d&quot;</span>, x[<span class="number">1</span>], x[n]);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(Vec[i].<span class="built_in">size</span>())&#123;</span><br><span class="line">			L[i] = Vec[i][<span class="number">0</span>];</span><br><span class="line">			R[i] = Vec[i][Vec[i].<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = Vec[i].<span class="built_in">size</span>() - <span class="number">1</span>; j &gt;= <span class="number">0</span>; -- j)</span><br><span class="line">			<span class="keyword">if</span>(Vec[i][j] &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">				SK[i] -= Vec[i][j];</span><br><span class="line">				R[i] = Vec[i][j - <span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> Max = <span class="number">-1</span>, Max_t;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; t; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(SK[i] &gt; Max)&#123;</span><br><span class="line">			Max = SK[i];</span><br><span class="line">			Max_t = i;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, SK[Max_t], L[Max_t], R[Max_t]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="学习柳神"><a href="#学习柳神" class="headerlink" title="学习柳神"></a>学习柳神</h2><p>柳神的代码思路：<br><img src="https://img-blog.csdnimg.cn/086aaf7441564c9f8c3bbd9ce8b33b31.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我的理解：我和柳神代码的最大区别在于，我把许多没有用的元素也压到了vector容器中，之后还去遍历一次，这浪费了大把的程序运行时间，同时还使代码量剧增。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="type">int</span> leftindex = <span class="number">0</span>, rightindex = n - <span class="number">1</span>, sum = <span class="number">-1</span>, temp = <span class="number">0</span>, tempindex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v[i]);</span><br><span class="line">        temp = temp + v[i];</span><br><span class="line">        <span class="keyword">if</span> (temp &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            temp = <span class="number">0</span>;</span><br><span class="line">            tempindex = i + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt; sum) &#123;</span><br><span class="line">            sum = temp;</span><br><span class="line">            leftindex = tempindex;</span><br><span class="line">            rightindex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, sum, v[leftindex], v[rightindex]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font size=4><font color=red><br>真的太强了！ORZ</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1007%20%E7%B4%A0%E6%95%B0%E5%AF%B9%E7%8C%9C%E6%83%B3%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1007-素数对猜想-20-分"><a href="#1007-素数对猜想-20-分" class="headerlink" title="1007 素数对猜想 (20 分)"></a>1007 素数对猜想 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805317546655744">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用<a href="https://blog.csdn.net/qq_34771124/article/details/87465483">素数欧拉筛</a>，过程中进行判断是否为解。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="type">int</span> ct, prime[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> on[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(on, <span class="number">1</span>, <span class="built_in">sizeof</span>(on));</span><br><span class="line">	on[<span class="number">0</span>] = on[<span class="number">1</span>] = on[<span class="number">4</span>] = <span class="number">0</span>;</span><br><span class="line">	on[<span class="number">2</span>] = <span class="number">1</span>; prime[++ ct] = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i += <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(on[i])&#123;</span><br><span class="line">			prime[++ ct] = i;</span><br><span class="line">			<span class="keyword">if</span>(prime[ct] - prime[ct - <span class="number">1</span>] == <span class="number">2</span> &amp;&amp; ct &gt;= <span class="number">2</span>) tot ++;  </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;=ct &amp;&amp; prime[j] * i &lt;= n; ++ j)&#123;</span><br><span class="line">			on[prime[j] * i] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">pre</span>(n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, tot);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1008%20Elevator%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%EF%BC%8C3%EF%BC%8C6%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1008-Elevator-20-分"><a href="#1008-Elevator-20-分" class="headerlink" title="1008 Elevator (20 分)"></a>1008 Elevator (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805511923286016">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>首先读懂题目的意思，它给定N个正数（有给定的顺序），让我们去模拟这个电梯上下运行的过程，然后输出其总运行时间。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我第一次错的测试点2，3，6<br>原因在于：<font color=red> 相邻两个数相同的情况——移动时间为0，停留时间增加5s</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">int</span> now = <span class="number">0</span>, tot = <span class="number">0</span>, x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="keyword">if</span>(x &lt; now) tot += (now - x) * <span class="number">4</span> + <span class="number">5</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(x &gt;= now) tot += (x - now) * <span class="number">6</span> + <span class="number">5</span>;</span><br><span class="line">		now = x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, tot);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="学习柳诺"><a href="#学习柳诺" class="headerlink" title="学习柳诺"></a>学习柳诺</h2><p>代码思路基本一致，柳诺的方法更节省空间<br>代码如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a, now = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; a) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; now)</span><br><span class="line">            sum = sum + <span class="number">6</span> * (a - now);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sum = sum + <span class="number">4</span> * (now - a);</span><br><span class="line">        now = a;</span><br><span class="line">        sum += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1009%20%E8%AF%B4%E5%8F%8D%E8%AF%9D%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1009-说反话-20-分"><a href="#1009-说反话-20-分" class="headerlink" title="1009 说反话 (20 分)"></a>1009 说反话 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805314941992960">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>读入字符串，从后往前输出即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">char</span> sk[<span class="number">110</span>];</span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> s;</span><br><span class="line">	getline(cin, s);</span><br><span class="line">	<span class="built_in">int</span> len = s.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(s[i] != <span class="string">&#x27; &#x27;</span>)	sk[++ t] = s[i];</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="built_in">int</span> j = t; j &gt;= <span class="number">1</span>; -- j)</span><br><span class="line">				cout&lt;&lt; sk[j];</span><br><span class="line">			cout&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">			t = <span class="number">0</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> j = t; j &gt;= <span class="number">0</span>; -- j)</span><br><span class="line">		cout&lt;&lt; sk[j];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1008%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E9%97%AE%E9%A2%98%20(20%20%E5%88%86)%EF%BC%88%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95%EF%BC%89%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1008-数组元素循环右移问题-20-分"><a href="#1008-数组元素循环右移问题-20-分" class="headerlink" title="1008 数组元素循环右移问题 (20 分)"></a>1008 数组元素循环右移问题 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805316250615808">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>方法一：链表建立起来，链表头的改变即为数组的循环移位<br>方法二：用temp存下数组的最后一个数，然后前面的数整体后移，再把tmep赋给第一个数</p>
<h2 id="代码实现1"><a href="#代码实现1" class="headerlink" title="代码实现1"></a>代码实现1</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ss</span>&#123;</span><br><span class="line">	<span class="type">int</span> value;</span><br><span class="line">	ss *next;</span><br><span class="line">&#125;;</span><br><span class="line">ss *head, *p, *r;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	head = <span class="keyword">new</span> ss;</span><br><span class="line">	r = head;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		p = <span class="keyword">new</span> ss;</span><br><span class="line">		p-&gt;value = x;</span><br><span class="line">		p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">		r-&gt;next = p;</span><br><span class="line">		r = p;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> begin = m % n;</span><br><span class="line">	<span class="keyword">if</span>(begin == <span class="number">0</span>)	begin = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span>	begin = n + <span class="number">1</span> - begin;</span><br><span class="line">	p -&gt; next = head -&gt; next;</span><br><span class="line">	p = <span class="keyword">new</span> ss;</span><br><span class="line">	p = head -&gt; next;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		t ++;</span><br><span class="line">		<span class="keyword">if</span>(t &gt;= begin)&#123;</span><br><span class="line">			cout&lt;&lt; p-&gt;value;</span><br><span class="line">			<span class="keyword">if</span>(t - begin + <span class="number">1</span> &lt; n)	cout&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">			<span class="keyword">else</span>	<span class="keyword">break</span>;</span><br><span class="line">		&#125;	</span><br><span class="line">		p = p-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码实现2"><a href="#代码实现2" class="headerlink" title="代码实现2"></a>代码实现2</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 105</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ArrayShift</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[MAXN], n, m;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ArrayShift</span>(a, n, m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ArrayShift</span><span class="params">( <span class="type">int</span> a[], <span class="type">int</span> n, <span class="type">int</span> m )</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(m --)&#123;</span><br><span class="line">		<span class="type">int</span> temp = a[n - <span class="number">1</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">			a[i + <span class="number">1</span>] = a[i];</span><br><span class="line">		a[<span class="number">0</span>] = temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1009%20Product%20of%20Polynomials%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1009-Product-of-Polynomials-25-分"><a href="#1009-Product-of-Polynomials-25-分" class="headerlink" title="1009 Product of Polynomials (25 分)"></a>1009 Product of Polynomials (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805509540921344">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用结构体存储需要计算的两个多项式，然后用双层循环计算结果多项式<br><font color=orange>要注意数组的大小问题</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 2005</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">	<span class="type">int</span> exp[N];</span><br><span class="line">	<span class="type">double</span> coe[N];</span><br><span class="line">&#125;POL;</span><br><span class="line">POL A, B, Ans;</span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;A.exp[i]);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;A.coe[A.exp[i]]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;B.exp[i]);</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;B.coe[B.exp[i]]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)</span><br><span class="line">			Ans.coe[A.exp[i] + B.exp[j]] += A.coe[A.exp[i]] * B.coe[B.exp[j]];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2000</span>; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">abs</span>(Ans.coe[i]) &gt;= <span class="number">0.05</span>) t ++;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2000</span>; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">abs</span>(Ans.coe[i]) &gt;= <span class="number">0.05</span>)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; %d %.1f&quot;</span>, i, Ans.coe[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="学习柳诺"><a href="#学习柳诺" class="headerlink" title="学习柳诺"></a>学习柳诺</h2><p>代码思路一致，放在下面。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n1, n2, a, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n1);</span><br><span class="line">    <span class="type">double</span> b, arr[<span class="number">1001</span>] = &#123;<span class="number">0.0</span>&#125;, ans[<span class="number">2001</span>] = &#123;<span class="number">0.0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n1; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %lf&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        arr[a] = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n2; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %lf&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1001</span>; j++)</span><br><span class="line">                ans[j + a] += arr[j] * b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2000</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span>(ans[i] != <span class="number">0.0</span>) cnt++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, cnt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2000</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span>(ans[i] != <span class="number">0.0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d %.1f&quot;</span>, i, ans[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1010%20Radix%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1010-Radix-25-分"><a href="#1010-Radix-25-分" class="headerlink" title="1010 Radix (25 分)"></a>1010 Radix (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805507225665536">题目链接</a></h2><h2 id="题目思路"><a href="#题目思路" class="headerlink" title="题目思路"></a>题目思路</h2><p><font color=red>二分法+进制转换<br><font color=green>核心的点有以下几个：<br>1.上下界的确定：上界是给定进制的那个数的十进制值，下界是未给定进制的数中最大字符的值加一<br>2.溢出的问题：尽管我们采用long long，但是仍然可能溢出，所以我们要做好特判防止错解。<br>3.二分法的模板结构</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">trans</span><span class="params">(string s, <span class="type">long</span> <span class="type">long</span> radix)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> tot = <span class="number">0</span>, r = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i])) tot += r * (s[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		<span class="keyword">else</span> tot += r * (s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>);</span><br><span class="line">		r = r * radix;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string a, b, temp;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> tag, rad, num;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;tag, &amp;rad);</span><br><span class="line">	<span class="keyword">if</span>(tag == <span class="number">1</span>) num = <span class="built_in">trans</span>(a, rad), temp = b;</span><br><span class="line">	<span class="keyword">else</span> num = <span class="built_in">trans</span>(b, rad), temp = a;</span><br><span class="line">	<span class="type">char</span> tp = *<span class="built_in">max_element</span>(temp.<span class="built_in">begin</span>(), temp.<span class="built_in">end</span>());</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> low = (<span class="built_in">isdigit</span>(tp) ? tp - <span class="string">&#x27;0&#x27;</span> : tp - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> high = <span class="built_in">max</span>(num, low);</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> Radix = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">while</span>(low &lt;= high)&#123;</span><br><span class="line">		<span class="type">long</span> <span class="type">long</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">		<span class="type">long</span> <span class="type">long</span> ans = <span class="built_in">trans</span>(temp, mid);</span><br><span class="line">		<span class="keyword">if</span>(ans &lt; <span class="number">0</span> || ans &gt; num) high = mid - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ans == num)&#123;</span><br><span class="line">			Radix = mid;</span><br><span class="line">			high = mid - <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> low = mid + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(Radix != <span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, Radix);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">puts</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="学习柳诺"><a href="#学习柳诺" class="headerlink" title="学习柳诺"></a>学习柳诺</h2><p>观摩一番大神的代码，有以下几点可以学习：</p>
<ol>
<li>一个string中最大字符<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="type">char</span> tp = *<span class="built_in">max_element</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>()); </span><br></pre></td></tr></table></figure></li>
<li>三目运算符和单目运算符的使用——简化代码长度</li>
</ol>
<p><font color=red>代码附在下面：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">convert</span><span class="params">(string n, <span class="type">long</span> <span class="type">long</span> radix)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> index = <span class="number">0</span>, temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = n.<span class="built_in">rbegin</span>(); it != n.<span class="built_in">rend</span>(); it++) &#123;</span><br><span class="line">        temp = <span class="built_in">isdigit</span>(*it) ? *it - <span class="string">&#x27;0&#x27;</span> : *it - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">        sum += temp * <span class="built_in">pow</span>(radix, index++);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">find_radix</span><span class="params">(string n, <span class="type">long</span> <span class="type">long</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> it = *<span class="built_in">max_element</span>(n.<span class="built_in">begin</span>(), n.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> low = (<span class="built_in">isdigit</span>(it) ? it - <span class="string">&#x27;0&#x27;</span>: it - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> high = <span class="built_in">max</span>(num, low);</span><br><span class="line">    <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> t = <span class="built_in">convert</span>(n, mid);</span><br><span class="line">        <span class="keyword">if</span> (t &lt; <span class="number">0</span> || t &gt; num) high = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (t == num) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> low = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string n1, n2;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> tag = <span class="number">0</span>, radix = <span class="number">0</span>, result_radix;</span><br><span class="line">    cin &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; tag &gt;&gt; radix;</span><br><span class="line">    result_radix = tag == <span class="number">1</span> ? <span class="built_in">find_radix</span>(n2, <span class="built_in">convert</span>(n1, radix)) : <span class="built_in">find_radix</span>(n1, <span class="built_in">convert</span>(n2, radix));</span><br><span class="line">    <span class="keyword">if</span> (result_radix != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, result_radix);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1010%20%E4%B8%80%E5%85%83%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%B1%82%E5%AF%BC%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1010-一元多项式求导-25-分"><a href="#1010-一元多项式求导-25-分" class="headerlink" title="1010 一元多项式求导 (25 分)"></a>1010 一元多项式求导 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805313708867584">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>一次读入两个数，然后对它进行求导就好。<br>要注意的是输入只有两个0时，输出也只有两个0（我不理解）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> a, b;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;</span><br><span class="line">	<span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt; <span class="string">&quot;0 0&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>	cout&lt;&lt; a * b&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; b - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt; a&gt;&gt; b)</span><br><span class="line">		<span class="keyword">if</span>(b != <span class="number">0</span>)	cout&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; a * b&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; b - <span class="number">1</span>; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1011%20World%20Cup%20Betting%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1011-World-Cup-Betting-20-分"><a href="#1011-World-Cup-Betting-20-分" class="headerlink" title="1011 World Cup Betting (20 分)"></a>1011 World Cup Betting (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805504927186944">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>模拟一下题目要求就好，主要考察英语能力（bushi</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="type">char</span> Cr[N] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;W&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;L&#x27;</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">double</span> tot = <span class="number">1</span>, x, Max;</span><br><span class="line">	<span class="type">int</span> Max_t;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)&#123;</span><br><span class="line">		Max = <span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">			<span class="keyword">if</span>(x &gt; Max)&#123;</span><br><span class="line">				Max = x;</span><br><span class="line">				Max_t = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		tot *= Max;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, Cr[Max_t]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, (tot * <span class="number">0.65</span> - <span class="number">1</span>) * <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1011%20A+B%20%E5%92%8C%20C%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1011-A-B-和-C-15-分"><a href="#1011-A-B-和-C-15-分" class="headerlink" title="1011 A+B 和 C (15 分)"></a>1011 A+B 和 C (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805312417021952">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用long long数据类型即可</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">long</span> <span class="built_in">long</span> a, b, c;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">		<span class="keyword">if</span>(a + b &gt; c) printf(<span class="string">&quot;Case #%d: true&quot;</span>, i);</span><br><span class="line">		<span class="keyword">else</span>	printf(<span class="string">&quot;Case #%d: false&quot;</span>, i);</span><br><span class="line">		<span class="keyword">if</span>(i != n) cout&lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1012%20The%20Best%20Rank%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1012-The-Best-Rank-25-分"><a href="#1012-The-Best-Rank-25-分" class="headerlink" title="1012 The Best Rank (25 分)"></a>1012 The Best Rank (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805502658068480">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p><font color=red>优先队列+数组</p>
<p>分四种情况（C、M、E、A）压入优先队列中<br>然后把每个科目的排名存在各自的数组中<br>然后每种情况进行查询即可</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点二：成绩相同<br>我虽然注意到了这一点，但是并没有过<br>原因在于：对于这样一组数据98 95 96 95 92<br>排名数据为：1 3 2 3 5<br>而不是：1 3 2 3 4<br>改过之后就满分了！<br><img src="https://img-blog.csdnimg.cn/5d55ce5abc13408eb72275db801326ca.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 2005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> T 1000000</span></span><br><span class="line"><span class="type">char</span> s[<span class="number">5</span>] = &#123;<span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	<span class="type">int</span> Mark_C, Mark_M, Mark_E, Mark_ave;</span><br><span class="line">&#125;STU;</span><br><span class="line">STU stu[N];</span><br><span class="line">priority_queue&lt; <span class="type">int</span> &gt;fro_C, fro_M, fro_E, fro_ave;</span><br><span class="line"><span class="type">int</span> id[T];</span><br><span class="line"><span class="type">int</span> C[T], M[T], E[T], Ave[T];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">(priority_queue&lt; <span class="type">int</span> &gt; que, <span class="type">int</span> *mp)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> last = <span class="number">-1</span>, rank = <span class="number">0</span>, t = <span class="number">0</span>;;</span><br><span class="line">	<span class="keyword">while</span>(!que.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		++ t;</span><br><span class="line">		<span class="type">int</span> x = que.<span class="built_in">top</span>();</span><br><span class="line">		<span class="keyword">if</span>(x != last) rank = t;</span><br><span class="line">		mp[x] = rank;</span><br><span class="line">		last = x;</span><br><span class="line">		que.<span class="built_in">pop</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> ans_char;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Get_ans</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> Min = <span class="number">1e8</span>, Min_t;</span><br><span class="line">	<span class="keyword">if</span>(E[stu[id[x]].Mark_E] &lt;= Min) Min = E[stu[id[x]].Mark_E], Min_t = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(M[stu[id[x]].Mark_M] &lt;= Min) Min = M[stu[id[x]].Mark_M], Min_t = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(C[stu[id[x]].Mark_C] &lt;= Min) Min = C[stu[id[x]].Mark_C], Min_t = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">if</span>(Ave[stu[id[x]].Mark_ave] &lt;= Min) Min = Ave[stu[id[x]].Mark_ave], Min_t = <span class="number">3</span>;</span><br><span class="line">	ans_char = s[Min_t];</span><br><span class="line">	<span class="keyword">return</span> Min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;stu[i].Id, &amp;stu[i].Mark_C, &amp;stu[i].Mark_M, &amp;stu[i].Mark_E);</span><br><span class="line">		id[stu[i].Id] = i;</span><br><span class="line">		stu[i].Mark_ave = (stu[i].Mark_C + stu[i].Mark_M + stu[i].Mark_E) / <span class="number">3</span>;</span><br><span class="line">		fro_C.<span class="built_in">push</span>(stu[i].Mark_C);</span><br><span class="line">		fro_M.<span class="built_in">push</span>(stu[i].Mark_M);</span><br><span class="line">		fro_E.<span class="built_in">push</span>(stu[i].Mark_E);</span><br><span class="line">		fro_ave.<span class="built_in">push</span>(stu[i].Mark_ave);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">work</span>(fro_C, C);</span><br><span class="line">	<span class="built_in">work</span>(fro_M, M);</span><br><span class="line">	<span class="built_in">work</span>(fro_E, E);</span><br><span class="line">	<span class="built_in">work</span>(fro_ave, Ave);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="keyword">if</span>(!id[x])&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;N/A\n&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> ans = <span class="built_in">Get_ans</span>(x);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d %c\n&quot;</span>, ans, ans_char);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="学习柳诺"><a href="#学习柳诺" class="headerlink" title="学习柳诺"></a>学习柳诺</h2><p>柳神的代码思路使用了sort排序<br>此外有一点我觉得比较值得采用：<br><img src="https://img-blog.csdnimg.cn/467719a83d154e6a8b8e8ee4bdd7a5b0.png" alt="在这里插入图片描述"><br>这个题我用了单独的名称和数组，所以看起来就会不太简洁<br>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> id, best;</span><br><span class="line">    <span class="type">int</span> score[<span class="number">4</span>], rank[<span class="number">4</span>];</span><br><span class="line">&#125;stu[<span class="number">2005</span>];</span><br><span class="line"><span class="type">int</span> exist[<span class="number">1000000</span>], flag = <span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(node a, node b)</span> </span>&#123;<span class="keyword">return</span> a.score[flag] &gt; b.score[flag];&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, id;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;stu[i].id, &amp;stu[i].score[<span class="number">1</span>], &amp;stu[i].score[<span class="number">2</span>], &amp;stu[i].score[<span class="number">3</span>]);</span><br><span class="line">        stu[i].score[<span class="number">0</span>] = (stu[i].score[<span class="number">1</span>] + stu[i].score[<span class="number">2</span>] + stu[i].score[<span class="number">3</span>]) / <span class="number">3.0</span> + <span class="number">0.5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(flag = <span class="number">0</span>; flag &lt;= <span class="number">3</span>; flag++) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(stu, stu + n, cmp1);</span><br><span class="line">        stu[<span class="number">0</span>].rank[flag] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            stu[i].rank[flag] = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].score[flag] == stu[i<span class="number">-1</span>].score[flag])</span><br><span class="line">                stu[i].rank[flag] = stu[i<span class="number">-1</span>].rank[flag];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        exist[stu[i].id] = i + <span class="number">1</span>;</span><br><span class="line">        stu[i].best = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> minn = stu[i].rank[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(stu[i].rank[j] &lt; minn) &#123;</span><br><span class="line">                minn = stu[i].rank[j];</span><br><span class="line">                stu[i].best = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">char</span> c[<span class="number">5</span>] = &#123;<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;E&#x27;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">        <span class="type">int</span> temp = exist[id];</span><br><span class="line">        <span class="keyword">if</span>(temp) &#123;</span><br><span class="line">            <span class="type">int</span> best = stu[temp<span class="number">-1</span>].best;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %c\n&quot;</span>, stu[temp<span class="number">-1</span>].rank[best], c[best]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;N/A\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1012%20%E6%95%B0%E5%AD%97%E5%88%86%E7%B1%BB%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1012-数字分类-20-分"><a href="#1012-数字分类-20-分" class="headerlink" title="1012 数字分类 (20 分)"></a>1012 数字分类 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805311146147840">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用switch判断各种情况，然后分类处理即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> sum1, sum2, t1 ,t2, t3, t4, sum4, max5, change = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> N;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="built_in">int</span> x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= N; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="keyword">switch</span>(x % <span class="number">5</span>)&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">				<span class="keyword">if</span>(x % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">					sum1 += x;	</span><br><span class="line">					t1 ++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				t2 ++;</span><br><span class="line">				sum2 += x * change;</span><br><span class="line">				change = <span class="number">-1</span> * change;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				t3 ++;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				t4 ++;</span><br><span class="line">				sum4 += x;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				<span class="keyword">if</span>(x &gt; max5) max5 = x;</span><br><span class="line">				<span class="keyword">break</span>;		</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">double</span> ans4 = sum4 * <span class="number">1.0</span> / t4;</span><br><span class="line">	<span class="keyword">if</span>(t1 != <span class="number">0</span>) cout&lt;&lt; sum1&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="keyword">else</span> cout&lt;&lt; <span class="string">&quot;N &quot;</span>;</span><br><span class="line">	<span class="keyword">if</span>(t2 != <span class="number">0</span>) cout&lt;&lt; sum2&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="keyword">else</span> cout&lt;&lt; <span class="string">&quot;N &quot;</span>;</span><br><span class="line">	<span class="keyword">if</span>(t3 != <span class="number">0</span>)	cout&lt;&lt; t3&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="keyword">else</span> cout&lt;&lt; <span class="string">&quot;N &quot;</span>;</span><br><span class="line">	<span class="keyword">if</span>(t4 != <span class="number">0</span>) cout&lt;&lt; <span class="keyword">fixed</span>&lt;&lt; setprecision(<span class="number">1</span>)&lt;&lt; ans4;</span><br><span class="line">	<span class="keyword">else</span>	cout&lt;&lt; <span class="string">&quot;N&quot;</span>;</span><br><span class="line">	<span class="keyword">if</span>(max5 != <span class="number">0</span>) cout&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; max5;</span><br><span class="line">	<span class="keyword">else</span>	cout&lt;&lt; <span class="string">&quot; N&quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1013%20%E6%95%B0%E7%B4%A0%E6%95%B0%20(20%20%E5%88%86)(%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1013-数素数-20-分"><a href="#1013-数素数-20-分" class="headerlink" title="1013 数素数 (20 分)"></a>1013 数素数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p><a href="https://blog.csdn.net/qq_34771124/article/details/87465483">欧拉筛——很好用的素数筛</a></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> prime[<span class="number">1000010</span>], <span class="keyword">on</span>[<span class="number">1000010</span>];</span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span>()</span>&#123;</span><br><span class="line">	memset(<span class="keyword">on</span>, <span class="number">1</span>, <span class="keyword">sizeof</span>(<span class="keyword">on</span>));</span><br><span class="line">	<span class="keyword">on</span>[<span class="number">0</span>] = <span class="keyword">on</span>[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">on</span>[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">1000000</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">on</span>[i]) prime[++ t] = i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= t &amp;&amp; prime[j] * i &lt;= <span class="number">1000000</span>; ++ j)&#123;</span><br><span class="line">			<span class="keyword">on</span>[prime[j] * i] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	pre();</span><br><span class="line">	<span class="built_in">int</span> sum = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">int</span> m, n;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = m; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(sum &gt;= <span class="number">1</span> &amp;&amp; sum &lt;= <span class="number">9</span>)&#123;</span><br><span class="line">			cout&lt;&lt; prime[i];</span><br><span class="line">			<span class="keyword">if</span>(i != n) cout&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">			sum++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cout&lt;&lt; prime[i]&lt;&lt; endl;</span><br><span class="line">			sum = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1014%20Waiting%20in%20Line%20(30%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%EF%BC%8C4%EF%BC%8C5%EF%BC%89/</url>
    <content><![CDATA[<p>@[toc]</p>
<h1 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805498207911936">题目链接</a></h1><h1 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h1><p><font color=orange>这里我用的是结构体，分别是counter（柜台）和per（用户）<br>分别记录柜台的信息和人的信息<br>然后从时间0到时间540跑一次循环，进行实时更迭<br>然后对于每次询问，用这个人的开始时间和结束时间来判断能否服务以及输出结果</p>
<h1 id="测试点分析"><a href="#测试点分析" class="headerlink" title="测试点分析"></a>测试点分析</h1><p><font color=red>测试点2，4，5都是有关输出的问题<br>（1）对于2，5的情况：一个人如果开始时间在540之前（不包括540）即使结束时间超过540，依旧要服务<br>（2）对于4的情况：一个人如果在银行关门的时候都没排上队，那么输出Sorry</p>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 25</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 1005</span></span><br><span class="line"><span class="keyword">struct</span>&#123;</span><br><span class="line">	<span class="type">int</span> last_time;</span><br><span class="line">	<span class="type">int</span> update_time[M];</span><br><span class="line">	<span class="type">int</span> tp, now = <span class="number">1</span>;</span><br><span class="line">&#125;counter[N];</span><br><span class="line"><span class="keyword">struct</span>&#123;</span><br><span class="line">	<span class="type">int</span> sta_time, end_time, pro_time;</span><br><span class="line">&#125;per[M];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> time)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(start &gt;= <span class="number">540</span>) <span class="built_in">printf</span>(<span class="string">&quot;Sorry\n&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d\n&quot;</span>, <span class="number">8</span> + time / <span class="number">60</span>, time % <span class="number">60</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, k, q;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k, &amp;q);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;per[i].pro_time);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			per[(i - <span class="number">1</span>) * n + j].sta_time = counter[j].last_time;</span><br><span class="line">			counter[j].update_time[++ counter[j].tp] = counter[j].last_time + per[(i - <span class="number">1</span>) * n + j].pro_time;</span><br><span class="line">			per[(i - <span class="number">1</span>) * n + j].end_time = per[(i - <span class="number">1</span>) * n + j].sta_time + per[(i - <span class="number">1</span>) * n + j].pro_time;</span><br><span class="line">			counter[j].last_time = per[(i - <span class="number">1</span>) * n + j].end_time;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="type">int</span> pt = n * m + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">540</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)</span><br><span class="line">			<span class="keyword">if</span>(counter[j].update_time[counter[j].now] == i &amp;&amp; pt &lt;= k)&#123;</span><br><span class="line">				++ counter[j].now;</span><br><span class="line">				counter[j].update_time[++ counter[j].tp] = counter[j].last_time + per[pt].pro_time;</span><br><span class="line">				per[pt].sta_time = counter[j].last_time;</span><br><span class="line">				per[pt].end_time = per[pt].pro_time + per[pt].sta_time;</span><br><span class="line">				counter[j].last_time = per[pt].end_time;</span><br><span class="line">				pt ++;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = pt; i &lt;= k; ++ i)</span><br><span class="line">		per[i].sta_time = <span class="number">541</span>;</span><br><span class="line">	<span class="type">int</span> query;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;query);</span><br><span class="line">		<span class="built_in">print</span>(per[query].sta_time, per[query].end_time);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="学习柳神"><a href="#学习柳神" class="headerlink" title="学习柳神"></a>学习柳神</h2><p>大致思路一致，不同的地方是：柳神的代码采用了队列<br>下面是她的代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="type">int</span> poptime, endtime;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, k, q, index = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k, &amp;q);</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">time</span><span class="params">(k + <span class="number">1</span>)</span>, <span class="title">result</span><span class="params">(k + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;time[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;node&gt; <span class="title">window</span><span class="params">(n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">bool</span>&gt; <span class="title">sorry</span><span class="params">(k + <span class="number">1</span>, <span class="literal">false</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(index &lt;= k) &#123;</span><br><span class="line">                window[j].q.<span class="built_in">push</span>(time[index]);</span><br><span class="line">                <span class="keyword">if</span>(window[j].endtime &gt;= <span class="number">540</span>)</span><br><span class="line">                    sorry[index] = <span class="literal">true</span>;</span><br><span class="line">                window[j].endtime += time[index];</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">1</span>)</span><br><span class="line">                    window[j].poptime = window[j].endtime;</span><br><span class="line">                result[index] = window[j].endtime;</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(index &lt;= k) &#123;</span><br><span class="line">        <span class="type">int</span> tempmin = window[<span class="number">1</span>].poptime, tempwindow = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(window[i].poptime &lt; tempmin) &#123;</span><br><span class="line">                tempwindow = i;</span><br><span class="line">                tempmin = window[i].poptime;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        window[tempwindow].q.<span class="built_in">pop</span>();</span><br><span class="line">        window[tempwindow].q.<span class="built_in">push</span>(time[index]);</span><br><span class="line">        window[tempwindow].poptime +=  window[tempwindow].q.<span class="built_in">front</span>();</span><br><span class="line">        <span class="keyword">if</span>(window[tempwindow].endtime &gt;= <span class="number">540</span>)</span><br><span class="line">            sorry[index] = <span class="literal">true</span>;</span><br><span class="line">        window[tempwindow].endtime += time[index];</span><br><span class="line">        result[index] = window[tempwindow].endtime;</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; i++) &#123;</span><br><span class="line">        <span class="type">int</span> query, minute;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;query);</span><br><span class="line">        minute = result[query];</span><br><span class="line">        <span class="keyword">if</span>(sorry[query] == <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Sorry\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d\n&quot;</span>,(minute + <span class="number">480</span>) / <span class="number">60</span>, (minute + <span class="number">480</span>) % <span class="number">60</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1015%20Reversible%20Primes%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h1 id="一、题目链接"><a href="#一、题目链接" class="headerlink" title="一、题目链接"></a>一、<a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805495863296000">题目链接</a></h1><h1 id="二、算法分析"><a href="#二、算法分析" class="headerlink" title="二、算法分析"></a>二、算法分析</h1><p>这里借鉴网上一位兄弟的分析（<a href="https://blog.csdn.net/ljhsq/article/details/116661755?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1.pc_relevant_default&utm_relevant_index=2">原文链接</a>）<br><img src="https://img-blog.csdnimg.cn/40aae057a9c34bbab37b042f08e39573.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h1 id="三、测试点"><a href="#三、测试点" class="headerlink" title="三、测试点"></a>三、测试点</h1><p>这里我错在了测试点3，问题在于一个较大的数转化为二进制之后用int类型存储可能放不下，因此改为longlong即可。</p>
<h1 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">convert</span><span class="params">(<span class="type">int</span> test, <span class="type">int</span> radix)</span></span>&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> tot = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>, p = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(test)&#123;</span><br><span class="line">		tot = tot * <span class="number">10</span> + test % radix;</span><br><span class="line">		test /= radix;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(tot)&#123;</span><br><span class="line">		sum += p * (tot % <span class="number">10</span>);</span><br><span class="line">		p *= radix;</span><br><span class="line">		tot /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(x == <span class="number">2</span> || x == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(x); ++ i)</span><br><span class="line">		<span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> test, radix;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;test))&#123;</span><br><span class="line">		<span class="keyword">if</span>(test &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;radix);</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">judge</span>(test))&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> temp = <span class="built_in">convert</span>(test, radix);</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">judge</span>(temp)) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="五、学习柳神"><a href="#五、学习柳神" class="headerlink" title="五、学习柳神"></a>五、学习柳神</h1><p>这里的区别在于我把处理函数封装了，而柳神用数组处理，本质上相似。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isprime</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> sqr = <span class="built_in">int</span>(<span class="built_in">sqrt</span>(n * <span class="number">1.0</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= sqr; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, d;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;d);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isprime</span>(n) == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> len = <span class="number">0</span>, arr[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            arr[len++] = n % d;</span><br><span class="line">            n = n / d;</span><br><span class="line">        &#125;<span class="keyword">while</span>(n != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">            n = n * d + arr[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, <span class="built_in">isprime</span>(n) ? <span class="string">&quot;Yes\n&quot;</span> : <span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1013%20Battle%20Over%20Cities%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1013-Battle-Over-Cities-25-分"><a href="#1013-Battle-Over-Cities-25-分" class="headerlink" title="1013 Battle Over Cities (25 分)"></a>1013 Battle Over Cities (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805500414115840">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>最终采用了DFS求连通分量数目，然后减去一的值即为题目答案。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我卡在测试点二好久，上网看到有的人用并查集也出现了测试点二卡住的情况，测试点二应该是一个这样的问题——是否有重复合并的情况，我修改了好久我最初思路的代码，最后也没通过（如果使用并查集来处理，应该不会出现这样的情况）<br><font color=green>错误代码1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 500005</span></span><br><span class="line"><span class="type">int</span> u[N], v[N], on[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_sum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(on, <span class="number">0</span>, <span class="built_in">sizeof</span>(on));</span><br><span class="line">	<span class="type">int</span> tot = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(u[i] == x || v[i] == x) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(!on[u[i]] || !on[v[i]])&#123;</span><br><span class="line">			on[u[i]] = on[v[i]] = <span class="number">1</span>;</span><br><span class="line">			tot ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, k, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;u[i], &amp;v[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n - <span class="number">2</span> - <span class="built_in">get_sum</span>(x, m));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font color=green>错误代码2</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line">vector&lt; <span class="type">int</span> &gt;vec[N];</span><br><span class="line"><span class="type">int</span> on[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_sum</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(on, <span class="number">0</span>, <span class="built_in">sizeof</span>(on));</span><br><span class="line">	<span class="type">int</span> tot = <span class="number">0</span>;</span><br><span class="line">	on[x] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(on[i]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; vec[i].<span class="built_in">size</span>(); ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(vec[i][j] == x) <span class="keyword">continue</span>;</span><br><span class="line">			on[vec[i][j]] = <span class="number">1</span>;</span><br><span class="line">			tot ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, k, x, y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		vec[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">		vec[y].<span class="built_in">push_back</span>(x);		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">max</span>(<span class="number">0</span>, n - <span class="number">2</span> - <span class="built_in">get_sum</span>(x, n)));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p><font color=red>AC代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line">vector&lt; <span class="type">int</span> &gt;vec[N];</span><br><span class="line"><span class="type">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">	vis[u] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; vec[u].<span class="built_in">size</span>(); ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> v = vec[u][i];</span><br><span class="line">		<span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">			vis[v] = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">Dfs</span>(v);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, k, x, y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		vec[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">		vec[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">		vis[x] = <span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> tot = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line">				<span class="built_in">Dfs</span>(i);</span><br><span class="line">				tot ++;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tot - <span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="学习柳婼"><a href="#学习柳婼" class="headerlink" title="学习柳婼"></a>学习柳婼</h2><p>柳神代码和我的AC代码思路一致，她使用的是邻接矩阵存图，我用的vector</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> v[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="type">bool</span> visit[<span class="number">1010</span>];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> node)</span> </span>&#123;</span><br><span class="line">    visit[node] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(visit[i] == <span class="literal">false</span> &amp;&amp; v[node][i] == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">dfs</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> m, k, a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        v[a][b] = v[b][a] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">        <span class="built_in">fill</span>(visit, visit + <span class="number">1010</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        visit[a] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(visit[j] == <span class="literal">false</span>) &#123;</span><br><span class="line">                <span class="built_in">dfs</span>(j);</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1015%20%E5%BE%B7%E6%89%8D%E8%AE%BA%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1015-德才论-25-分"><a href="#1015-德才论-25-分" class="headerlink" title="1015 德才论 (25 分)"></a>1015 德才论 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805307551629312">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>本质上就是结构体的使用</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="keyword">struct</span> student&#123;</span><br><span class="line">	<span class="built_in">int</span> id;</span><br><span class="line">	<span class="built_in">int</span> d, c;</span><br><span class="line">	<span class="built_in">int</span> sum;</span><br><span class="line">&#125;;</span><br><span class="line">student a[N], b[N], c[N], d[N];</span><br><span class="line"><span class="built_in">int</span> t_a, t_b, t_c, t_d;</span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">cmp</span>(<span class="params">student s1, student s2</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(s1.sum &gt; s2.sum) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(s1.sum &lt; s2.sum) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(s1.d &gt; s2.d) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s1.d &lt; s2.d) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">return</span> s1.id &lt; s2.id;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n, l, h;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;l, &amp;h);</span><br><span class="line">	<span class="built_in">int</span> ID, D, C;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;ID, &amp;D, &amp;C);</span><br><span class="line">		<span class="keyword">if</span>(D &lt; l || C &lt; l) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(D &gt;= h &amp;&amp; C &gt;= h)&#123;</span><br><span class="line">			++ t_a;</span><br><span class="line">			a[t_a].id = ID;</span><br><span class="line">			a[t_a].d = D;</span><br><span class="line">			a[t_a].c = C;</span><br><span class="line">			a[t_a].sum = D + C;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(D &gt;= h &amp;&amp; C &lt; h)&#123;</span><br><span class="line">			++ t_b;</span><br><span class="line">			b[t_b].id = ID;</span><br><span class="line">			b[t_b].d = D;</span><br><span class="line">			b[t_b].c = C;</span><br><span class="line">			b[t_b].sum = D + C;	</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(D &lt; h &amp;&amp; C &lt; h &amp;&amp; D &gt;= C)&#123;</span><br><span class="line">			++ t_c;</span><br><span class="line">			c[t_c].id = ID;</span><br><span class="line">			c[t_c].d = D;</span><br><span class="line">			c[t_c].c = C;</span><br><span class="line">			c[t_c].sum = D + C;	</span><br><span class="line">			<span class="keyword">continue</span>;		</span><br><span class="line">		&#125;</span><br><span class="line">			++ t_d;</span><br><span class="line">			d[t_d].id = ID;</span><br><span class="line">			d[t_d].d = D;</span><br><span class="line">			d[t_d].c = C;</span><br><span class="line">			d[t_d].sum = D + C;		</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a + <span class="number">1</span>, a + t_a + <span class="number">1</span>, cmp);</span><br><span class="line">	sort(b + <span class="number">1</span>, b + t_b + <span class="number">1</span>, cmp);</span><br><span class="line">	sort(c + <span class="number">1</span>, c + t_c + <span class="number">1</span>, cmp);</span><br><span class="line">	sort(d + <span class="number">1</span>, d + t_d + <span class="number">1</span>, cmp);</span><br><span class="line">	cout&lt;&lt; t_a + t_b + t_c + t_d&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t_a; ++ i) cout&lt;&lt; a[i].id&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; a[i].d&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; a[i].c&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t_b; ++ i) cout&lt;&lt; b[i].id&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; b[i].d&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; b[i].c&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t_c; ++ i) cout&lt;&lt; c[i].id&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; c[i].d&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; c[i].c&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t_d; ++ i) cout&lt;&lt; d[i].id&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; d[i].d&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; d[i].c&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1016%20%E9%83%A8%E5%88%86A+B%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1016-部分A-B-15-分"><a href="#1016-部分A-B-15-分" class="headerlink" title="1016 部分A+B (15 分)"></a>1016 部分A+B (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805306310115328">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>字符串与字符的使用，从头到尾跑一次字符串的每一个字符，统计出现的个数，并计算总和。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a, b;</span><br><span class="line">	<span class="built_in">char</span> A, B;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; A&gt;&gt; b&gt;&gt; B;</span><br><span class="line">	<span class="built_in">int</span> la = a.length();</span><br><span class="line">	<span class="built_in">int</span> lb = b.length();</span><br><span class="line">	<span class="built_in">int</span> t1 = <span class="number">0</span>, t2 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; la; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(a[i] == A) t1 ++;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lb; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(b[i] == B) t2 ++;</span><br><span class="line">	<span class="built_in">long</span> <span class="built_in">long</span> tot = <span class="number">0</span>, cal = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t1; ++ i)&#123;</span><br><span class="line">		tot += cal * (A - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		cal *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cal = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t2; ++ i)&#123;</span><br><span class="line">		tot += cal * (B - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">		cal *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(<span class="string">&quot;%lld&quot;</span>, tot);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1014%20%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E7%9A%84%E7%BA%A6%E4%BC%9A%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1014-福尔摩斯的约会-20-分"><a href="#1014-福尔摩斯的约会-20-分" class="headerlink" title="1014 福尔摩斯的约会 (20 分)"></a>1014 福尔摩斯的约会 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805308755394560">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>模拟一下题目说的过程就好。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="built_in">string</span> s[<span class="number">10</span>] = &#123;<span class="string">&quot;MON &quot;</span>, <span class="string">&quot;TUE &quot;</span>, <span class="string">&quot;WED &quot;</span>, <span class="string">&quot;THU &quot;</span>, <span class="string">&quot;FRI &quot;</span>, <span class="string">&quot;SAT &quot;</span>, <span class="string">&quot;SUN &quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">min</span>(<span class="params"><span class="built_in">int</span> a, <span class="built_in">int</span> b</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a &gt; b) <span class="keyword">return</span> b;</span><br><span class="line">	<span class="keyword">else</span>	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">judge</span>(<span class="params"><span class="built_in">char</span> a</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;Z&#x27;</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;z&#x27;</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;9&#x27;</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a, b, c, d;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b&gt;&gt; c&gt;&gt; d;</span><br><span class="line">	<span class="built_in">int</span> len1 = min(a.size(), b.size());</span><br><span class="line">	<span class="built_in">int</span> len2 = min(c.size(), d.size());</span><br><span class="line">	<span class="built_in">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len1; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] == b[i] &amp;&amp; t == <span class="number">1</span> &amp;&amp; (a[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i] &lt;= <span class="string">&#x27;G&#x27;</span>))&#123;</span><br><span class="line">			<span class="built_in">int</span> x = a[i] - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">			cout&lt;&lt; s[x];</span><br><span class="line">			t ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a[i] == b[i] &amp;&amp; t == <span class="number">2</span>)&#123;</span><br><span class="line">			<span class="built_in">int</span> flag = judge(a[i]);</span><br><span class="line">			<span class="built_in">int</span> x;</span><br><span class="line">			<span class="keyword">switch</span> (flag)&#123;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">					x = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">					t ++;</span><br><span class="line">					cout&lt;&lt;<span class="string">&#x27;0&#x27;</span>&lt;&lt; x&lt;&lt; <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">					x = a[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">					<span class="keyword">if</span>(x &lt;= <span class="number">23</span>)&#123;</span><br><span class="line">						t ++;</span><br><span class="line">						cout&lt;&lt; x&lt;&lt; <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len2; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(c[i] == d[i] &amp;&amp; isalpha(c[i]))&#123;</span><br><span class="line">			printf(<span class="string">&quot;%02d&quot;</span>, i);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1018%20%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1018-锤子剪刀布-20-分"><a href="#1018-锤子剪刀布-20-分" class="headerlink" title="1018 锤子剪刀布 (20 分)"></a>1018 锤子剪刀布 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805304020025344">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>对于每组数据，都用对应的变量存储结果</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">char</span> s[<span class="number">4</span>] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> player&#123;</span><br><span class="line">	<span class="built_in">int</span> winsum, losesum, drawsum;</span><br><span class="line">&#125;;</span><br><span class="line">player x, y;</span><br><span class="line"><span class="built_in">int</span> xwin[<span class="number">5</span>], ywin[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calculate</span>(<span class="params"><span class="built_in">char</span> a, <span class="built_in">char</span> b</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a == b)&#123;</span><br><span class="line">		x.drawsum ++;</span><br><span class="line">		y.drawsum ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((a == <span class="string">&#x27;J&#x27;</span> &amp;&amp; b == <span class="string">&#x27;B&#x27;</span>) || (a == <span class="string">&#x27;C&#x27;</span> &amp;&amp; b == <span class="string">&#x27;J&#x27;</span>) || (a == <span class="string">&#x27;B&#x27;</span> &amp;&amp; b == <span class="string">&#x27;C&#x27;</span>))&#123;</span><br><span class="line">		x.winsum ++;</span><br><span class="line">		y.losesum ++;</span><br><span class="line">		<span class="keyword">if</span>(a == <span class="string">&#x27;J&#x27;</span>) xwin[<span class="number">1</span>] ++;</span><br><span class="line">		<span class="keyword">if</span>(a == <span class="string">&#x27;C&#x27;</span>) xwin[<span class="number">2</span>] ++;</span><br><span class="line">		<span class="keyword">if</span>(a == <span class="string">&#x27;B&#x27;</span>) xwin[<span class="number">3</span>] ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((b == <span class="string">&#x27;J&#x27;</span> &amp;&amp; a == <span class="string">&#x27;B&#x27;</span>) || (b == <span class="string">&#x27;C&#x27;</span> &amp;&amp; a == <span class="string">&#x27;J&#x27;</span>) || (b == <span class="string">&#x27;B&#x27;</span> &amp;&amp; a == <span class="string">&#x27;C&#x27;</span>))&#123;</span><br><span class="line">		y.winsum ++;</span><br><span class="line">		x.losesum ++;</span><br><span class="line">		<span class="keyword">if</span>(b == <span class="string">&#x27;J&#x27;</span>) ywin[<span class="number">1</span>] ++;</span><br><span class="line">		<span class="keyword">if</span>(b == <span class="string">&#x27;C&#x27;</span>) ywin[<span class="number">2</span>] ++;</span><br><span class="line">		<span class="keyword">if</span>(b == <span class="string">&#x27;B&#x27;</span>) ywin[<span class="number">3</span>] ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	x.drawsum = x.losesum = x.winsum =  <span class="number">0</span>;</span><br><span class="line">	y.drawsum = y.losesum = y.winsum =  <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">int</span> N;</span><br><span class="line">	<span class="built_in">char</span> a, b;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= N; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot; %c %c&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">		calculate(a, b);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt; x.winsum&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; x.drawsum&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; x.losesum&lt;&lt; endl;</span><br><span class="line">	cout&lt;&lt; y.winsum&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; y.drawsum&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; y.losesum&lt;&lt; endl;</span><br><span class="line">	<span class="built_in">int</span> com = <span class="number">0</span>, cnt1, cnt2;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(xwin[i] &gt;= com)&#123;</span><br><span class="line">			com = xwin[i];</span><br><span class="line">			cnt1 = i;</span><br><span class="line">		&#125;</span><br><span class="line">	com = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(ywin[i] &gt;= com)&#123;</span><br><span class="line">			com = ywin[i];</span><br><span class="line">			cnt2 = i;</span><br><span class="line">		&#125;</span><br><span class="line">	cout&lt;&lt; s[cnt1]&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; s[cnt2];	 </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1020%20%E6%9C%88%E9%A5%BC%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1020-月饼-25-分"><a href="#1020-月饼-25-分" class="headerlink" title="1020 月饼 (25 分)"></a>1020 月饼 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805301562163200">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>贪心算法+结构体排序<br>优先卖出单个月饼获利最大的那种月饼，总获利肯定最大</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="keyword">struct</span> mooncake&#123;</span><br><span class="line">	<span class="built_in">double</span> left;</span><br><span class="line">	<span class="built_in">double</span> <span class="keyword">value</span>;</span><br><span class="line">	<span class="built_in">double</span> average_value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> mooncake mk[N];</span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">cmp</span>(<span class="params">mooncake a, mooncake b</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.average_value &gt; b.average_value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	<span class="built_in">double</span> tp;</span><br><span class="line">	scanf(<span class="string">&quot;%d%lf&quot;</span>, &amp;n, &amp;tp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		scanf(<span class="string">&quot;%lf&quot;</span>, &amp;mk[i].left);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%lf&quot;</span>, &amp;mk[i].<span class="keyword">value</span>);</span><br><span class="line">		mk[i].average_value = <span class="number">1.0</span> * mk[i].<span class="keyword">value</span> / mk[i].left;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">double</span> cnt = <span class="number">0</span>;</span><br><span class="line">	sort(mk + <span class="number">1</span>, mk + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(mk[i].left &lt; tp)&#123;</span><br><span class="line">			cnt += mk[i].<span class="keyword">value</span>;</span><br><span class="line">			tp -= mk[i].left;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cnt += tp / mk[i].left * mk[i].<span class="keyword">value</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(<span class="string">&quot;%.2f&quot;</span>, cnt);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1017%20A%E9%99%A4%E4%BB%A5B%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1017-A除以B-20-分"><a href="#1017-A除以B-20-分" class="headerlink" title="1017 A除以B (20 分)"></a>1017 A除以B (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805305181847552">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>本质上是一个高精度除以低精度的算法（<a href="https://blog.csdn.net/qq_34771124/article/details/121453990">高精度模板总结</a>）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000000</span></span><br><span class="line"><span class="built_in">int</span> t1[N], c[N];</span><br><span class="line"><span class="built_in">char</span> a[N];<span class="comment">// 两个数</span></span><br><span class="line"><span class="built_in">int</span> b; </span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;<span class="comment">//输入两个数 </span></span><br><span class="line">	<span class="built_in">int</span> lena = strlen(a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i) t1[lena - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;<span class="comment">//存下被除数 </span></span><br><span class="line">	<span class="built_in">int</span> len = lena;</span><br><span class="line">	<span class="built_in">int</span> x = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)&#123;<span class="comment">//从高位到低位的处理 </span></span><br><span class="line">		c[i] += (x * <span class="number">10</span> + t1[i]) / b;</span><br><span class="line">		x = (x * <span class="number">10</span> + t1[i]) % b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!c[len] &amp;&amp; len &gt; <span class="number">1</span>) len --;<span class="comment">//最高位的判断</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		printf(<span class="string">&quot;%d&quot;</span>, c[i]);<span class="comment">//商 </span></span><br><span class="line">	printf(<span class="string">&quot; %d&quot;</span>, x);<span class="comment">//余数 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1019%20%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1019-数字黑洞-20-分"><a href="#1019-数字黑洞-20-分" class="headerlink" title="1019 数字黑洞 (20 分)"></a>1019 数字黑洞 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805302786899968">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>手动栈+排序，循环处理并输出结果</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> t, T[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span>(<span class="params"><span class="built_in">int</span> n</span>)</span>&#123;</span><br><span class="line">	t = <span class="number">0</span>;</span><br><span class="line">	T[++ t] = n / <span class="number">1000</span>; n -= T[<span class="number">1</span>] * <span class="number">1000</span>;</span><br><span class="line">	T[++ t] = n / <span class="number">100</span>; n -= T[<span class="number">2</span>] * <span class="number">100</span>;</span><br><span class="line">	T[++ t] = n / <span class="number">10</span>; n -= T[<span class="number">3</span>] * <span class="number">10</span>;</span><br><span class="line">	T[++ t] = n;</span><br><span class="line">	sort(T + <span class="number">1</span>, T + <span class="number">5</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		work(n);</span><br><span class="line">		<span class="built_in">int</span> min = T[<span class="number">1</span>] * <span class="number">1000</span> + T[<span class="number">2</span>] * <span class="number">100</span> + T[<span class="number">3</span>] * <span class="number">10</span> + T[<span class="number">4</span>];</span><br><span class="line">		<span class="built_in">int</span> max = T[<span class="number">1</span>] + T[<span class="number">2</span>] * <span class="number">10</span> + T[<span class="number">3</span>] * <span class="number">100</span> + T[<span class="number">4</span>] * <span class="number">1000</span>;</span><br><span class="line">		printf(<span class="string">&quot;%04d - %04d = %04d\n&quot;</span>, max, min, max - min);</span><br><span class="line">		<span class="keyword">if</span>(max - min == <span class="number">0</span> || max - min == <span class="number">6174</span>) <span class="keyword">break</span>;</span><br><span class="line">		n = max - min;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1021%20%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1021-个位数统计-15-分"><a href="#1021-个位数统计-15-分" class="headerlink" title="1021 个位数统计 (15 分)"></a>1021 个位数统计 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805300404535296">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>字符串形式读入，依次把每一位扔到一个“桶”里，然后输出就好。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a;</span><br><span class="line">	cin&gt;&gt; a;</span><br><span class="line">	<span class="built_in">int</span> len = a.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		<span class="built_in">int</span> x = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		cnt[x] ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(cnt[i] != <span class="number">0</span>)	cout&lt;&lt; i&lt;&lt; <span class="string">&#x27;:&#x27;</span>&lt;&lt; cnt[i]&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1022%20D%E8%BF%9B%E5%88%B6%E7%9A%84A+B%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1022-D进制的A-B-20-分"><a href="#1022-D进制的A-B-20-分" class="headerlink" title="1022 D进制的A+B (20 分)"></a>1022 D进制的A+B (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805299301433344">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>普通加法 + 进制转换</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000010</span></span><br><span class="line"><span class="built_in">int</span> cnt[N], t;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">long</span> <span class="built_in">long</span> a, b;</span><br><span class="line">	<span class="built_in">int</span> x;</span><br><span class="line">	scanf(<span class="string">&quot;%lld%lld%d&quot;</span>, &amp;a, &amp;b, &amp;x);</span><br><span class="line">	<span class="keyword">if</span>(a == <span class="number">0</span> &amp;&amp; b == <span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt; <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">long</span> <span class="built_in">long</span> c = a + b;</span><br><span class="line">	<span class="keyword">while</span>(c != <span class="number">0</span>)&#123;</span><br><span class="line">		cnt[++ t] = (c % x);</span><br><span class="line">		c /= x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = t; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		cout&lt;&lt; cnt[i];</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1023%20%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1023-组个最小数-20-分"><a href="#1023-组个最小数-20-分" class="headerlink" title="1023 组个最小数 (20 分)"></a>1023 组个最小数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>分有0和没有0两种情况进行讨论</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 15</span></span><br><span class="line"><span class="built_in">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d&quot;</span>, &amp;cnt[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(cnt[<span class="number">0</span>])&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(cnt[i])&#123;</span><br><span class="line">				<span class="keyword">for</span>(; cnt[i]; --cnt[i])&#123;</span><br><span class="line">					cout&lt;&lt; i;</span><br><span class="line">					<span class="keyword">if</span>(t == <span class="number">0</span>)&#123;</span><br><span class="line">						<span class="keyword">for</span>(; cnt[<span class="number">0</span>]; --cnt[<span class="number">0</span>])</span><br><span class="line">							cout&lt;&lt; <span class="number">0</span>;</span><br><span class="line">						t = <span class="number">1</span>;</span><br><span class="line">					&#125;					</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(cnt[i])</span><br><span class="line">				<span class="keyword">for</span>(; cnt[i]; --cnt[i])</span><br><span class="line">					cout&lt;&lt; i;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1025%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1025-反转链表-25-分"><a href="#1025-反转链表-25-分" class="headerlink" title="1025 反转链表 (25 分)"></a>1025 反转链表 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805296180871168">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>结构体构建链表结构</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">struct</span> node&#123;</span><br><span class="line">	<span class="built_in">int</span> <span class="keyword">value</span>;</span><br><span class="line">	<span class="built_in">int</span> next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> node Node[N];</span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">cmp</span>(<span class="params">node a, node b</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.<span class="keyword">value</span> &lt; b.<span class="keyword">value</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> ss&#123;</span><br><span class="line">	<span class="built_in">int</span> address;</span><br><span class="line">	<span class="built_in">int</span> <span class="keyword">value</span>;</span><br><span class="line">	<span class="built_in">int</span> next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> ss T[N];</span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> <span class="keyword">init</span>, n, m;</span><br><span class="line">	<span class="built_in">int</span> x, y, z;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;<span class="keyword">init</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">		Node[x].next = z;</span><br><span class="line">		Node[x].<span class="keyword">value</span> = y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="keyword">init</span>; i &gt;= <span class="number">0</span>; i = Node[i].next)&#123;</span><br><span class="line">		T[++ t].address = i;</span><br><span class="line">		T[t].<span class="keyword">value</span> = Node[i].<span class="keyword">value</span>;</span><br><span class="line">		T[t].next = Node[i].next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t; i += m)&#123;</span><br><span class="line">		<span class="built_in">int</span> j = i + m - <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">int</span> I = i;</span><br><span class="line">		<span class="keyword">if</span>(j &gt; t) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">while</span>(I &lt; j)&#123;</span><br><span class="line">			swap(T[I], T[j]);</span><br><span class="line">			I ++;</span><br><span class="line">			j --;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	T[t + <span class="number">1</span>].address = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i &lt; t) printf(<span class="string">&quot;%05d %d %05d\n&quot;</span>, T[i].address, T[i].<span class="keyword">value</span>, T[i + <span class="number">1</span>].address);</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			printf(<span class="string">&quot;%05d %d &quot;</span>, T[i].address, T[i].<span class="keyword">value</span>);</span><br><span class="line">			cout&lt;&lt; <span class="string">&quot;-1&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1024%20%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1024-科学计数法-20-分"><a href="#1024-科学计数法-20-分" class="headerlink" title="1024 科学计数法 (20 分)"></a>1024 科学计数法 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805297229447168">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>分为以下几个部分：<br>1.最开头的符号，即为结果的符号<br>2.读入数字，用bl标记，如果是底数，存到cr数组里，如果是指数，存到num数组里。<br>3.向左平移还是向右平移，用place记录这个符号的下标。<br>4.按要求输出（注意保留原精度）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="built_in">char</span> cr[N];</span><br><span class="line"><span class="built_in">int</span> num[<span class="number">10</span>];<span class="comment">//存下指数的栈</span></span><br><span class="line"><span class="built_in">int</span> t1, t2;</span><br><span class="line"><span class="built_in">int</span> place;<span class="comment">//存下第二个符号的位置 </span></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">cal</span>()</span>&#123;<span class="comment">//把指数字符串转化为整数 </span></span><br><span class="line">	<span class="built_in">int</span> wei = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = t2; i &gt;= <span class="number">1</span>; -- i)&#123;</span><br><span class="line">		sum += num[i] * wei;</span><br><span class="line">		wei *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a;</span><br><span class="line">	<span class="built_in">bool</span> bl = <span class="number">1</span>;</span><br><span class="line">	cin&gt;&gt; a;</span><br><span class="line">	<span class="built_in">int</span> len = a.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i] == <span class="string">&#x27;+&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				cout&lt;&lt; <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(bl)&#123;</span><br><span class="line">			<span class="keyword">if</span>(isdigit(a[i]))&#123;</span><br><span class="line">				cr[++ t1] = a[i];</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(a[i] == <span class="string">&#x27;.&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				bl = <span class="number">0</span>;</span><br><span class="line">				place = i + <span class="number">1</span>;</span><br><span class="line">				i ++;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			num[++ t2] = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//输出结果 </span></span><br><span class="line">	<span class="built_in">int</span> mov = cal();</span><br><span class="line">	<span class="keyword">if</span>(a[place] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">		<span class="built_in">int</span> cl = <span class="number">0</span>;<span class="comment">//记录小数点平移的位数</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t1; ++ i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i &gt; <span class="number">1</span>) cl ++;</span><br><span class="line">			<span class="keyword">if</span>(cl &gt; mov) cout&lt;&lt; <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">			cout&lt;&lt; cr[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = cl + <span class="number">1</span>; i &lt;= mov; ++ i)</span><br><span class="line">			cout&lt;&lt; <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= mov; ++ i)&#123;</span><br><span class="line">			cout&lt;&lt; <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">if</span>(i == <span class="number">1</span>) cout&lt;&lt; <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= t1; ++ i)</span><br><span class="line">			cout&lt;&lt; cr[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1028%20%E4%BA%BA%E5%8F%A3%E6%99%AE%E6%9F%A5%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1028-人口普查-20-分"><a href="#1028-人口普查-20-分" class="headerlink" title="1028 人口普查 (20 分)"></a>1028 人口普查 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805293282607104">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>题目不难，但要求比较繁琐，具体看代码吧。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ss&#123;</span><br><span class="line">	<span class="built_in">char</span> name[<span class="number">10</span>];</span><br><span class="line">	<span class="built_in">int</span> year, month, day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> ss man[N], M[N];</span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">judge</span>(<span class="params"><span class="built_in">int</span> x</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(man[x].year &lt; <span class="number">1814</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(man[x].year == <span class="number">1814</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(man[x].month &lt; <span class="number">9</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(man[x].month == <span class="number">9</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(man[x].day &lt; <span class="number">6</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(man[x].day == <span class="number">6</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(man[x].year &gt; <span class="number">2014</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(man[x].year == <span class="number">2014</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(man[x].month &gt; <span class="number">9</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(man[x].month == <span class="number">9</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(man[x].day &gt; <span class="number">6</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(man[x].day == <span class="number">6</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">bool</span> <span class="title">cmp</span>(<span class="params">ss a, ss b</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.year &lt; b.year) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a.year &gt; b.year) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(a.month &lt; b.month) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a.month &gt; b.month) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(a.day &lt; b.day) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(a.day &gt; b.day) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">char</span> s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%s %d%c%d%c%d&quot;</span>, man[i].name, &amp;man[i].year, &amp;s, &amp;man[i].month, &amp;s, &amp;man[i].day);</span><br><span class="line">		<span class="keyword">if</span>(judge(i))&#123;</span><br><span class="line">			++ t;</span><br><span class="line">			M[t] = man[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(M + <span class="number">1</span>, M + t + <span class="number">1</span>, cmp);</span><br><span class="line">	printf(<span class="string">&quot;%d&quot;</span>, t);</span><br><span class="line">	<span class="keyword">if</span>(t != <span class="number">0</span>) printf(<span class="string">&quot; %s %s&quot;</span>, M[<span class="number">1</span>].name, M[t].name);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1026%20%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1026-程序运行时间-15-分"><a href="#1026-程序运行时间-15-分" class="headerlink" title="1026 程序运行时间 (15 分)"></a>1026 程序运行时间 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805295203598336">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>注意这几点：<br><strong>1.四舍五入。<br>2.printf补0输出</strong></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> a, b;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="built_in">int</span> c = <span class="built_in">int</span>(<span class="built_in">double</span>(b - a) / <span class="number">100.0</span> + <span class="number">0.5</span>);</span><br><span class="line">	<span class="built_in">int</span> m = c / <span class="number">3600</span>;</span><br><span class="line">	c %= <span class="number">3600</span>;</span><br><span class="line">	printf(<span class="string">&quot;%02d:&quot;</span>, m);</span><br><span class="line">	m = c / <span class="number">60</span>;</span><br><span class="line">	printf(<span class="string">&quot;%02d:&quot;</span>, m);</span><br><span class="line">	c %= <span class="number">60</span>;</span><br><span class="line">	printf(<span class="string">&quot;%02d&quot;</span>, c);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1027%20%E6%89%93%E5%8D%B0%E6%B2%99%E6%BC%8F%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1027-打印沙漏-20-分"><a href="#1027-打印沙漏-20-分" class="headerlink" title="1027 打印沙漏 (20 分)"></a>1027 打印沙漏 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805294251491328">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>观察图形特征，主要是行列与空格的关系</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	<span class="built_in">int</span> x, sum = <span class="number">1</span>, i;</span><br><span class="line">	<span class="built_in">char</span> s;</span><br><span class="line">	scanf(<span class="string">&quot;%d %c&quot;</span>, &amp;n, &amp;s);</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">2</span>; i; ++ i)&#123;</span><br><span class="line">		x = <span class="number">4</span> * i - <span class="number">2</span>;</span><br><span class="line">		sum += x;</span><br><span class="line">		<span class="keyword">if</span>(sum &gt; n) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sum -= x;</span><br><span class="line">	i --;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> j = i; j &gt;= <span class="number">1</span>; -- j)&#123;</span><br><span class="line">		x = <span class="number">2</span> * j - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> z = <span class="number">1</span>; z &lt;= i - j; ++ z) cout&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> z = <span class="number">1</span>; z &lt;= x; ++ z) cout&lt;&lt; s;</span><br><span class="line">		cout&lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">2</span>; j &lt;= i; ++ j)&#123;</span><br><span class="line">		x = <span class="number">2</span> * j - <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> z = <span class="number">1</span>; z &lt;= i - j; ++ z) cout&lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> z = <span class="number">1</span>; z &lt;= x; ++ z) cout&lt;&lt; s;</span><br><span class="line">		cout&lt;&lt; endl;		</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt; n - sum;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1029%20%E6%97%A7%E9%94%AE%E7%9B%98%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1029-旧键盘-20-分"><a href="#1029-旧键盘-20-分" class="headerlink" title="1029 旧键盘 (20 分)"></a>1029 旧键盘 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805292322111488">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>两个字符串从第一个字符开始，一一对照，然后输出坏掉的字符并存储为已经输出（用on数组标记一下）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> <span class="keyword">on</span>[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a, b;</span><br><span class="line">	<span class="built_in">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;</span><br><span class="line">	<span class="built_in">int</span> la = a.size();</span><br><span class="line">	<span class="built_in">int</span> lb = b.size();</span><br><span class="line">	<span class="keyword">while</span>(i &lt; la || j &lt; lb)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] == b[j])&#123;</span><br><span class="line">			i ++;</span><br><span class="line">			j ++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">int</span> x;</span><br><span class="line">			<span class="keyword">if</span>(islower(a[i]))</span><br><span class="line">				a[i] = a[i] - <span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">			x = (<span class="built_in">int</span>)a[i];</span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">on</span>[x])</span><br><span class="line">				cout&lt;&lt; a[i];</span><br><span class="line">			<span class="keyword">on</span>[x] = <span class="number">1</span>;</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1030%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E5%88%97%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1030-完美数列-25-分"><a href="#1030-完美数列-25-分" class="headerlink" title="1030 完美数列 (25 分)"></a>1030 完美数列 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805291311284224">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>将数组排序，然后依次把每个元素作为最小值p，然后用二分法找到这个有序数列中符合要求的最大值的位置在哪里，并更新mx（最多能选出的元素个数）的值。<br>如果发现最大值元素已经到达了第n个元素，那么就停止循环。（因为这是最后一个可能的最大解了）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line"><span class="built_in">long</span> <span class="built_in">long</span> num[N];</span><br><span class="line"><span class="built_in">long</span> <span class="built_in">long</span> p;</span><br><span class="line"><span class="built_in">int</span> n;</span><br><span class="line"><span class="built_in">long</span> <span class="built_in">long</span> mx = <span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">cal</span>(<span class="params"><span class="built_in">long</span> <span class="built_in">long</span> x, <span class="built_in">int</span> w</span>)</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> l = w + <span class="number">1</span>, r = n;</span><br><span class="line">	<span class="built_in">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">	x *= p;</span><br><span class="line">	<span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">		mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(num[mid] &lt; x)</span><br><span class="line">			l = mid + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			r = mid - <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i = r; i &lt;= n ; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(num[i] &gt; x)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	i --;</span><br><span class="line">	<span class="keyword">if</span>(i - w + <span class="number">1</span> &gt; mx)</span><br><span class="line">		mx = i - w + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(i == n) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	scanf(<span class="string">&quot;%d%lld&quot;</span>, &amp;n, &amp;p);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		scanf(<span class="string">&quot;%lld&quot;</span>, num + i);</span><br><span class="line">	sort(num + <span class="number">1</span>, num + n + <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">int</span> judge = cal(num[i], i);</span><br><span class="line">		<span class="keyword">if</span>(judge) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(<span class="string">&quot;%lld&quot;</span>, mx);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1032%20%E6%8C%96%E6%8E%98%E6%9C%BA%E6%8A%80%E6%9C%AF%E5%93%AA%E5%AE%B6%E5%BC%BA%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1032-挖掘机技术哪家强-20-分"><a href="#1032-挖掘机技术哪家强-20-分" class="headerlink" title="1032 挖掘机技术哪家强 (20 分)"></a>1032 挖掘机技术哪家强 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用cnt数组记录每个学校的总得分，并及时更新最大值，最后输出即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="built_in">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">int</span> x, y;</span><br><span class="line">	<span class="built_in">int</span> k;</span><br><span class="line">	<span class="built_in">int</span> Min = <span class="number">-1e9</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		cnt[x] += y;</span><br><span class="line">		<span class="keyword">if</span>(cnt[x] &gt; Min)&#123;</span><br><span class="line">			Min = cnt[x];</span><br><span class="line">			k = x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(<span class="string">&quot;%d %d&quot;</span>, k, cnt[k]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1031%20%E6%9F%A5%E9%AA%8C%E8%BA%AB%E4%BB%BD%E8%AF%81%20(15%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1031-查验身份证-15-分"><a href="#1031-查验身份证-15-分" class="headerlink" title="1031 查验身份证 (15 分)"></a>1031 查验身份证 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805290334011392">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>字符串形式读入，并进行判断，如果不正确，直接输出读入的字符串，如果所有的字符串都合法，用一个flag标记，最后输出“All passed”</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 20</span></span><br><span class="line"><span class="built_in">int</span> sk[N];</span><br><span class="line"><span class="built_in">int</span> t;</span><br><span class="line"><span class="built_in">int</span> weight[] = &#123;<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="built_in">string</span> a;</span><br><span class="line"><span class="built_in">int</span> judge;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span>()</span>&#123;</span><br><span class="line">	judge = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">int</span> len = a.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] &lt; <span class="string">&#x27;0&#x27;</span> || a[i] &gt; <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">			judge = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		sk[i] = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; a;</span><br><span class="line">		pre();</span><br><span class="line">		<span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">17</span>; ++ j)</span><br><span class="line">			sum += weight[j] * sk[j];</span><br><span class="line">		sum %= <span class="number">11</span>;</span><br><span class="line">		<span class="built_in">char</span> s;</span><br><span class="line">	    <span class="keyword">switch</span>(sum)</span><br><span class="line">	    &#123;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">0</span>:s=<span class="string">&#x27;1&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">1</span>:s=<span class="string">&#x27;0&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">2</span>:s=<span class="string">&#x27;X&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">3</span>:s=<span class="string">&#x27;9&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">4</span>:s=<span class="string">&#x27;8&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">5</span>:s=<span class="string">&#x27;7&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">6</span>:s=<span class="string">&#x27;6&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">7</span>:s=<span class="string">&#x27;5&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">8</span>:s=<span class="string">&#x27;4&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">9</span>:s=<span class="string">&#x27;3&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">	      <span class="keyword">case</span> <span class="number">10</span>:s=<span class="string">&#x27;2&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	    <span class="keyword">if</span>(s != a[<span class="number">17</span>] || judge == <span class="number">0</span>)&#123;</span><br><span class="line">	    	cout&lt;&lt; a&lt;&lt; endl;</span><br><span class="line">	    	t ++;</span><br><span class="line">		&#125;</span><br><span class="line">    			</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(t == <span class="number">0</span>) puts(<span class="string">&quot;All passed&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1033%20%E6%97%A7%E9%94%AE%E7%9B%98%E6%89%93%E5%AD%97%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1033-旧键盘打字-20-分"><a href="#1033-旧键盘打字-20-分" class="headerlink" title="1033 旧键盘打字 (20 分)"></a>1033 旧键盘打字 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805288530460672">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>对于坏掉的键的字符串的分析，分为这几种情况：<br>1.小写字母和数字直接标记。<br>2.读入+，就把所有的大写字母标记。<br>3.读入大写字母，把对应的小写字母也标记。<br>对于需要判断的字符串，只要按照前面的标记数组来判断能不能输出这个字符即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#include&lt;string.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="built_in">int</span> judge[<span class="number">300</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">    cin&gt;&gt; a;</span><br><span class="line">    cin&gt;&gt; b;</span><br><span class="line">	<span class="built_in">int</span> lena = a.size();</span><br><span class="line">	<span class="built_in">int</span> lenb = b.size();</span><br><span class="line">	<span class="built_in">bool</span> ju = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i)&#123;</span><br><span class="line">		judge[a[i]] = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[i] == <span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(ju) <span class="keyword">continue</span>;</span><br><span class="line">			ju = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="string">&#x27;A&#x27;</span>; j &lt;= <span class="string">&#x27;Z&#x27;</span>; ++ j)</span><br><span class="line">				judge[j] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">			judge[a[i] - <span class="string">&#x27;A&#x27;</span> + <span class="string">&#x27;a&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(judge[b[i]]) <span class="keyword">continue</span>;</span><br><span class="line">		cout&lt;&lt; b[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1035%20%E6%8F%92%E5%85%A5%E4%B8%8E%E5%BD%92%E5%B9%B6%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%20%E6%AE%B5%E9%94%99%E8%AF%AF%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1035-插入与归并-25-分"><a href="#1035-插入与归并-25-分" class="headerlink" title="1035 插入与归并 (25 分)"></a>1035 插入与归并 (25 分)</h1><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040">题目链接</a></p>
<h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>首先把数据进行读入，然后判断其是否为<strong>插入排序</strong>，如果插排过程中发现的确如此，就输出结果，终止程序。如果插排结束后程序还没有终止，那么即为归并排序，然后利用<strong>自下而上的归并排序</strong>（详见这一篇博客：“自下而上与自上而下的归并排序”），同样是在寻找到答案后输出结果，并终止程序。</p>
<h2 id="测试点分析"><a href="#测试点分析" class="headerlink" title="测试点分析"></a>测试点分析</h2><p>我卡在第二个测试点上，后来发现问题是在这样的数据上面</p>
<h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p><strong>3<br>132<br>132</strong></p>
<h3 id="正确输出"><a href="#正确输出" class="headerlink" title="正确输出"></a>正确输出</h3><p><strong>Insertion sort<br>1 2 3</strong><br>应该判断为是插排，一开始我的代码判断为归并，我修改之后发现就通过了<br><img src="https://img-blog.csdnimg.cn/227e45677e634255a30c45d59f9e3b8d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>希望能对大家有所帮助！</p>
<h2 id="代码实现（有注释）"><a href="#代码实现（有注释）" class="headerlink" title="代码实现（有注释）"></a>代码实现（有注释）</h2><p>没有过度压行，思路采用的也是最朴素的方式，如果以后有机会再修改吧</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 110</span></span><br><span class="line"><span class="type">int</span> a[N], b[N];<span class="comment">//a，b为读入时的数组</span></span><br><span class="line"><span class="type">int</span> c[N];<span class="comment">//c为a的备份数组（用于插排结束仍未找到结果时恢复原数组a） </span></span><br><span class="line"><span class="type">int</span> n; </span><br><span class="line"><span class="type">int</span> ans;<span class="comment">//用来记录当前的judge结果 </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">()</span></span>;<span class="comment">//判断当前排序结果是否与期望结果相同 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>;<span class="comment">//输入数据 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>;<span class="comment">//输出下一步排序结果 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Insertion_sort</span><span class="params">()</span></span>;<span class="comment">//插排 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge_sort</span><span class="params">()</span></span>;<span class="comment">//归并 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">input</span>(); </span><br><span class="line">	<span class="built_in">Insertion_sort</span>();</span><br><span class="line">	<span class="built_in">Merge_sort</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">		c[i] = a[i];<span class="comment">//备份 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, b + i);	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(a[i] != b[i]) t = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">		<span class="keyword">if</span>(i != n) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Insertion_sort</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ans = <span class="built_in">judge</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> m = i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; ++ j)</span><br><span class="line">			<span class="keyword">if</span>(a[j] &gt; a[i])&#123;</span><br><span class="line">				m = j;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(m != i)&#123;</span><br><span class="line">			<span class="type">int</span> M = a[i];</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> q = i; q &gt;= m + <span class="number">1</span>; -- q)</span><br><span class="line">				a[q] = a[q - <span class="number">1</span>];</span><br><span class="line">			a[m] = M;</span><br><span class="line">			<span class="keyword">if</span>(ans)&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;Insertion Sort&quot;</span>);</span><br><span class="line">				<span class="built_in">print</span>();</span><br><span class="line">				<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			ans = <span class="built_in">judge</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge_sort</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)	</span><br><span class="line">		a[i] = c[i];<span class="comment">//恢复原始状态</span></span><br><span class="line">	ans = <span class="number">0</span>;<span class="comment">//恢复原始状态 </span></span><br><span class="line">	<span class="type">int</span> t = <span class="number">2</span>;<span class="comment">//最小分割单元 </span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i += t)&#123;</span><br><span class="line">			<span class="built_in">sort</span>(a + i, a + <span class="built_in">min</span>(i + t, n + <span class="number">1</span>));<span class="comment">//注意sort的使用 </span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(ans)&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;Merge Sort&quot;</span>);</span><br><span class="line">			<span class="built_in">print</span>();</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);				</span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">judge</span>();</span><br><span class="line">		t *= <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1034%20%E6%9C%89%E7%90%86%E6%95%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%EF%BC%9A%E8%BF%90%E8%A1%8C%E8%B6%85%E6%97%B6%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1034-有理数四则运算-20-分"><a href="#1034-有理数四则运算-20-分" class="headerlink" title="1034 有理数四则运算 (20 分)"></a>1034 有理数四则运算 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>本题思路是比较<del>简单</del>  的，模拟我们正常计算两个有理数就好了。<br>关键的难点在于特殊情况的判断：正负，真分数假分数，结果是否为整数和0.</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我卡在了测试点三，运行超时主要是在求最大公约数的地方。解决方法如下：<br><img src="https://img-blog.csdnimg.cn/17631a6180624429acb0b3bd4b333dc8.png" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> op[<span class="number">4</span>] = &#123;<span class="string">&#x27;+&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;*&#x27;</span>, <span class="string">&#x27;/&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> a, b, c, d;</span><br><span class="line"> 	<span class="built_in">scanf</span>(<span class="string">&quot;%lld/%lld %lld/%lld&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++ i)&#123;</span><br><span class="line">		<span class="built_in">print</span>(a, b);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>, op[i]);</span><br><span class="line">		<span class="built_in">print</span>(c, d);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot; = &quot;</span>);</span><br><span class="line">		<span class="keyword">switch</span>(op[i])&#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">				<span class="built_in">print</span>(a * d + b * c, b * d);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">				<span class="built_in">print</span>(a * d - b * c, b * d);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">				<span class="built_in">print</span>(a * c, b * d);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">				<span class="built_in">print</span>(a * d, b * c);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span></span>&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> c;</span><br><span class="line">	<span class="keyword">if</span>(a &lt; b)&#123;</span><br><span class="line">		c = a;</span><br><span class="line">		a = b;</span><br><span class="line">		b = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>((c = a - b))&#123;</span><br><span class="line">		<span class="keyword">if</span>(a % b == <span class="number">0</span>) <span class="keyword">return</span> b;	<span class="comment">//防超时 </span></span><br><span class="line">		a = c &gt; b ? c : b;</span><br><span class="line">		b = c &gt; b ? b : c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span></span>&#123;<span class="comment">//非常难写的部分 </span></span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> c;</span><br><span class="line">	<span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;Inf&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a == <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((a &gt; <span class="number">0</span> &amp;&amp; b &gt; <span class="number">0</span> )|| (a &lt; <span class="number">0</span> &amp;&amp; b &lt; <span class="number">0</span>))&#123;</span><br><span class="line">		a = <span class="built_in">abs</span>(a);</span><br><span class="line">		b = <span class="built_in">abs</span>(b);</span><br><span class="line">		<span class="keyword">if</span>(a &gt; b)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a % b == <span class="number">0</span>)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, a / b);</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, a / b);	</span><br><span class="line">				<span class="built_in">print</span>(a % b, b);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a == b)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> ;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			c = <span class="built_in">gcd</span>(a, b);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%lld/%lld&quot;</span>, a / c, b / c);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		a = <span class="built_in">abs</span>(a);</span><br><span class="line">		b = <span class="built_in">abs</span>(b);	</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;(-&quot;</span>);</span><br><span class="line">		<span class="built_in">print</span>(a,  b);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;)&quot;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1036%20%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%BC%96%E7%A8%8B%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1036-跟奥巴马一起编程-15-分"><a href="#1036-跟奥巴马一起编程-15-分" class="headerlink" title="1036 跟奥巴马一起编程 (15 分)"></a>1036 跟奥巴马一起编程 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>主要是以下两点：<br>1.第一行和最后一行，直接打印字符。<br>2.其他行，第一列和最后一列打印字符。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	<span class="built_in">char</span> s;</span><br><span class="line">	scanf(<span class="string">&quot;%d %c&quot;</span>, &amp;n, &amp;s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= (n + <span class="number">1</span>) / <span class="number">2</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i == <span class="number">1</span> || i == (n + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">				printf(<span class="string">&quot;%c&quot;</span>, s);</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(j == <span class="number">1</span> || j == n)</span><br><span class="line">					printf(<span class="string">&quot;%c&quot;</span>, s);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					printf(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(j == n)	printf(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1037%20%E5%9C%A8%E9%9C%8D%E6%A0%BC%E6%B2%83%E8%8C%A8%E6%89%BE%E9%9B%B6%E9%92%B1%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1037-在霍格沃茨找零钱-20-分"><a href="#1037-在霍格沃茨找零钱-20-分" class="headerlink" title="1037 在霍格沃茨找零钱 (20 分)"></a>1037 在霍格沃茨找零钱 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284923359232">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>首先判断两个数的相对大小，保证第一个数比第二个数大，然后再对每一位进行对应相减，如果结果小于零，就向上借位。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="built_in">int</span> a[N], b[N], c[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	scanf(<span class="string">&quot;%d.%d.%d&quot;</span>, &amp;a[<span class="number">1</span>], &amp;a[<span class="number">2</span>], &amp;a[<span class="number">3</span>]);</span><br><span class="line">	scanf(<span class="string">&quot;%d.%d.%d&quot;</span>, &amp;b[<span class="number">1</span>], &amp;b[<span class="number">2</span>], &amp;b[<span class="number">3</span>]);</span><br><span class="line">	<span class="built_in">int</span> x = a[<span class="number">1</span>] * <span class="number">10000</span> + a[<span class="number">2</span>] * <span class="number">100</span> + a[<span class="number">3</span>];</span><br><span class="line">	<span class="built_in">int</span> y = b[<span class="number">1</span>] * <span class="number">10000</span> + b[<span class="number">2</span>] * <span class="number">100</span> + b[<span class="number">3</span>];</span><br><span class="line">	<span class="built_in">bool</span> bl = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(x &gt; y)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)</span><br><span class="line">			swap(a[i], b[i]);</span><br><span class="line">		bl = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	c[<span class="number">1</span>] = b[<span class="number">1</span>] - a[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">if</span>(b[<span class="number">2</span>] &gt;= a[<span class="number">2</span>])</span><br><span class="line">		c[<span class="number">2</span>] = b[<span class="number">2</span>] - a[<span class="number">2</span>];</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		c[<span class="number">2</span>] = b[<span class="number">2</span>] - a[<span class="number">2</span>] + <span class="number">17</span>;</span><br><span class="line">		c[<span class="number">1</span>] --;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(b[<span class="number">3</span>] &gt;= a[<span class="number">3</span>])</span><br><span class="line">		c[<span class="number">3</span>] = b[<span class="number">3</span>] - a[<span class="number">3</span>];</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		c[<span class="number">3</span>] = b[<span class="number">3</span>] - a[<span class="number">3</span>] + <span class="number">29</span>;</span><br><span class="line">		c[<span class="number">2</span>] --;</span><br><span class="line">		<span class="keyword">if</span>(c[<span class="number">2</span>] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">			c[<span class="number">1</span>] --;</span><br><span class="line">			c[<span class="number">2</span>] += <span class="number">17</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(bl) printf(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">	printf(<span class="string">&quot;%d.%d.%d&quot;</span>, c[<span class="number">1</span>], c[<span class="number">2</span>], c[<span class="number">3</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1038%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E6%88%90%E7%BB%A9%E5%AD%A6%E7%94%9F%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1038-统计同成绩学生-20-分"><a href="#1038-统计同成绩学生-20-分" class="headerlink" title="1038 统计同成绩学生 (20 分)"></a>1038 统计同成绩学生 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805284092887040">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>开一个手动栈（cnt数组），读进一个数就在数组对应的下标位置加一。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="built_in">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> n, m;</span><br><span class="line">	<span class="built_in">int</span> x;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		cnt[x] ++;</span><br><span class="line">	&#125;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		scanf(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		printf(<span class="string">&quot;%d&quot;</span>, cnt[x]);</span><br><span class="line">		<span class="keyword">if</span>(i &lt; m) printf(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1039%20%E5%88%B0%E5%BA%95%E4%B9%B0%E4%B8%8D%E4%B9%B0%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1039-到底买不买-20-分"><a href="#1039-到底买不买-20-分" class="headerlink" title="1039 到底买不买 (20 分)"></a>1039 到底买不买 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805283241443328">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>读入两条链子的珠子信息，用ca和cb数组存下来，然后再从头到尾跑一次第二条链子，注意以下几点：<br>1.每一种珠子只计算一次。<br>2.对于某一种珠子，如果第一条个数大于等于第二条，sum加上第二条中的个数，如果第一条个数小于第二条，sum加上第一条中的个数。<br>3.最后进行判断，如果sum恰好等于第二条中的个数，说明恰好能满足要求，如果sum小于第二条的个数（不可能大于），那lenb-sum即为缺少的珠子个数。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 300</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> ca[N], cb[N];</span><br><span class="line"><span class="built_in">int</span> judge[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a, b;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;</span><br><span class="line">	<span class="built_in">int</span> lena = a.size();</span><br><span class="line">	<span class="built_in">int</span> lenb = b.size();</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i)</span><br><span class="line">		ca[a[i]] ++;	</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i)</span><br><span class="line">		cb[b[i]] ++;</span><br><span class="line">	<span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(!judge[b[i]])&#123;</span><br><span class="line">			judge[b[i]] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(ca[b[i]] &gt;= cb[b[i]])</span><br><span class="line">				sum += cb[b[i]];</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				sum += ca[b[i]];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(sum == lenb)&#123;</span><br><span class="line">		printf(<span class="string">&quot;Yes %d&quot;</span>, lena - lenb);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		printf(<span class="string">&quot;No %d&quot;</span>, lenb - sum);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1041%20%E8%80%83%E8%AF%95%E5%BA%A7%E4%BD%8D%E5%8F%B7%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1041-考试座位号-15-分"><a href="#1041-考试座位号-15-分" class="headerlink" title="1041 考试座位号 (15 分)"></a>1041 考试座位号 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805281567916032">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>结构体数组的使用</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="keyword">struct</span> stu&#123;</span><br><span class="line">	<span class="built_in">string</span> id;</span><br><span class="line">	<span class="built_in">int</span> to;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> stu ex[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> s;<span class="comment">// 暂时记录 </span></span><br><span class="line">	<span class="built_in">int</span> To;<span class="comment">//暂时记录 </span></span><br><span class="line">	<span class="built_in">int</span> n;</span><br><span class="line">	<span class="built_in">int</span> x;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; s&gt;&gt; x&gt;&gt; To;</span><br><span class="line">		ex[x].id = s;</span><br><span class="line">		ex[x].to = To;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">int</span> m;</span><br><span class="line">	scanf(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; x;</span><br><span class="line">		cout&lt;&lt; ex[x].id&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; ex[x].to&lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1040%20%E6%9C%89%E5%87%A0%E4%B8%AAPAT%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1040-有几个PAT-25-分"><a href="#1040-有几个PAT-25-分" class="headerlink" title="1040 有几个PAT (25 分)"></a>1040 有几个PAT (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805282389999616">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>三种情况：<br>1.读入‘P’，t_cnt++，t_cnt是当前已经出现的‘P’的个数。<br>2.读入‘A’，t+&#x3D;t_cnt, t是当前已经能搭配出”PA“的种数。<br>3.读入‘T’，ans +&#x3D; t， ans是能组成”PAT“的个数。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">string</span> a;</span><br><span class="line">	cin&gt;&gt; a;</span><br><span class="line">	<span class="built_in">int</span> len = a.size();</span><br><span class="line">	<span class="built_in">int</span> t_cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">int</span> t = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">int</span> ans = <span class="number">0</span>; </span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] == <span class="string">&#x27;P&#x27;</span>)</span><br><span class="line">			t_cnt ++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a[i] == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">			t = (t + t_cnt) % <span class="number">1000000007</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			ans = (ans + t) % <span class="number">1000000007</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1042%20%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h2 id="1042-字符统计-20-分"><a href="#1042-字符统计-20-分" class="headerlink" title="1042 字符统计 (20 分)"></a>1042 字符统计 (20 分)</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280817135616">题目链接</a></h3><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>依次读入字符串的每个字母，对于两种情况进行处理<br>1.大写字母：把它ASCII加上32得到对应的小写字母。<br>2.小写字母：统计其出现的次数，并进行最大出现次数和字母序的判断。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 300</span></span><br><span class="line"><span class="type">int</span> cnt[N];<span class="comment">//用一个栈存下某一字母出现的次数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> mx = <span class="number">-1</span>;</span><br><span class="line">	<span class="type">char</span> s, ans = <span class="string">&#x27;z&#x27;</span>;</span><br><span class="line">	<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isupper</span>(s))<span class="comment">//ascii A-65 a-97</span></span><br><span class="line">			s += <span class="number">32</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">islower</span>(s))&#123;</span><br><span class="line">			<span class="type">int</span> m = (++ cnt[(<span class="type">int</span>)s]);</span><br><span class="line">			<span class="keyword">if</span>(m &gt; mx)&#123;</span><br><span class="line">				mx = cnt[(<span class="type">int</span>)s];</span><br><span class="line">				ans = s;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(m == mx)</span><br><span class="line">				ans = <span class="built_in">min</span>(ans, s);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%c %d&quot;</span>, ans, mx);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1043%20%E8%BE%93%E5%87%BAPATest%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h2 id="1043-输出PATest-20-分"><a href="#1043-输出PATest-20-分" class="headerlink" title="1043 输出PATest (20 分)"></a>1043 输出PATest (20 分)</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805280074743808">题目链接</a></h3><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>依次读入字符串，用一个栈数组存下各个字母出现的次数，然后再用两层循环输出结果。</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 300</span></span><br><span class="line"><span class="type">char</span> pat[<span class="number">10</span>] = &#123;<span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> cnt[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	cin&gt;&gt; s;</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)</span><br><span class="line">		cnt[(<span class="type">int</span>)s[i]] ++;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(flag)&#123;</span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++ i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(cnt[(<span class="type">int</span>)pat[i]])&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				cnt[(<span class="type">int</span>)pat[i]] --;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, pat[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1044%20%E7%81%AB%E6%98%9F%E6%95%B0%E5%AD%97%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="1044-火星数字-20-分"><a href="#1044-火星数字-20-分" class="headerlink" title="1044 火星数字 (20 分)"></a>1044 火星数字 (20 分)</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805279328157696">题目链接</a></h3><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>1.用两个字符串数组存下每一个数字对应的三个字母。<br>2.进入循环后，首先对读入的类型进行判断，并用flag存下，最终用于输出结果。<br>3.然后分两种情况进行分析和处理：<br>（1）对于输入的数字，将其转化为十进制数，然后再转化为十三进制数。<br>（2）对于输入的字母，每三位进行计算，转化为十进制数。</p>
<h3 id="测试点的问题"><a href="#测试点的问题" class="headerlink" title="测试点的问题"></a>测试点的问题</h3><p>&#x3D;&#x3D;测试点一&#x3D;&#x3D;<br>其实就是对输入0时的特殊判断，这里我尽量说的详细一些。<br>我的算法中用ans数组存下了结果的每一位，输出时对照字符串数组输出。<br>由于我采用的是每次循环通过t（栈顶）的改变来覆盖和修改ans数组的元素。<br>所以在处理0的时候，由于t不能发生改变，因此就把上次处理的结果输出了，出了问题。<br>但是，它之所以难以被发现，是因为只有一组数据，输入0时，答案是正确的。<br>所以，以后一定要注意这种类型的错误：算法中用到手写栈的覆盖，要考虑临界情况。</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 15</span></span><br><span class="line"><span class="type">int</span> t, sum;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *earth[N] = &#123;<span class="string">&quot;tret&quot;</span>, <span class="string">&quot;jan&quot;</span>, <span class="string">&quot;feb&quot;</span>, <span class="string">&quot;mar&quot;</span>, <span class="string">&quot;apr&quot;</span>, <span class="string">&quot;may&quot;</span>, <span class="string">&quot;jun&quot;</span>, <span class="string">&quot;jly&quot;</span>, <span class="string">&quot;aug&quot;</span>, <span class="string">&quot;sep&quot;</span>, <span class="string">&quot;oct&quot;</span>, <span class="string">&quot;nov&quot;</span>, <span class="string">&quot;dec&quot;</span>&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *mars[N] = &#123;<span class="string">&quot;tret&quot;</span>, <span class="string">&quot;tam&quot;</span>, <span class="string">&quot;hel&quot;</span>, <span class="string">&quot;maa&quot;</span>, <span class="string">&quot;huh&quot;</span>, <span class="string">&quot;tou&quot;</span>, <span class="string">&quot;kes&quot;</span>, <span class="string">&quot;hei&quot;</span>, <span class="string">&quot;elo&quot;</span>, <span class="string">&quot;syy&quot;</span>, <span class="string">&quot;lok&quot;</span>, <span class="string">&quot;mer&quot;</span>, <span class="string">&quot;jou&quot;</span>&#125;;</span><br><span class="line"><span class="type">char</span> com[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> flag;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">judge</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!<span class="built_in">strcmp</span>(com, earth[i]))<span class="comment">//strcmp的使用：两个字符串若相等返回0</span></span><br><span class="line">			<span class="keyword">return</span> i;<span class="comment">//低位</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(com, mars[i]))</span><br><span class="line">			<span class="keyword">return</span> i * <span class="number">13</span>;<span class="comment">//高位</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">char</span> s;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	s = <span class="built_in">getchar</span>();<span class="comment">//吞下n后面的空格</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		t = <span class="number">0</span>;</span><br><span class="line">		sum = <span class="number">0</span>;</span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">isdigit</span>(s))&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				sum = sum * <span class="number">10</span> + (s - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27; &#x27;</span>)<span class="comment">//比较重要的处理</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				com[t ++] = s;</span><br><span class="line">				<span class="keyword">if</span>(t == <span class="number">3</span>)&#123;</span><br><span class="line">					sum += <span class="built_in">judge</span>();</span><br><span class="line">					t = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;<span class="comment">//第一种情况的输出</span></span><br><span class="line">			<span class="type">int</span> tel = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(!sum) ans[++ tel] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span>(sum)&#123;</span><br><span class="line">				ans[++ tel] = sum % <span class="number">13</span>;</span><br><span class="line">				sum /= <span class="number">13</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(tel == <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, earth[ans[<span class="number">1</span>]]);</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, mars[ans[<span class="number">2</span>]]);</span><br><span class="line">				<span class="keyword">if</span>(ans[<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">&quot; %s&quot;</span>, earth[ans[<span class="number">1</span>]]);<span class="comment">//高位不为0，低位为0则不输出</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;<span class="comment">//第二种情况的输出</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1045%20%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="1045-快速排序-25-分"><a href="#1045-快速排序-25-分" class="headerlink" title="1045 快速排序 (25 分)"></a>1045 快速排序 (25 分)</h2><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805278589960192">题目链接</a></h3><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>数据范围是</p>
<p><img src="https://img-blog.csdnimg.cn/65ef07a219254012bda678c2fa84caa9.png" alt="在这里插入图片描述"><br>所以我们初步判断，O（N^2）的算法肯定是过不去的。<br>由于题目中一直在疯狂暗示当前下标元素前面的最大值与后面的最小值，所以我们就可以正反跑两次循环，解决这个问题。<br><strong>第一次循环</strong>，可以在读入数据时完成，用mn【】数组记录当前下标位置及以前的元素的最大值。<br><strong>第二次循环</strong>，无需再开一个数组，只要一边循环一边处理即可，我用了一个mx来记录当前元素后面出现的最小值，并在判断过程中把结果保存在一个栈里面。</p>
<h3 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h3><p>我这个题卡在了测试点二，比较神奇，是因为这个题的数据里面要求0的时候再输出一行空行，所以加上一句特判就OK（<del>大无语事件发生了属于是</del> ）</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line"><span class="type">int</span> a[N], mn[N], ans[N];</span><br><span class="line"><span class="type">int</span> t;<span class="comment">//栈顶下标</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">		mn[i] = <span class="built_in">max</span>(mn[i - <span class="number">1</span>], a[i]);<span class="comment">//第一次循环的处理</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> mx = <span class="number">1e9</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; -- i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(mn[i - <span class="number">1</span>] &lt; a[i] &amp;&amp; a[i] &lt; mx)<span class="comment">//第二次循环的处理</span></span><br><span class="line">			ans[++ t] = a[i];<span class="comment">//存下答案</span></span><br><span class="line">		mx = <span class="built_in">min</span>(mx, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(ans + <span class="number">1</span>, ans + t + <span class="number">1</span>);<span class="comment">//排序</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t);</span><br><span class="line">	<span class="keyword">if</span>(!t) <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);<span class="comment">//恶心的数据点</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans[i]);</span><br><span class="line">		<span class="keyword">if</span>(i &lt; t) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1046%20%E5%88%92%E6%8B%B3%20(15%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1046-划拳-15-分"><a href="#1046-划拳-15-分" class="headerlink" title="1046 划拳 (15 分)"></a>1046 划拳 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277847568384">题目链接</a></h2><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> a, b, c, d;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">		<span class="type">int</span> x = a + c;</span><br><span class="line">		<span class="keyword">if</span>((b == x &amp;&amp; d == x) || (b != x &amp;&amp; d != x)) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(b == x &amp;&amp; d != x)	cnt2 ++;</span><br><span class="line">		<span class="keyword">else</span>	cnt1 ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, cnt1, cnt2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1047%20%E7%BC%96%E7%A8%8B%E5%9B%A2%E4%BD%93%E8%B5%9B%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1047-编程团体赛-20-分"><a href="#1047-编程团体赛-20-分" class="headerlink" title="1047 编程团体赛 (20 分)"></a>1047 编程团体赛 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805277163896832">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>开一个数组，每次读入都把对应队伍总分更新，并与当前最高分进行比较，如果更大，则用k_mx记下队伍编号。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="type">int</span> Team[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">int</span> mx = <span class="number">-1</span>, k_mx;</span><br><span class="line">	<span class="type">int</span> id, x, score;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d-%d %d&quot;</span>, &amp;id, &amp;x, &amp;score);</span><br><span class="line">		Team[id] += score;</span><br><span class="line">		<span class="keyword">if</span>(Team[id] &gt; mx)&#123;</span><br><span class="line">			mx = Team[id];</span><br><span class="line">			k_mx = id;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, k_mx, Team[k_mx]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1048%20%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h2 id="1048-数字加密-20-分"><a href="#1048-数字加密-20-分" class="headerlink" title="1048 数字加密 (20 分)"></a>1048 数字加密 (20 分)</h2><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805276438282240">题目链接</a></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>由于数字可能会超过一百位，所以我们选择用字符串来读入。<br>然后把各位数字存到一个整形数组中，之后再对每一位进行分类讨论并计算。</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 110</span></span><br><span class="line"><span class="type">char</span> s[N] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;J&#x27;</span>, <span class="string">&#x27;Q&#x27;</span>, <span class="string">&#x27;K&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> a[N], b[N];<span class="comment">//存读入的数据的数组</span></span><br><span class="line">string s1, s2;<span class="comment">//读入数据的字符串</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt; s1&gt;&gt; s2;</span><br><span class="line">	<span class="type">int</span> l1 = s1.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l1; ++ i)</span><br><span class="line">		a[l1 - i - <span class="number">1</span>] = s1[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> l2 = s2.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l2; ++ i)</span><br><span class="line">		b[l2 - i - <span class="number">1</span>] = s2[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> len = <span class="built_in">max</span>(l1, l2);<span class="comment">//最高位</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i)&#123;	</span><br><span class="line">		<span class="keyword">if</span>((i + <span class="number">1</span>) % <span class="number">2</span>)&#123;<span class="comment">//偶数位</span></span><br><span class="line">			<span class="type">int</span> x = (a[i] + b[i]) % <span class="number">13</span>;</span><br><span class="line">			cout&lt;&lt; s[x];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;<span class="comment">//奇数位</span></span><br><span class="line">			<span class="type">int</span> x = b[i] - a[i];</span><br><span class="line">			<span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += <span class="number">10</span>;</span><br><span class="line">			cout&lt;&lt; x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1049%20%E6%95%B0%E5%88%97%E7%9A%84%E7%89%87%E6%AE%B5%E5%92%8C%20(20%20%E5%88%86)(%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%E5%92%8C%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%E7%AD%94%E6%A1%88%E9%94%99%E8%AF%AF)/</url>
    <content><![CDATA[<h1 id="1049-数列的片段和-20-分"><a href="#1049-数列的片段和-20-分" class="headerlink" title="1049 数列的片段和 (20 分)"></a>1049 数列的片段和 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275792359424">题目链接</a></h2><h1 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h1><p>我们首先看数据范围<br><img src="https://img-blog.csdnimg.cn/0a3fef30a82c40e48ff85a4d4e247e5a.png" alt="在这里插入图片描述"><br>这就意味着我们的算法只能是O（N）或者O（logN），O（N^2）必超时<br>因此我们来这样想：对于每一个位置上的元素，它在结果中计算的次数是多少？<br>分为两种情况：<br>(1)不包含前面的元素，次数为  <strong>n - i + 1</strong><br>(2)包含前面的元素，次数为   <strong>(i - 1) * (n - i + 1)</strong><br>把二者加起来就是 i*（n - i + 1）<br>设每次读入的项为xi，则答案为<br><img src="https://img-blog.csdnimg.cn/f2b7d52698b945ea82fbd06041a81771.png" alt="在这里插入图片描述"></p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>这里主要是由于n取最大值时，int和double超范围所致，因此我们统统使用long long和long double。<br> &#x3D;&#x3D;补充：long double使用时scanf和printf格式使用”%Lf”&#x3D;&#x3D;</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> n, i;</span><br><span class="line">	<span class="type">long</span> <span class="type">double</span> sum = <span class="number">0.0</span>, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%Lf&quot;</span>, &amp;x);</span><br><span class="line">		sum += x * (i * (n - i + <span class="number">1</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.2Lf&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1050%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1050-螺旋矩阵-25-分"><a href="#1050-螺旋矩阵-25-分" class="headerlink" title="1050 螺旋矩阵 (25 分)"></a>1050 螺旋矩阵 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805275146436608">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>关键就是以下几点：<br>（1）<strong>排序</strong>：sort<br>（2）<strong>矩阵的行数和列数的求法</strong>：从根号n向下取整开始遍历，直到整除。<br>（3）<strong>螺旋填充</strong>：这个是比较麻烦的，第一，用cnt记录当前已经填充的数的数目，并用while循环控制，第二，临界判断，一个是是否超出矩阵，一个是是否已经填过，都需要判断出来。第三，方向数组的使用，用dir的值来判断需要填充的下一个值的位置。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 105</span></span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> mp[M][M];</span><br><span class="line"><span class="type">int</span> x[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;<span class="comment">//方向数组</span></span><br><span class="line"><span class="type">int</span> y[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;<span class="comment">//方向数组</span></span><br><span class="line"><span class="type">int</span> dir;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;<span class="comment">//排序函数</span></span><br><span class="line">	<span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> p, q;<span class="comment">//x和 y的范围</span></span><br><span class="line"><span class="type">int</span> on[N][N];<span class="comment">//是否已经被用过</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">	<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = (<span class="type">int</span>)<span class="built_in">sqrt</span>(n); i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(n % i == <span class="number">0</span>)&#123;</span><br><span class="line">			p = i;</span><br><span class="line">			q = n / i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= q; ++ j)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= p; ++ i)</span><br><span class="line">			on[i][j] = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> x_now = <span class="number">1</span>, y_now = <span class="number">1</span>;</span><br><span class="line">	on[x_now][y_now] = <span class="number">0</span>;<span class="comment">//关键的初始化，标记第一个点为已到达过</span></span><br><span class="line">	mp[x_now][y_now] = a[cnt];</span><br><span class="line">	<span class="keyword">while</span>(cnt &lt; n)&#123;</span><br><span class="line">		++ cnt;</span><br><span class="line">		<span class="keyword">if</span>(x_now + x[dir] &gt;= <span class="number">1</span> &amp;&amp; x_now + x[dir] &lt;= p &amp;&amp; y_now + y[dir] &gt;= <span class="number">1</span> &amp;&amp; y_now + y[dir] &lt;= q</span><br><span class="line">			&amp;&amp; on[x_now + x[dir]][y_now + y[dir]])&#123;</span><br><span class="line">				mp[x_now + x[dir]][y_now + y[dir]] = a[cnt];</span><br><span class="line">				on[x_now + x[dir]][y_now + y[dir]] = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			++ dir;</span><br><span class="line">			dir %= <span class="number">4</span>;</span><br><span class="line">			mp[x_now + x[dir]][y_now + y[dir]] = a[cnt];</span><br><span class="line">			on[x_now + x[dir]][y_now + y[dir]] = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		x_now += x[dir];</span><br><span class="line">		y_now += y[dir];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= q; ++ j)<span class="comment">//不要搞反p和q</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= p; ++ i)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, mp[i][j]);</span><br><span class="line">			<span class="keyword">if</span>(i &lt; p) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);	</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1052%20%E5%8D%96%E4%B8%AA%E8%90%8C%20(20%20%E5%88%86)%EF%BC%88%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%EF%BC%89%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1052-卖个萌-20-分"><a href="#1052-卖个萌-20-分" class="headerlink" title="1052 卖个萌 (20 分)"></a>1052 卖个萌 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273883951104">题目链接</a></h2><h2 id="算法分析和测试点"><a href="#算法分析和测试点" class="headerlink" title="算法分析和测试点"></a>算法分析和测试点</h2><p>用string类型字符串变量读入一行，然后依次判断是否为表情并存储在另一个string字符串中，本题的细节有以下几点：<br>1.中文字符与英文字符，前者占两个字节，后者占一个字节，这就意味着如果用char类型来存储，不能输出正常的字符。<br>2.转义字符’\‘在“Are you kidding me? @\&#x2F;@”中必须写出“\\”才能正常输出一个’\‘<br><img src="https://img-blog.csdnimg.cn/0fbe774e196f481481334129b9892e7a.png" alt="在这里插入图片描述"><br>3.【】的匹配问题，只有在【】之间的符号才是表情（<strong>测试点二</strong>）<br>4.我只开了一个str字符串数组，所以就需要一个cnt数组来存每种表情的数目，然后就可以进一步调整下标并输出读入的要求中相应数字对应的表情。（<del>压行</del> ）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">5</span>];<span class="comment">//一个集合有几个符号</span></span><br><span class="line"><span class="type">int</span> ct, t;</span><br><span class="line">string str[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; ++ i)&#123;</span><br><span class="line">		<span class="built_in">getline</span>(cin, s[i]);<span class="comment">//包含空格地读入一行</span></span><br><span class="line">		<span class="type">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> len = s[i].<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; len; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i][j] == <span class="string">&#x27;[&#x27;</span>)&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				cnt[i] ++;</span><br><span class="line">				ct ++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(s[i][j] != <span class="string">&#x27;[&#x27;</span> &amp;&amp; s[i][j] != <span class="string">&#x27;]&#x27;</span> &amp;&amp; s[i][j] != <span class="string">&#x27; &#x27;</span> &amp;&amp; flag)</span><br><span class="line">				str[ct] += s[i][j];<span class="comment">//只要是合法的，都加到str字符串后面</span></span><br><span class="line">			<span class="keyword">if</span>(s[i][j] == <span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">				flag = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">	<span class="type">int</span> a, b, c, d, e;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d, &amp;e);</span><br><span class="line">		<span class="keyword">if</span>(!(a &gt;= <span class="number">1</span> &amp;&amp; a &lt;= cnt[<span class="number">1</span>] &amp;&amp;</span><br><span class="line">			e &gt;= <span class="number">1</span> &amp;&amp; e &lt;= cnt[<span class="number">1</span>] &amp;&amp;</span><br><span class="line">			b &gt;= <span class="number">1</span> &amp;&amp; b &lt;= cnt[<span class="number">2</span>] &amp;&amp;</span><br><span class="line">			d &gt;= <span class="number">1</span> &amp;&amp; d &lt;= cnt[<span class="number">2</span>] &amp;&amp;</span><br><span class="line">			c &gt;= <span class="number">1</span> &amp;&amp; c &lt;= cnt[<span class="number">3</span>]))&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;Are you kidding me? @\\/@&quot;</span>);</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		b += cnt[<span class="number">1</span>];</span><br><span class="line">		d += cnt[<span class="number">1</span>];</span><br><span class="line">		c += (cnt[<span class="number">1</span>] + cnt[<span class="number">2</span>]);</span><br><span class="line">		cout&lt;&lt; str[a]&lt;&lt; <span class="string">&#x27;(&#x27;</span>&lt;&lt; str[b]&lt;&lt; str[c]&lt;&lt; str[d]&lt;&lt; <span class="string">&#x27;)&#x27;</span>&lt;&lt; str[e]&lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>对于中文字符的处理，可以选择string字符串类型，而且极有可能自己的编译器不能输出相应的中文字符，一定程度上影响了自己对结果正确性的判断。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1053%20%E4%BD%8F%E6%88%BF%E7%A9%BA%E7%BD%AE%E7%8E%87%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1053-住房空置率-20-分"><a href="#1053-住房空置率-20-分" class="headerlink" title="1053 住房空置率 (20 分)"></a>1053 住房空置率 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805273284165632">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>没什么特别的，按照题目要求做就好，注意不要搞错数据类型就好。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt1, cnt2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">double</span> x, e;</span><br><span class="line">	<span class="type">int</span> n, d;</span><br><span class="line">	<span class="type">int</span> k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%lf%d&quot;</span>, &amp;n, &amp;e, &amp;d);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">			<span class="keyword">if</span>(x &lt; e) cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(cnt &gt; k / <span class="number">2</span>)&#123;</span><br><span class="line">			cnt1 ++;</span><br><span class="line">			<span class="keyword">if</span>(k &gt; d)&#123;</span><br><span class="line">				cnt2 ++;</span><br><span class="line">				cnt1 --;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.1lf%% %.1lf%%&quot;</span>, cnt1 * <span class="number">100.0</span> / n, cnt2 * <span class="number">100.0</span> / n);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1054%20%E6%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1054-求平均值-20-分"><a href="#1054-求平均值-20-分" class="headerlink" title="1054 求平均值 (20 分)"></a>1054 求平均值 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272659214336">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>关键就在于判断是否合法，应当注意以下几点：<br>①.小数点的数目。<br>②.小数点后数字个数<br>③.该数的绝对值大小是否大于1000<br>其次就是统计合法数字的个数，然后再进行特殊判断，分以下三种情况：<br>①.0个合法数字<br>②.1个合法数字<br>③.2个及以上个合法数字</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>字符串与数字之间的转化常用的库函数及其头文件<br>1.字符串到数字（#include&lt;stdlib.h&gt;）<br>atof(将字符串转换成浮点型数)<br>atoi(将字符串转换成整型数)<br>atol(将字符串转换成长整型数)<br>2.数字到字符串（#include&lt;stdio.h&gt;）<br>sprintf(用法就是在printf的第一个参数前面加上字符串首地址就好了)</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="type">double</span> sum;<span class="comment">//合法数字的总和</span></span><br><span class="line"><span class="type">int</span> sum_cnt;<span class="comment">//合法数字的个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">		<span class="type">int</span> len = <span class="built_in">strlen</span>(s);</span><br><span class="line">		<span class="type">int</span> cnt = <span class="number">0</span>, num = <span class="number">0</span>;<span class="comment">//cnt统计小数点个数。num统计第一个小数点后数字的个数</span></span><br><span class="line">		<span class="type">bool</span> flag = <span class="number">0</span>;<span class="comment">//是否出现小数点</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; len; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[j]))&#123;</span><br><span class="line">				<span class="keyword">if</span>(flag) num ++;<span class="comment">//如果已经出现小数点，则开始统计小数点后数字的个数</span></span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j] == <span class="string">&#x27;.&#x27;</span>)&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				cnt ++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j] == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">				<span class="keyword">continue</span>;	</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				cnt = <span class="number">100</span>;<span class="comment">//非法字符，把cnt设定为一个极大值</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">double</span> x = <span class="built_in">atof</span>(s);</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &gt; <span class="number">1000</span> || cnt &gt;= <span class="number">2</span> || num &gt; <span class="number">2</span>)&#123;<span class="comment">//非法的情况</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;ERROR: %s is not a legal number\n&quot;</span>, s);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			sum += x;</span><br><span class="line">			sum_cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(!sum_cnt)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;The average of 0 numbers is Undefined&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(sum_cnt == <span class="number">1</span>)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;The average of 1 number is %.2f&quot;</span>, sum / sum_cnt);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;The average of %d numbers is %.2f&quot;</span>, sum_cnt, sum / sum_cnt);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1051%20%E5%A4%8D%E6%95%B0%E4%B9%98%E6%B3%95%20(15%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B92%E3%80%813%E7%AD%94%E6%A1%88%E9%94%99%E8%AF%AF%EF%BC%89%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1051-复数乘法-15-分"><a href="#1051-复数乘法-15-分" class="headerlink" title="1051 复数乘法 (15 分)"></a>1051 复数乘法 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805274496319488">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>主要就是数学运算，<del>高中及以上应该问题不大</del> 。<br>$R_1<em>e^{P_1</em>i}×R_2<em>e^{P_2</em>i}&#x3D;(R_1*R_2)<em>e^{(P_1+P_2)i}$<br>$A&#x3D;(R_1</em>R_2)<em>cos(P_1+P_2)$<br>$B&#x3D;(R_1</em>R_2)*sin(P_1+P_2)$<br>然后格式化输出A+Bi即可</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>这是一开始的情况</p>
<p><img src="https://img-blog.csdnimg.cn/cdb92c2ddba9406da5440f91489303c2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>后来发现了问题，出在：我没有对+0.00和-0.00进行统一，按照题目测试点的要求，A的绝对值如果小于0.005，则输出0.00，B的绝对值如果小于0.005，则输出+0.00.<br><strong>注意</strong>：printf自带四舍五入。<br><strong>补充知识</strong>：%+d或者%+f可以带符号输出变量（<del>代码变得更简洁了</del> ）。<br>对特殊情况进行判断，就通过了。<br><img src="https://img-blog.csdnimg.cn/f366b23e71fd44ed90345f73f5172990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">double</span> a, b, c, d;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf%lf&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">	<span class="type">double</span> A = a * c * <span class="built_in">cos</span>(b + d), B = a * c * <span class="built_in">sin</span>(b + d);</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(A) &lt; <span class="number">0.005</span>) <span class="built_in">printf</span>(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, A);</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(B) &lt; <span class="number">0.005</span>) <span class="built_in">printf</span>(<span class="string">&quot;+0.00i&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%+.2fi&quot;</span>, B);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1055%20%E9%9B%86%E4%BD%93%E7%85%A7%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1055-集体照-25-分"><a href="#1055-集体照-25-分" class="headerlink" title="1055 集体照 (25 分)"></a>1055 集体照 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805272021680128">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>本身题目不难理解，但是实现起来比较繁琐。在我的代码里&#x3D;&#x3D;核心的处理思想&#x3D;&#x3D;是</p>
<h3 id="一、用map建立一个链表结构"><a href="#一、用map建立一个链表结构" class="headerlink" title="一、用map建立一个链表结构"></a>一、用map建立一个链表结构</h3><p>我们根据题目的要求可知，假设编号1到n的同学身高已经降序排列，那么他们从左往右（输出时的顺序）为：<br>$……8-6-4-2-1-3-5-7-9……$<br>因此我们可以初始化这样一个大小为n的链表，然后在每一行输出时，首先求出这一行的学生个数，然后得到不大于这个数的最大偶数，然后从左往右依次处理：1.输出当前同学的名字 2.用链表把位置调到下一个同学的位置。然后直至结束。</p>
<h3 id="二、使用一个“势能”的概念"><a href="#二、使用一个“势能”的概念" class="headerlink" title="二、使用一个“势能”的概念"></a>二、使用一个“势能”的概念</h3><p>具体来讲，就是我们每一次获得当前行的学生个数后，虽然我们通过链表得到了对应同学的编号，但是与它在结构体数组中的下标不一致，恰好相差，当前行之前的所有行总共的学生个数。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">student</span>&#123;</span><br><span class="line">	string name;</span><br><span class="line">	<span class="type">int</span> height;</span><br><span class="line">&#125;stu[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(student a, student b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.height == b.height ? a.name &lt; b.name : a.height &gt; b.height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line">map&lt; <span class="type">int</span> , <span class="type">int</span> &gt;mp;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(m % <span class="number">2</span> == <span class="number">1</span>) m -= <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> n0 = n;</span><br><span class="line">	<span class="keyword">while</span>(n0 --)&#123;</span><br><span class="line">		<span class="keyword">if</span>(m % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; m != <span class="number">2</span>)&#123;</span><br><span class="line">			mp[m] = m - <span class="number">2</span>;</span><br><span class="line">			m -= <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(m == <span class="number">2</span>)&#123;</span><br><span class="line">			mp[m] = <span class="number">1</span>;</span><br><span class="line">			m -= <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			mp[m] = m + <span class="number">2</span>;</span><br><span class="line">			m += <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> h)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> x = l;</span><br><span class="line">	<span class="keyword">if</span>(l != <span class="number">1</span> &amp;&amp; l % <span class="number">2</span> == <span class="number">1</span>) x -= <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= l; ++ i)&#123;</span><br><span class="line">		cout&lt;&lt; stu[x + h].name;</span><br><span class="line">		x = mp[x];</span><br><span class="line">		<span class="keyword">if</span>(i &lt; l) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">	<span class="built_in">init</span>(n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		cin&gt;&gt; stu[i].name&gt;&gt; stu[i].height;</span><br><span class="line">	<span class="built_in">sort</span>(stu + <span class="number">1</span>, stu + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="type">int</span> h = <span class="number">0</span>;<span class="comment">//势能</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> l = n / k;</span><br><span class="line">		<span class="keyword">if</span>(i == <span class="number">1</span>) l += n % k;<span class="comment">//多出的同学补到最后一排</span></span><br><span class="line">		<span class="built_in">print</span>(l, h);</span><br><span class="line">		h += l;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1056%20%E7%BB%84%E5%90%88%E6%95%B0%E7%9A%84%E5%92%8C%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1056-组合数的和-15-分"><a href="#1056-组合数的和-15-分" class="headerlink" title="1056 组合数的和 (15 分)"></a>1056 组合数的和 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805271455449088">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>跑两次循环，i和j不相等时，就把两位数加入到总和中。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 15</span></span><br><span class="line"><span class="type">int</span> a[N], sum;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x * <span class="number">10</span> + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)</span><br><span class="line">			<span class="keyword">if</span>(i != j)&#123;</span><br><span class="line">				sum += <span class="built_in">cal</span>(a[i], a[j]);</span><br><span class="line">			&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1057%20%E6%95%B0%E9%9B%B6%E5%A3%B9%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1057-数零壹-20-分"><a href="#1057-数零壹-20-分" class="headerlink" title="1057 数零壹 (20 分)"></a>1057 数零壹 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270914383872">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>从字符串第一位开始到最后一位，如果是小写或大写的字母，依次更新sum的值，然后转化为二进制数，统计0和1的个数</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="built_in">getline</span>(cin, s);</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>(), sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i])) s[i] = s[i] - <span class="string">&#x27;A&#x27;</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">islower</span>(s[i])) sum += s[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> cnt1 = <span class="number">0</span>, cnt2 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(sum)&#123;</span><br><span class="line">		<span class="keyword">if</span>(sum % <span class="number">2</span> == <span class="number">0</span>) cnt1 ++;</span><br><span class="line">		<span class="keyword">else</span>	cnt2 ++;</span><br><span class="line">		sum /= <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, cnt1, cnt2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1058%20%E9%80%89%E6%8B%A9%E9%A2%98%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1058-选择题-20-分"><a href="#1058-选择题-20-分" class="headerlink" title="1058 选择题 (20 分)"></a>1058 选择题 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270356541440">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>我的算法主要有两点<br>1.开一个标记数组on【300】（acii最大就255），标记为1，便于后续判断是否为正确答案<br>2.结构体数组排序，并特判后输出。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">que</span>&#123;</span><br><span class="line">	<span class="type">int</span> mx;<span class="comment">//满分</span></span><br><span class="line">	<span class="type">int</span> id;<span class="comment">//题目号</span></span><br><span class="line">	<span class="type">int</span> wrong;<span class="comment">//错误人数</span></span><br><span class="line">	<span class="type">int</span> true_cnt;<span class="comment">//该题正确选项的数目</span></span><br><span class="line">	<span class="type">int</span> on[<span class="number">300</span>];标记正确答案的数组</span><br><span class="line">&#125;ques[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(que a, que b)</span></span>&#123;<span class="comment">//比较函数</span></span><br><span class="line">	<span class="keyword">if</span>(a.wrong != b.wrong) <span class="keyword">return</span> a.wrong &gt; b.wrong;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> a.id &lt; b.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">char</span> s;<span class="comment">//临时变量</span></span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="type">int</span> x, y, z;<span class="comment">//临时变量</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		ques[i].id = i;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);<span class="comment">//第二个变量后面用不到 </span></span><br><span class="line">		ques[i].mx = x;</span><br><span class="line">		ques[i].true_cnt = z;</span><br><span class="line">		<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">islower</span>(s))</span><br><span class="line">				ques[i].on[(<span class="type">int</span>)s] = <span class="number">1</span>;<span class="comment">//标记正确答案</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> cnt, sum;</span><br><span class="line">	<span class="type">bool</span> flag, judge = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="comment">//每一个人都要初始化</span></span><br><span class="line">		cnt = <span class="number">0</span>;<span class="comment">//当前题目序号</span></span><br><span class="line">		sum = <span class="number">0</span>;<span class="comment">//当前已获总分</span></span><br><span class="line">		<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">				cnt ++;<span class="comment">//题目号加1</span></span><br><span class="line">				flag = <span class="number">1</span>;<span class="comment">//暂时标记为本题回答正确</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s))&#123;</span><br><span class="line">				<span class="keyword">if</span>(s - <span class="string">&#x27;0&#x27;</span> != ques[cnt].true_cnt)</span><br><span class="line">					flag = <span class="number">0</span>;<span class="comment">//如果选项个数不匹配，回答错误			</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27; &#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(s))&#123;</span><br><span class="line">				<span class="keyword">if</span>(!ques[cnt].on[(<span class="type">int</span>)s])&#123;</span><br><span class="line">					flag = <span class="number">0</span>;<span class="comment">//如果有的选项不对，回答错误</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27;)&#x27;</span>)&#123;<span class="comment">//统计本题回答的情况</span></span><br><span class="line">				<span class="keyword">if</span>(flag)	sum += ques[cnt].mx;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					ques[cnt].wrong ++;	</span><br><span class="line">					judge = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);<span class="comment">//输出这个人的总分</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(judge) <span class="built_in">puts</span>(<span class="string">&quot;Too simple&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">sort</span>(ques + <span class="number">1</span>, ques + m + <span class="number">1</span>, cmp);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, ques[<span class="number">1</span>].wrong, ques[<span class="number">1</span>].id);</span><br><span class="line">		<span class="type">int</span> t = <span class="number">2</span>;<span class="comment">//错误数量并列，则输出编号（递增）</span></span><br><span class="line">		<span class="keyword">while</span>(ques[t].wrong == ques[<span class="number">1</span>].wrong)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, ques[t].id);</span><br><span class="line">			t ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1059%20C%E8%AF%AD%E8%A8%80%E7%AB%9E%E8%B5%9B%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1059-C语言竞赛-20-分"><a href="#1059-C语言竞赛-20-分" class="headerlink" title="1059 C语言竞赛 (20 分)"></a>1059 C语言竞赛 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269828059136">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>跑一边素数筛（<a href="https://blog.csdn.net/qq_34771124/article/details/87465483">欧拉筛</a>），用map结构记录每位选手的排名，然后进行查询和特判。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line">map&lt; <span class="type">int</span>, <span class="type">int</span> &gt;rak;</span><br><span class="line"><span class="type">int</span> is[N];</span><br><span class="line"><span class="type">int</span> on[N], prime[N], t;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	on[<span class="number">0</span>] = on[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; <span class="number">10000</span>; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!on[i]) prime[++ t] = i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= t &amp;&amp; i * prime[j] &lt;= <span class="number">10000</span>; ++ j)&#123;</span><br><span class="line">			on[i * prime[j]] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">init</span>();</span><br><span class="line">	<span class="type">int</span> n, id, k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">		rak[id] = i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">		<span class="keyword">if</span>(!rak[id])&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%04d: Are you kidding?\n&quot;</span>, id);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(is[id])&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%04d: Checked\n&quot;</span>, id);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(rak[id] == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%04d: Mystery Award\n&quot;</span>, id);</span><br><span class="line">			is[id] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!on[rak[id]])&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%04d: Minion\n&quot;</span>, id);</span><br><span class="line">			is[id] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%04d: Chocolate\n&quot;</span>, id);</span><br><span class="line">		is[id] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1060%20%E7%88%B1%E4%B8%81%E9%A1%BF%E6%95%B0%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1060-爱丁顿数-25-分"><a href="#1060-爱丁顿数-25-分" class="headerlink" title="1060 爱丁顿数 (25 分)"></a>1060 爱丁顿数 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805269312159744">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>首先对这些数从大到小排序，然后从第一个数开始判断，如果当前数的值大于当前下标值，则合法，下标增大。直到不合法的位置p，那么p-1就是符合要求的最大整数E。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line"><span class="type">int</span> num[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, num + i);</span><br><span class="line">	<span class="built_in">sort</span>(num + <span class="number">1</span>, num + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="type">int</span> p = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(num[p] &gt; p)</span><br><span class="line">		p ++;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, p - <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1061%20%E5%88%A4%E6%96%AD%E9%A2%98%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1061-判断题-15-分"><a href="#1061-判断题-15-分" class="headerlink" title="1061 判断题 (15 分)"></a>1061 判断题 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268817231872">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>存下答案和分数，然后计算个人得分。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">question</span>&#123;</span><br><span class="line">	<span class="type">int</span> value;</span><br><span class="line">	<span class="type">int</span> ans;</span><br><span class="line">&#125;que[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;que[i].value);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;que[i].ans);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>, x;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">			sum += (!(que[j].ans ^ x)) * que[j].value;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1062%20%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1062-最简分数-20-分"><a href="#1062-最简分数-20-分" class="headerlink" title="1062 最简分数 (20 分)"></a>1062 最简分数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805268334886912">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>一层循环，每一次都判断两件事情，一是范围是否介于二者之间，二是公约数是否为1.</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a &lt; b) <span class="built_in">swap</span>(a, b);</span><br><span class="line">	<span class="keyword">if</span>(a % b == <span class="number">0</span>) <span class="keyword">return</span> b;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">lcd</span>(a - b, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> a1, a2, b1, b2, k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d/%d %d/%d %d&quot;</span>, &amp;a1, &amp;b1, &amp;a2, &amp;b2, &amp;k);</span><br><span class="line">	<span class="type">double</span> low = <span class="number">1.0</span> * a1 / b1;</span><br><span class="line">	<span class="type">double</span> upp = <span class="number">1.0</span> * a2 / b2;</span><br><span class="line">	<span class="keyword">if</span>(low &gt; upp) <span class="built_in">swap</span>(low, upp);</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">0</span>;<span class="comment">//用于格式化输出</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; <span class="number">1.0</span> * i / k &lt; upp; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="number">1.0</span> * i / k &gt; low &amp;&amp; <span class="built_in">lcd</span>(i, k) == <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d/%d&quot;</span>, i, k);</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1063%20%E8%AE%A1%E7%AE%97%E8%B0%B1%E5%8D%8A%E5%BE%84%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1063-计算谱半径-20-分"><a href="#1063-计算谱半径-20-分" class="headerlink" title="1063 计算谱半径 (20 分)"></a>1063 计算谱半径 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267860930560">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>依次读入每一组x和y，然后计算到原点的距离，并对最大值进行更新。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, x, y;</span><br><span class="line">	<span class="type">double</span> mx = <span class="number">-1</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		mx = <span class="built_in">max</span>(<span class="built_in">sqrt</span>(x * x + y * y), mx);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, mx);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1064%20%E6%9C%8B%E5%8F%8B%E6%95%B0%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1064-朋友数-20-分"><a href="#1064-朋友数-20-分" class="headerlink" title="1064 朋友数 (20 分)"></a>1064 朋友数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805267416334336">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>每读入一个数，计算它的朋友证号，并在cnt数组的相应位置加一，如果首次出现，则tot加一，tot即为朋友证号的数目，然后再跑一次循环，从小到大输出朋友证号。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 50</span></span><br><span class="line"><span class="type">int</span> cnt[N], tot;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(x)&#123;</span><br><span class="line">		sum += x % <span class="number">10</span>;</span><br><span class="line">		x /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="keyword">if</span>(++ cnt[<span class="built_in">cal</span>(x)] == <span class="number">1</span>) tot ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tot);</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">0</span>;<span class="comment">//格式化输出</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">36</span>; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(cnt[i] &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1065%20%E5%8D%95%E8%BA%AB%E7%8B%97%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1065-单身狗-25-分"><a href="#1065-单身狗-25-分" class="headerlink" title="1065 单身狗 (25 分)"></a>1065 单身狗 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266942377984">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用map类型rel存下两个人的关系，用is数组记录是否到场，然后判断是否落单。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100000</span></span><br><span class="line"><span class="type">int</span> is[N], ans[N], num[N], t;</span><br><span class="line">map&lt; <span class="type">int</span> , <span class="type">int</span> &gt;rel;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, x, y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		rel[x] = y + <span class="number">1</span>;<span class="comment">//细节处理 </span></span><br><span class="line">		rel[y] = x + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">		is[num[i]] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!rel[num[i]])	ans[++ t] = num[i];</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(is[rel[num[i]] - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span> ans[++ t] = num[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(ans + <span class="number">1</span>, ans + t + <span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%05d&quot;</span>, ans[i]);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot; %05d&quot;</span>, ans[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1067%20%E8%AF%95%E5%AF%86%E7%A0%81%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%E5%92%8C%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%94%EF%BC%89%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E5%92%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1067-试密码-20-分"><a href="#1067-试密码-20-分" class="headerlink" title="1067 试密码 (20 分)"></a>1067 试密码 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266007048192">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>题目比较简单，模拟一下就好了。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我错在了测试点二和测试点五，是因为我没有考虑：</p>
<h1 id="尝试的字符串居然可以含有空格！！！"><a href="#尝试的字符串居然可以含有空格！！！" class="headerlink" title="尝试的字符串居然可以含有空格！！！"></a>尝试的字符串居然可以含有空格！！！</h1><p><img src="https://img-blog.csdnimg.cn/06f54577a49a475bb386474a7b941385.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h1 id="（出题人煞费苦心了-O-0）"><a href="#（出题人煞费苦心了-O-0）" class="headerlink" title="（出题人煞费苦心了 O_0）"></a>（<del>出题人煞费苦心了</del> O_0）</h1><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, cnt = <span class="number">0</span>;</span><br><span class="line">	string ans, s;</span><br><span class="line">	cin&gt;&gt; ans&gt;&gt; n;</span><br><span class="line">	<span class="built_in">getline</span>(cin, s);<span class="comment">//第一行后半部分的空行</span></span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">getline</span>(cin, s))&#123;</span><br><span class="line">		<span class="keyword">if</span>(s.<span class="built_in">size</span>() == <span class="number">1</span> &amp;&amp; s[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">if</span>(s == ans)&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;Welcome in&quot;</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Wrong password: %s\n&quot;</span>, s.<span class="built_in">c_str</span>());</span><br><span class="line">			cnt ++;</span><br><span class="line">			<span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;Account locked&quot;</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1066%20%E5%9B%BE%E5%83%8F%E8%BF%87%E6%BB%A4%20(15%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1066-图像过滤-15-分"><a href="#1066-图像过滤-15-分" class="headerlink" title="1066 图像过滤 (15 分)"></a>1066 图像过滤 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805266514558976">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>读入一个数，判断它是否在区间内，如果在，则修改它的值，然后用printf格式化输出用0补全的三个位宽的这个数，最后要注意空格和换行。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> m, n, low, upp, chge;</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;m, &amp;n, &amp;low, &amp;upp, &amp;chge);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">			<span class="keyword">if</span>(x &gt;= low &amp;&amp; x &lt;= upp) x = chge;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%03d&quot;</span>, x);</span><br><span class="line">			<span class="keyword">if</span>(j &lt; n) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1069%20%E5%BE%AE%E5%8D%9A%E8%BD%AC%E5%8F%91%E6%8A%BD%E5%A5%96%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1069-微博转发抽奖-20-分"><a href="#1069-微博转发抽奖-20-分" class="headerlink" title="1069 微博转发抽奖 (20 分)"></a>1069 微博转发抽奖 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265159798784">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用flag记录是否输出过获奖人名字<br>用map类型take记录某人是否拿走过奖品<br>用cnt记录间隔人数<br>然后按要求输出就好。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">map&lt; string , <span class="type">int</span> &gt;take;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string name;</span><br><span class="line">	<span class="type">int</span> m, n, s, cnt;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;m, &amp;n, &amp;s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; name;</span><br><span class="line">		<span class="keyword">if</span>(i &lt; s) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(i == s)&#123;</span><br><span class="line">			take[name] = <span class="number">1</span>;</span><br><span class="line">			cout&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; name&lt;&lt; endl;</span><br><span class="line">			cnt = flag = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cnt ++;</span><br><span class="line">			<span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line">				<span class="keyword">if</span>(!take[name])&#123;</span><br><span class="line">					take[name] = <span class="number">1</span>;</span><br><span class="line">					cout&lt;&lt; <span class="string">&#x27; &#x27;</span>&lt;&lt; name&lt;&lt; endl;</span><br><span class="line">					cnt = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> cnt --;<span class="comment">//之前已经领到奖品，跳过这个人</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">&quot;Keep going...&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1068%20%E4%B8%87%E7%BB%BF%E4%B8%9B%E4%B8%AD%E4%B8%80%E7%82%B9%E7%BA%A2%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1068-万绿丛中一点红-20-分"><a href="#1068-万绿丛中一点红-20-分" class="headerlink" title="1068 万绿丛中一点红 (20 分)"></a>1068 万绿丛中一点红 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805265579229184">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>题目本身不难，但是非常难get到出题人的全部意图，要注意以下几点：<br>（1）周围八个点（×）—–边界的点也要考虑在内，如何判断？（看代码的judge函数）<br>（2）差值—–差的绝对值<br>（3）唯一存在——颜色不重复</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我这个题卡在测试点三，一开始是因为没有考虑只能出现一次的情况，后来用map修改后还是不行，因此又调了半天，最终发现是在“差值”上面出了问题，应该判断二者的差的绝对值。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="type">int</span> num[N][N];</span><br><span class="line"><span class="type">int</span> x, y; </span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="type">int</span> m, n, tol;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">judge</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>;</span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;on;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;m, &amp;n, &amp;tol);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i][j]);</span><br><span class="line">			on[num[i][j]] ++;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)&#123;</span><br><span class="line">			<span class="type">bool</span> flag = <span class="built_in">judge</span>(i, j);</span><br><span class="line">			<span class="keyword">if</span>(flag &amp;&amp; on[num[i][j]] == <span class="number">1</span>)&#123;</span><br><span class="line">				++ t;</span><br><span class="line">				x = i, y = j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(t == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">&quot;Not Exist&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(t == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;(%d, %d): %d&quot;</span>, y, x, num[x][y]);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">puts</span>(<span class="string">&quot;Not Unique&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">judge</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> is = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> i_low, i_upp, j_low, j_upp;<span class="comment">//需要遍历的图的行列边界值</span></span><br><span class="line">	<span class="keyword">if</span>(x == <span class="number">1</span>) i_low = x, i_upp = x + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x == n) i_low = x - <span class="number">1</span>, i_upp = x;</span><br><span class="line">	<span class="keyword">else</span>	i_low = x - <span class="number">1</span>, i_upp = x + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(y == <span class="number">1</span>) j_low = y, j_upp = y + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(y == n) j_low = y - <span class="number">1</span>, j_upp = y;</span><br><span class="line">	<span class="keyword">else</span> j_low = y - <span class="number">1</span>, j_upp = y + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = i_low; i &lt;= i_upp; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = j_low; j &lt;= j_upp; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i == x &amp;&amp; j == y) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">abs</span>(num[x][y] - num[i][j]) &lt;= tol)&#123;</span><br><span class="line">				is = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> is;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1070%20%E7%BB%93%E7%BB%B3%20(25%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B91%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1070-结绳-25-分"><a href="#1070-结绳-25-分" class="headerlink" title="1070 结绳 (25 分)"></a>1070 结绳 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264706813952">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>从第一根最短的绳子开始折起来，折到最长的绳子损失就最小。（贪心算法）</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我这个题卡在了测试点一<br><img src="https://img-blog.csdnimg.cn/7b967f4619764025b337333c365e836a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>然后我就去上网察看各路代码，再对照我的代码后发现，原来的算法就是错的，<del>真不知道怎么对了另外四个测试点</del> ，问题就出在这里：</p>
<blockquote>
<p>double sum &#x3D; 0;<br>    for(int i &#x3D; 1; i &lt;&#x3D; n; ++ i)<br>        sum &#x3D; (sum + x[i]) &#x2F; 2.0;</p>
</blockquote>
<p>折第一根绳子就要对折？很明显是不对的<br>所以稍作修改，从第二根才开始对折</p>
<blockquote>
<pre><code>double sum = x[1];
for(int i = 2; i &lt;= n; ++ i)
    sum = (sum + x[i]) / 2.0;
</code></pre>
</blockquote>
<p>这样就可以保证正确性了！<br><img src="https://img-blog.csdnimg.cn/3febe546860b452e8bce33ebae3c6e59.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="type">double</span> x[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x[i]);</span><br><span class="line">	<span class="built_in">sort</span>(x + <span class="number">1</span>, x + n + <span class="number">1</span>);</span><br><span class="line">	<span class="type">double</span> sum = x[<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++ i)</span><br><span class="line">		sum = (sum + x[i]) / <span class="number">2.0</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, (<span class="type">int</span>)sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1071%20%E5%B0%8F%E8%B5%8C%E6%80%A1%E6%83%85%20(15%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1071-小赌怡情-15-分"><a href="#1071-小赌怡情-15-分" class="headerlink" title="1071 小赌怡情 (15 分)"></a>1071 小赌怡情 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805264312549376">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>题目简单，做好判断，按要求输出。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> T, K;</span><br><span class="line">	<span class="type">int</span> n1, b, t, n2;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;T, &amp;K);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= K; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n1, &amp;b, &amp;t, &amp;n2);</span><br><span class="line">		<span class="keyword">if</span>(t &gt; T) <span class="built_in">printf</span>(<span class="string">&quot;Not enough tokens.  Total = %d.\n&quot;</span>, T);</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>((n2 &gt; n1 &amp;&amp; b == <span class="number">1</span>) || (n2 &lt; n1 &amp;&amp; b == <span class="number">0</span>))&#123;</span><br><span class="line">				T += t;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;Win %d!  Total = %d.\n&quot;</span>, t, T);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				T -= t;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;Lose %d.  Total = %d.\n&quot;</span>, t, T);</span><br><span class="line">				<span class="keyword">if</span>(T == <span class="number">0</span>)&#123;</span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;Game Over.&quot;</span>);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1072%20%E5%BC%80%E5%AD%A6%E5%AF%84%E8%AF%AD%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1072-开学寄语-20-分"><a href="#1072-开学寄语-20-分" class="headerlink" title="1072 开学寄语 (20 分)"></a>1072 开学寄语 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263964422144">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>比较简单的思路，用vector存下违规物品，然后用find函数查找即可。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我卡在测试点二，只要注意一下**&#x3D;&#x3D;物品编号一定是四位整数&#x3D;&#x3D;**（补0）就OK。<br><img src="https://img-blog.csdnimg.cn/bb5534e9ffb844f89241fee9ea2b4109.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt; <span class="type">int</span> &gt;Ths;</span><br><span class="line"><span class="type">int</span> stu_cnt, ths_cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		Ths.<span class="built_in">push_back</span>(x);</span><br><span class="line">	&#125;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="type">int</span> k, flag;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		flag = <span class="number">0</span>;</span><br><span class="line">		cin&gt;&gt; s&gt;&gt; k;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">find</span>(Ths.<span class="built_in">begin</span>(), Ths.<span class="built_in">end</span>(), x) != Ths.<span class="built_in">end</span>())&#123;</span><br><span class="line">				<span class="keyword">if</span>(!flag)	cout&lt;&lt; s&lt;&lt; <span class="string">&#x27;:&#x27;</span>;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot; %04d&quot;</span>, x);</span><br><span class="line">				ths_cnt ++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">			stu_cnt ++;</span><br><span class="line">			cout&lt;&lt; endl;			</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, stu_cnt, ths_cnt);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1073%20%E5%A4%9A%E9%80%89%E9%A2%98%E5%B8%B8%E8%A7%81%E8%AE%A1%E5%88%86%E6%B3%95%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1073-多选题常见计分法-20-分"><a href="#1073-多选题常见计分法-20-分" class="headerlink" title="1073 多选题常见计分法 (20 分)"></a>1073 多选题常见计分法 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263624683520">题目链接</a></h2><h2 id="x3D-x3D-算法分析-x3D-x3D"><a href="#x3D-x3D-算法分析-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;算法分析&#x3D;&#x3D;"></a>&#x3D;&#x3D;算法分析&#x3D;&#x3D;</h2><h5 id="有点像1058，但是增加了好多细节（呜呜呜-）"><a href="#有点像1058，但是增加了好多细节（呜呜呜-）" class="headerlink" title="有点像1058，但是增加了好多细节（呜呜呜 ）"></a>有点像1058，但是增加了好多细节（<del>呜呜呜</del> ）</h5><h5 id="（题目链接）（博客链接）"><a href="#（题目链接）（博客链接）" class="headerlink" title="（题目链接）（博客链接）"></a>（<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805270356541440">题目链接</a>）（<a href="https://blog.csdn.net/qq_34771124/article/details/121529975?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163836981716780269840946%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=163836981716780269840946&biz_id=&utm_medium=distribute.pc_search_result.none-task-code-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-121529975-0.pc_search_result_control_group&utm_term=1058%20%E9%80%89%E6%8B%A9%E9%A2%98%20(20%20%E5%88%86)Crer_lu">博客链接</a>）</h5><h5 id="话不多说，直接上代码，一道大模拟题，哪里不懂可以在评论区问我。"><a href="#话不多说，直接上代码，一道大模拟题，哪里不懂可以在评论区问我。" class="headerlink" title="话不多说，直接上代码，一道大模拟题，哪里不懂可以在评论区问我。"></a>话不多说，直接上代码，一道大模拟题，哪里不懂可以在评论区问我。</h5><h2 id="x3D-x3D-代码实现-x3D-x3D"><a href="#x3D-x3D-代码实现-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;代码实现&#x3D;&#x3D;"></a>&#x3D;&#x3D;代码实现&#x3D;&#x3D;</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> S[<span class="number">10</span>] = &#123;<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">que</span>&#123;</span><br><span class="line">	<span class="type">int</span> mx;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="type">int</span> sum_cnt, true_cnt;</span><br><span class="line">	<span class="type">int</span> on[<span class="number">300</span>], wr[<span class="number">300</span>];</span><br><span class="line">&#125;ques[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">wrong_ans</span>&#123;</span><br><span class="line">	<span class="type">int</span> times;</span><br><span class="line">	<span class="type">int</span> question_id;</span><br><span class="line">	<span class="type">int</span> ans_id;</span><br><span class="line">&#125;wras[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(wrong_ans a, wrong_ans b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a.times != b.times) <span class="keyword">return</span> a.times &gt; b.times;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(a.question_id != b.question_id) <span class="keyword">return</span> a.question_id &lt; b.question_id;</span><br><span class="line">		<span class="keyword">else</span>	<span class="keyword">return</span> a.ans_id &lt; b.ans_id;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> is[<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">char</span> s;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="type">int</span> x, y, z;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		ques[i].id = i;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);<span class="comment">//第二个变量后面用不到 </span></span><br><span class="line">		ques[i].mx = x;</span><br><span class="line">		ques[i].sum_cnt = y;</span><br><span class="line">		ques[i].true_cnt = z;</span><br><span class="line">		<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">islower</span>(s))</span><br><span class="line">				ques[i].on[(<span class="type">int</span>)s] = <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> cnt, t;</span><br><span class="line">	<span class="type">double</span> sum;</span><br><span class="line">	<span class="type">bool</span> flag, judge = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cnt = <span class="number">0</span>;</span><br><span class="line">		sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>((s = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">				<span class="built_in">memset</span>(is, <span class="number">0</span>, <span class="built_in">sizeof</span>(is));</span><br><span class="line">				cnt ++;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				t = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">isdigit</span>(s))&#123;</span><br><span class="line">				<span class="keyword">if</span>(s - <span class="string">&#x27;0&#x27;</span> == <span class="number">0</span>)</span><br><span class="line">					flag = <span class="number">0</span>;			</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27; &#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(s))&#123;</span><br><span class="line">				is[(<span class="type">int</span>)s] = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(!ques[cnt].on[(<span class="type">int</span>)s])&#123;</span><br><span class="line">					flag = <span class="number">0</span>;</span><br><span class="line">					ques[cnt].wr[(<span class="type">int</span>)s] ++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>	t ++;	</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">					<span class="keyword">if</span>(t == ques[cnt].true_cnt) sum += ques[cnt].mx;</span><br><span class="line">					<span class="keyword">else</span>	sum += <span class="number">0.5</span> * ques[cnt].mx;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>	judge = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; ++ j)</span><br><span class="line">					<span class="keyword">if</span>(ques[cnt].on[(<span class="type">int</span>)S[j]] &amp;&amp; !is[(<span class="type">int</span>)S[j]])</span><br><span class="line">						ques[cnt].wr[(<span class="type">int</span>)S[j]] ++;	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%.1f\n&quot;</span>, sum);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(judge) <span class="built_in">puts</span>(<span class="string">&quot;Too simple&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		t = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">5</span>; ++ j)</span><br><span class="line">				<span class="keyword">if</span>(ques[i].wr[(<span class="type">int</span>)S[j]])&#123;</span><br><span class="line">					wras[++ t].ans_id = j;</span><br><span class="line">					wras[t].question_id = i;</span><br><span class="line">					wras[t].times = ques[i].wr[(<span class="type">int</span>)S[j]];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">sort</span>(wras + <span class="number">1</span>, wras + t + <span class="number">1</span>, cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(wras[i].times == wras[<span class="number">1</span>].times)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d-%c\n&quot;</span>, wras[i].times, wras[i].question_id, S[wras[i].ans_id]);</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1074%20%E5%AE%87%E5%AE%99%E6%97%A0%E6%95%8C%E5%8A%A0%E6%B3%95%E5%99%A8%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%94%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1074-宇宙无敌加法器-20-分"><a href="#1074-宇宙无敌加法器-20-分" class="headerlink" title="1074 宇宙无敌加法器 (20 分)"></a>1074 宇宙无敌加法器 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805263297527808">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用一个数组存进制，用两个数组存运算的数字，然后从低到高一位一位处理就好。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我卡在了测试点五，我考虑了删除前导0的情况，<del>不过没完全考虑</del> 。<br>&#x3D;&#x3D;因为：至少要保留一位！！！&#x3D;&#x3D;<br><img src="https://img-blog.csdnimg.cn/8f3f8741017b4a7e8e7f5f9d04b94cea.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>修改起来也比较容易</p>
<blockquote>
<p>while(!ans[cnt]) cnt –;<br>改为-&gt;<br>while(!ans[cnt] &amp;&amp; cnt &gt; 1) cnt –;</p>
</blockquote>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 25</span></span><br><span class="line"><span class="type">int</span> chge[N], a[N], b[N], ans[N];</span><br><span class="line"><span class="type">int</span> at, bt;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">init</span><span class="params">(<span class="type">int</span> num[])</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">	string s;</span><br><span class="line">	cin&gt;&gt; s;</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i)</span><br><span class="line">		num[++ t] = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">init</span>(chge);</span><br><span class="line">	at = <span class="built_in">init</span>(a);</span><br><span class="line">	bt = <span class="built_in">init</span>(b);</span><br><span class="line">	<span class="type">int</span> mx = <span class="built_in">max</span>(at, bt);</span><br><span class="line">	<span class="type">int</span> last = <span class="number">0</span>;<span class="comment">//进位</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= mx; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> cal = a[i] + b[i] + last;</span><br><span class="line">		<span class="keyword">if</span>(!chge[i])&#123;</span><br><span class="line">			ans[++ cnt] = cal % <span class="number">10</span>;</span><br><span class="line">			last = cal / <span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			ans[++ cnt] = cal % chge[i];</span><br><span class="line">			last = cal / chge[i];		</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(last) ans[++ cnt] = last;</span><br><span class="line">	<span class="keyword">while</span>(ans[cnt] &gt;= <span class="number">10</span>)&#123;<span class="comment">//考虑最高位进位</span></span><br><span class="line">		<span class="type">int</span> x = ans[cnt] / <span class="number">10</span>;</span><br><span class="line">		ans[cnt] %= <span class="number">10</span>;</span><br><span class="line">		ans[++ cnt] = x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!ans[cnt] &amp;&amp; cnt &gt; <span class="number">1</span>) cnt --；<span class="comment">//删除前导0</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = cnt; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1076%20Wifi%E5%AF%86%E7%A0%81%20(15%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1076-Wifi密码-15-分"><a href="#1076-Wifi密码-15-分" class="headerlink" title="1076 Wifi密码 (15 分)"></a>1076 Wifi密码 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262622244864">题目链接</a></h2><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="type">int</span> ans[N], t;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">char</span> a, b, c;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">4</span>; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot; %c-%c&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">			<span class="keyword">if</span>(b == <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">				<span class="type">int</span> x;</span><br><span class="line">				<span class="keyword">if</span>(a == <span class="string">&#x27;A&#x27;</span>) x = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(a == <span class="string">&#x27;B&#x27;</span>) x = <span class="number">2</span>;</span><br><span class="line">				<span class="keyword">if</span>(a == <span class="string">&#x27;C&#x27;</span>) x = <span class="number">3</span>;</span><br><span class="line">				<span class="keyword">if</span>(a == <span class="string">&#x27;D&#x27;</span>) x = <span class="number">4</span>;</span><br><span class="line">				ans[++ t] = x;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; ++ i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个代码太长了，稍微改一改</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="type">char</span> a, b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">4</span>; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot; %c-%c&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">			<span class="keyword">if</span>(b == <span class="string">&#x27;T&#x27;</span>)	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a - <span class="string">&#x27;A&#x27;</span> + <span class="number">1</span>);		</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1075%20%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E5%88%86%E7%B1%BB%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1075-链表元素分类-25-分"><a href="#1075-链表元素分类-25-分" class="headerlink" title="1075 链表元素分类 (25 分)"></a>1075 链表元素分类 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262953594880">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>读入时，直接把各结点分成三类：</p>
<h2 id="1-value-lt-0"><a href="#1-value-lt-0" class="headerlink" title="1.value &lt; 0"></a>1.value &lt; 0</h2><h2 id="2-value-gt-x3D-0-amp-amp-valude-lt-x3D-k"><a href="#2-value-gt-x3D-0-amp-amp-valude-lt-x3D-k" class="headerlink" title="2.value &gt;&#x3D; 0 &amp;&amp; valude &lt;&#x3D; k"></a>2.value &gt;&#x3D; 0 &amp;&amp; valude &lt;&#x3D; k</h2><h2 id="3-value-gt-k"><a href="#3-value-gt-k" class="headerlink" title="3.value &gt; k"></a>3.value &gt; k</h2><p>分别存到三个结构体数组中，然后再存回来（便于输出）</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span>&#123;</span><br><span class="line">	<span class="type">int</span> addres, next;</span><br><span class="line">	<span class="type">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> node[N], node_neg[N], node_head[N], node_back[N];</span><br><span class="line"><span class="type">int</span> t, t_neg, t_head, t_back;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> f, n, k;</span><br><span class="line">	<span class="type">int</span> add, next, v;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;f, &amp;n, &amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;add, &amp;v, &amp;next);</span><br><span class="line">		node[add].addres = add;</span><br><span class="line">		node[add].next = next;</span><br><span class="line">		node[add].value = v;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(f != <span class="number">-1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(node[f].value &lt; <span class="number">0</span>)&#123;</span><br><span class="line">			++ t_neg;</span><br><span class="line">			node_neg[t_neg] = node[f];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(node[f].value &gt;= <span class="number">0</span> &amp;&amp; node[f].value &lt;= k)&#123;</span><br><span class="line">			++ t_head;</span><br><span class="line">			node_head[t_head] = node[f];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			++ t_back;</span><br><span class="line">			node_back[t_back] = node[f];</span><br><span class="line">		&#125;</span><br><span class="line">		f = node[f].next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t_neg; ++ i)	node[++ t] = node_neg[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t_head; ++ i)	node[++ t] = node_head[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t_back; ++ i)	node[++ t] = node_back[i];</span><br><span class="line">	node[++ t].addres = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; t; ++ i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%05d %d &quot;</span>, node[i].addres, node[i].value);</span><br><span class="line">		<span class="keyword">if</span>(i == t - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, node[i + <span class="number">1</span>].addres);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%05d\n&quot;</span>, node[i + <span class="number">1</span>].addres);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1078%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1078-字符串压缩与解压-20-分"><a href="#1078-字符串压缩与解压-20-分" class="headerlink" title="1078 字符串压缩与解压 (20 分)"></a>1078 字符串压缩与解压 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262018265088">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>分两种情况进行处理就好，也没什么特别的，主要就是在一些代码的处理上存在细节，可以简化代码。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">char</span> is, k;</span><br><span class="line">	string s;</span><br><span class="line">	cin&gt;&gt; is;</span><br><span class="line">	k = <span class="built_in">getchar</span>();<span class="comment">//读入换行符</span></span><br><span class="line">	<span class="built_in">getline</span>(cin, s);</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">if</span>(is == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">			<span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">while</span>(s[i + <span class="number">1</span>] == s[i])&#123;</span><br><span class="line">				i ++;</span><br><span class="line">				cnt ++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(cnt != <span class="number">1</span>)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d%c&quot;</span>, cnt, s[i]);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[i]))&#123;</span><br><span class="line">				<span class="type">int</span> sum = s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">				<span class="keyword">while</span>(<span class="built_in">isdigit</span>(s[i + <span class="number">1</span>]))&#123;<span class="comment">//数字如果是两位数及以上</span></span><br><span class="line">					i ++;</span><br><span class="line">					sum = sum * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= sum; ++ j)</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[i + <span class="number">1</span>]);</span><br><span class="line">				i ++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1077%20%E4%BA%92%E8%AF%84%E6%88%90%E7%BB%A9%E8%AE%A1%E7%AE%97%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1077-互评成绩计算-20-分"><a href="#1077-互评成绩计算-20-分" class="headerlink" title="1077 互评成绩计算 (20 分)"></a>1077 互评成绩计算 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805262303477760">题目链接</a></h2><h2 id="算法分析："><a href="#算法分析：" class="headerlink" title="算法分析："></a>算法分析：</h2><p>唯一的亮点就是去掉最高分和去掉最低分的处理吧，其它的也不难。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="type">int</span> ther, stu;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> Min = <span class="number">1e9</span>, Max = <span class="number">-1</span>;</span><br><span class="line">		<span class="type">int</span> sum = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ther);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n - <span class="number">1</span>; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu);</span><br><span class="line">			<span class="keyword">if</span>(stu &gt;= <span class="number">0</span> &amp;&amp; stu &lt;= m)&#123;</span><br><span class="line">				Min = <span class="built_in">min</span>(stu, Min);</span><br><span class="line">				Max = <span class="built_in">max</span>(stu, Max);</span><br><span class="line">				sum += stu;	</span><br><span class="line">				cnt ++;	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (<span class="type">int</span>)(((sum - Min - Max ) * <span class="number">1.0</span> / (cnt - <span class="number">2</span>) + ther) / <span class="number">2.0</span> + <span class="number">0.5</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1079%20%E5%BB%B6%E8%BF%9F%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0%20(20%20%E5%88%86)(%E6%B5%8B%E8%AF%95%E7%82%B92%E3%80%813%E3%80%814)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1079-延迟的回文数-20-分"><a href="#1079-延迟的回文数-20-分" class="headerlink" title="1079 延迟的回文数 (20 分)"></a>1079 延迟的回文数 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261754023936">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>写两个函数：</p>
<h3 id="1-回文判断函数judge（）"><a href="#1-回文判断函数judge（）" class="headerlink" title="1.回文判断函数judge（）"></a>1.回文判断函数judge（）</h3><h3 id="2-求和函数work（）"><a href="#2-求和函数work（）" class="headerlink" title="2.求和函数work（）"></a>2.求和函数work（）</h3><h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点2，3，4是输入即为回文数，特判一下就过了。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">string <span class="title">work</span><span class="params">(string a, string b)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> ta[<span class="number">1005</span>], tb[<span class="number">1005</span>];</span><br><span class="line">	string ans;</span><br><span class="line">	<span class="type">int</span> l1 = a.<span class="built_in">size</span>(), l2 = b.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l1; ++ i)	ta[l1 - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l2; ++ i)	tb[l2 - i] = b[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> ward = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="built_in">max</span>(l1, l2); ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> x = ward + ta[i] + tb[i];</span><br><span class="line">		<span class="keyword">if</span>(x &gt;= <span class="number">10</span>) ward = x / <span class="number">10</span>, x %= <span class="number">10</span>;</span><br><span class="line">		ans += <span class="built_in">to_string</span>(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(ward) ans += <span class="built_in">to_string</span>(ward);</span><br><span class="line">	<span class="built_in">reverse</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len / <span class="number">2</span>; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(s[i] != s[len - i - <span class="number">1</span>]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s, temp, ans;</span><br><span class="line">	cin&gt;&gt; s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; ++ i)&#123;</span><br><span class="line">		temp = s;</span><br><span class="line">		<span class="built_in">reserse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br><span class="line">		ans = <span class="built_in">work</span>(temp, s);</span><br><span class="line">		cout&lt;&lt; temp&lt;&lt; <span class="string">&quot; + &quot;</span>&lt;&lt; s&lt;&lt; <span class="string">&quot; = &quot;</span>&lt;&lt; ans&lt;&lt; endl;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">judge</span>(ans))&#123;</span><br><span class="line">			cout&lt;&lt; ans&lt;&lt; <span class="string">&quot; is a palindromic number.&quot;</span>&lt;&lt; endl;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		s = ans;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Not found in 10 iterations.&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="x3D-x3D-学到的知识-x3D-x3D"><a href="#x3D-x3D-学到的知识-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;学到的知识&#x3D;&#x3D;"></a>&#x3D;&#x3D;学到的知识&#x3D;&#x3D;</h2><p>&#x3D;&#x3D;1.reverse函数的使用（定义在#include<string>）&#x3D;&#x3D;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string s;</span><br><span class="line"><span class="built_in">reverse</span>(s.<span class="built_in">begin</span>(), s.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;2,to_string函数的使用(定义在#include<string>)&#x3D;&#x3D;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> x = <span class="number">3</span>;</span><br><span class="line">string s;</span><br><span class="line">s += <span class="built_in">to_string</span>(x);</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1080%20MOOC%E6%9C%9F%E7%BB%88%E6%88%90%E7%BB%A9%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1080-MOOC期终成绩-25-分"><a href="#1080-MOOC期终成绩-25-分" class="headerlink" title="1080 MOOC期终成绩 (25 分)"></a>1080 MOOC期终成绩 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261493977088">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><h1 id="x3D-x3D-学会用map和vector-结构体-sort！！！-x3D-x3D"><a href="#x3D-x3D-学会用map和vector-结构体-sort！！！-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;学会用map和vector+结构体+sort！！！&#x3D;&#x3D;"></a>&#x3D;&#x3D;学会用map和vector+结构体+sort！！！&#x3D;&#x3D;</h1><p>map是一个优秀的数据结构，插入查找删除平均复杂度为log级别，对于这个题目的10000范围就十分必要。<br>关于我下面代码的一些解说：<br><strong>1.为什么idx[]存下的元素一定要从1开始呢？这样不是下标还得减去1才能访问到vecotr中的元素吗？</strong><br>答：这是为了方便判断是否该字符串已经被读入过，idx[]非0即为读入过，idx[]为0即为没有读入过。<br><strong>2.+0.5的作用是什么？</strong><br>答：四舍五入小技巧<br><strong>3.string类型也可以printf输出吗？</strong><br>答：可以的，比如声明一个string s 输出s时可以用printf(“%s”, s.c_str())把string转化为char类型字符数组后输出。<br><strong>4.为什么在读入期末成绩时就直接赋值给了最终成绩？期中时为什么不这样做？</strong><br>答：一个人如果不参加期末考试，他的成绩不能达到60分。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">	string id;</span><br><span class="line">	<span class="type">int</span> work, mid, <span class="keyword">final</span>;<span class="comment">//作业、期中、期末成绩</span></span><br><span class="line">	<span class="type">int</span> mark;</span><br><span class="line">&#125;;</span><br><span class="line">map&lt; string, <span class="type">int</span> &gt;idx;</span><br><span class="line">vector&lt; node &gt; v, ans;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.mark == b.mark ? a.id &lt; b.id : a.mark &gt; b.mark;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> p, m, n;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="type">int</span> score;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;p, &amp;m, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= p; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; s&gt;&gt; score;</span><br><span class="line">		<span class="keyword">if</span>(score &gt;= <span class="number">200</span>)&#123;</span><br><span class="line">			v.<span class="built_in">push_back</span>(node&#123;s, score, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;);</span><br><span class="line">			idx[s] = ++ cnt;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; s&gt;&gt; score;</span><br><span class="line">		<span class="keyword">if</span>(idx[s])	v[idx[s] - <span class="number">1</span>].mid = score;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; s&gt;&gt; score;</span><br><span class="line">		<span class="keyword">if</span>(idx[s])&#123;</span><br><span class="line">			<span class="type">int</span> temp = idx[s] - <span class="number">1</span>;</span><br><span class="line">			v[temp].<span class="keyword">final</span> = v[temp].mark = score;</span><br><span class="line">			<span class="keyword">if</span>(v[temp].mid &gt; v[temp].<span class="keyword">final</span>)</span><br><span class="line">				v[temp].mark = (<span class="type">int</span>)(v[temp].mid * <span class="number">0.4</span> + v[temp].<span class="keyword">final</span> * <span class="number">0.6</span> + <span class="number">0.5</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(v[i].mark &gt;= <span class="number">60</span>) ans.<span class="built_in">push_back</span>(v[i]);</span><br><span class="line">	<span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans.<span class="built_in">size</span>(); ++ i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d %d\n&quot;</span>, ans[i].id.<span class="built_in">c_str</span>(), ans[i].work, ans[i].mid, ans[i].<span class="keyword">final</span>, ans[i].mark);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1082%20%E5%B0%84%E5%87%BB%E6%AF%94%E8%B5%9B%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1082-射击比赛-20-分"><a href="#1082-射击比赛-20-分" class="headerlink" title="1082 射击比赛 (20 分)"></a>1082 射击比赛 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260990660608">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>读入时计算并存储，然后结构体排序</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">player</span>&#123;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="type">int</span> dis;</span><br><span class="line">&#125;pler[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(player a, player b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.dis &lt; b.dis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, id, x, y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;id, &amp;x, &amp;y);</span><br><span class="line">		pler[i].id = id;</span><br><span class="line">		pler[i].dis = x * x + y * y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(pler + <span class="number">1</span>, pler + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%04d %04d&quot;</span>, pler[<span class="number">1</span>].id, pler[n].id);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1083%20%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E7%9B%B8%E7%AD%89%E7%9A%84%E5%B7%AE%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1083-是否存在相等的差-20-分"><a href="#1083-是否存在相等的差-20-分" class="headerlink" title="1083 是否存在相等的差 (20 分)"></a>1083 是否存在相等的差 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260780945408">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>一个on数组来存结构体数组的下标，顺便用来判断是否已经读入过，然后结构体排序。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10005</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mis</span>&#123;</span><br><span class="line">	<span class="type">int</span> cnt;</span><br><span class="line">	<span class="type">int</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mis</span> ans[N];</span><br><span class="line"><span class="type">int</span> cnt, on[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(mis a, mis b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.value &gt; b.value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">		<span class="type">int</span> cal = <span class="built_in">abs</span>(x - i);</span><br><span class="line">		<span class="keyword">if</span>(on[cal])	ans[on[cal]].cnt ++;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			on[cal] = ++ cnt;</span><br><span class="line">			ans[cnt].cnt ++;</span><br><span class="line">			ans[cnt].value = cal;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(ans + <span class="number">1</span>, ans + cnt + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= cnt; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(ans[i].cnt &gt;= <span class="number">2</span>) </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, ans[i].value, ans[i].cnt);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1081%20%E6%A3%80%E6%9F%A5%E5%AF%86%E7%A0%81%20(15%20%E5%88%86)(%E6%B5%8B%E8%AF%95%E7%82%B92)(%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1081-检查密码-15-分"><a href="#1081-检查密码-15-分" class="headerlink" title="1081 检查密码 (15 分)"></a>1081 检查密码 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805261217153024">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用两个变量ap_digit和ap_zm来记录是否有数字和字母出现,然后进行特判并输出就好了.</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点2是在考察是否有考虑&#x3D;&#x3D;字符串中含有空格&#x3D;&#x3D;</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">getline</span>(cin, s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">getline</span>(cin, s);</span><br><span class="line">		<span class="type">int</span> len = s.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">if</span>(len &lt; <span class="number">6</span>)&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;Your password is tai duan le.&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> ap_digit = <span class="number">0</span>, ap_zm = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; len; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">isdigit</span>(s[j])) ap_digit = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">islower</span>(s[j]) || <span class="built_in">isupper</span>(s[j])) ap_zm = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s[j] == <span class="string">&#x27;.&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				ap_digit = ap_zm = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(ap_digit &amp;&amp; ap_zm) <span class="built_in">puts</span>(<span class="string">&quot;Your password is wan mei.&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ap_digit &amp;&amp; !ap_zm) <span class="built_in">puts</span>(<span class="string">&quot;Your password needs zi mu.&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(!ap_digit &amp;&amp; ap_zm) <span class="built_in">puts</span>(<span class="string">&quot;Your password needs shu zi.&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;Your password is tai luan le.&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1084%20%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97%20(20%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E5%9B%9B%E6%AE%B5%E9%94%99%E8%AF%AF%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1084-外观数列-20-分"><a href="#1084-外观数列-20-分" class="headerlink" title="1084 外观数列 (20 分)"></a>1084 外观数列 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260583813120">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>循环处理字符串，每读到一个字符，就向后拓展是否重复，然后存入temp临时字符串，最后再赋值回来。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点四是一个大数据点，长度高达100000，修改一下就过了。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100000</span></span><br><span class="line"><span class="type">char</span> s[N], temp[N], d;</span><br><span class="line"><span class="type">int</span> cnt_s, cnt_temp, t;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%c %d&quot;</span>, &amp;d, &amp;x);</span><br><span class="line">	s[++ cnt_s] = d;<span class="comment">//最开始的字符串</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;=  x - <span class="number">1</span>; ++ i)&#123;<span class="comment">//处理x-1次</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= cnt_s; ++ j)&#123;</span><br><span class="line">			++ t;</span><br><span class="line">			temp[++ cnt_temp] = s[j];</span><br><span class="line">			<span class="keyword">while</span>(s[j] == s[j + <span class="number">1</span>])&#123;<span class="comment">//统计是否有重复字符的出现</span></span><br><span class="line">				++ j;</span><br><span class="line">				++ t;</span><br><span class="line">			&#125;</span><br><span class="line">			temp[++ cnt_temp] = (<span class="type">char</span>)(t + <span class="number">48</span>);<span class="comment">//数字转字符必备</span></span><br><span class="line">			t = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= cnt_temp; ++ j)</span><br><span class="line">			s[j] = temp[j];</span><br><span class="line">		cnt_s = cnt_temp;</span><br><span class="line">		cnt_temp = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= cnt_s; ++ i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1085%20PAT%E5%8D%95%E4%BD%8D%E6%8E%92%E8%A1%8C%20(25%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1085-PAT单位排行-25-分"><a href="#1085-PAT单位排行-25-分" class="headerlink" title="1085 PAT单位排行 (25 分)"></a>1085 PAT单位排行 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805260353126400">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>1.读入考生信息，把学校字符串小写化，分析其学校是否第一次出现，若未出现，则增加新的学校，并更新该学校的考生数和考生总成绩。<br>2.计算每个学校的总成绩，并排序。<br>3.输出。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>&#x3D;&#x3D;两个亮点：1.如何分析学校第一次出现。2.如何输出题目要求的排名。&#x3D;&#x3D;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">school</span>&#123;</span><br><span class="line">	string id;</span><br><span class="line">	<span class="type">int</span> cnt;</span><br><span class="line">	<span class="type">int</span> mka, mkb, mkc, mk;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line">map&lt; string, <span class="type">int</span> &gt;idx;</span><br><span class="line">vector&lt; school &gt;sch;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(school a, school b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.mk == b.mk ? (a.cnt == b.cnt ? a.id &lt; b.id : a.cnt &lt; b.cnt) : a.mk &gt; b.mk;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">strtolower</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); ++ i)</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">isupper</span>(s[i])) s[i] = s[i] - <span class="string">&#x27;A&#x27;</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, score;</span><br><span class="line">	string a, b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; a&gt;&gt; score&gt;&gt; b;</span><br><span class="line">		b = <span class="built_in">strtolower</span>(b);</span><br><span class="line">		<span class="keyword">if</span>(!idx[b])&#123;</span><br><span class="line">			idx[b] = ++ cnt;</span><br><span class="line">			sch.<span class="built_in">push_back</span>(school&#123;b, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">		sch[idx[b] - <span class="number">1</span>].cnt ++;</span><br><span class="line">		<span class="keyword">if</span>(a[<span class="number">0</span>] == <span class="string">&#x27;B&#x27;</span>)	sch[idx[b] - <span class="number">1</span>].mka += score;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">0</span>] == <span class="string">&#x27;A&#x27;</span>) sch[idx[b] - <span class="number">1</span>].mkb += score;</span><br><span class="line">		<span class="keyword">else</span>	sch[idx[b] - <span class="number">1</span>].mkc += score;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; sch.<span class="built_in">size</span>(); ++ i)</span><br><span class="line">		sch[i].mk = (<span class="type">int</span>)(sch[i].mka / <span class="number">1.5</span> + sch[i].mkb + sch[i].mkc * <span class="number">1.5</span>);</span><br><span class="line">	<span class="built_in">sort</span>(sch.<span class="built_in">begin</span>(), sch.<span class="built_in">end</span>(), cmp);</span><br><span class="line">	<span class="type">int</span> rank = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sch.<span class="built_in">size</span>());</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; sch.<span class="built_in">size</span>(); ++ i)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d %s %d %d\n&quot;</span>, rank, sch[i].id.<span class="built_in">c_str</span>(), sch[i].mk, sch[i].cnt);</span><br><span class="line">		<span class="keyword">if</span>(sch[i].mk != sch[i + <span class="number">1</span>].mk) rank = i + <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1086%20%E5%B0%B1%E4%B8%8D%E5%91%8A%E8%AF%89%E4%BD%A0%20(15%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%80%E5%92%8C%E6%B5%8B%E8%AF%95%E7%82%B9%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1086-就不告诉你-15-分"><a href="#1086-就不告诉你-15-分" class="headerlink" title="1086 就不告诉你 (15 分)"></a>1086 就不告诉你 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429065476579328">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>计算结果一位一位模出来输出就好</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点一二是因为没有考虑0在首位的情况，比如输入4 5应该输出2，而不是02.</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> a, b;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">	<span class="type">int</span> c = a * b， flag = <span class="number">0</span>；</span><br><span class="line">	<span class="keyword">while</span>(c)&#123;</span><br><span class="line">		<span class="type">int</span> x = c % <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">if</span>(x || flag)&#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, x);</span><br><span class="line">		&#125;</span><br><span class="line">		c /= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1087%20%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%8D%E5%90%8C%E7%9A%84%E5%80%BC%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%E6%AE%B5%E9%94%99%E8%AF%AF%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1087-有多少不同的值-20-分"><a href="#1087-有多少不同的值-20-分" class="headerlink" title="1087 有多少不同的值 (20 分)"></a>1087 有多少不同的值 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429191091781632">题目链接</a></h2><h2 id="算法分析：一遍for循环就好"><a href="#算法分析：一遍for循环就好" class="headerlink" title="算法分析：一遍for循环就好"></a>算法分析：一遍for循环就好</h2><h2 id="测试点："><a href="#测试点：" class="headerlink" title="测试点："></a>测试点：</h2><p>如果测试点三段错误，那你就是数组越界了。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 20005</span></span><br><span class="line"><span class="type">int</span> on[N], cnt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> x = i / <span class="number">2</span> + i / <span class="number">3</span> + i / <span class="number">5</span>;</span><br><span class="line">		<span class="keyword">if</span>(!on[x])&#123;</span><br><span class="line">			on[x] = <span class="number">1</span>;</span><br><span class="line">			cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, cnt);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1088%20%E4%B8%89%E4%BA%BA%E8%A1%8C%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1088-三人行-20-分"><a href="#1088-三人行-20-分" class="headerlink" title="1088 三人行 (20 分)"></a>1088 三人行 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429286185074688">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>遍历所有的两位数（从大到小），判断是否为解。若是，则输出结果，若遍历结束后还没输出，那就输出无解。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点三，卡你知不知道丙的能力值可以非整数。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m, x, y;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">work</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (x % <span class="number">10</span>) * <span class="number">10</span> + x / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x &gt; m) <span class="built_in">printf</span>(<span class="string">&quot; Cong&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x == m) <span class="built_in">printf</span>(<span class="string">&quot; Ping&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot; Gai&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;m, &amp;x, &amp;y);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">99</span>; i &gt;= <span class="number">10</span>; -- i)</span><br><span class="line">		<span class="keyword">if</span>(x * <span class="built_in">work</span>(i) == y * <span class="built_in">abs</span>(i - <span class="built_in">work</span>(i)))&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">			<span class="built_in">print</span>(i);</span><br><span class="line">			<span class="built_in">print</span>(<span class="built_in">work</span>(i));</span><br><span class="line">			<span class="built_in">print</span>(<span class="built_in">abs</span>(i - <span class="built_in">work</span>(i)) * <span class="number">1.0</span> / x);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1089%20%E7%8B%BC%E4%BA%BA%E6%9D%80-%E7%AE%80%E5%8D%95%E7%89%88%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B93%EF%BC%89%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1089-狼人杀-简单版-20-分"><a href="#1089-狼人杀-简单版-20-分" class="headerlink" title="1089 狼人杀-简单版 (20 分)"></a>1089 狼人杀-简单版 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429385296453632">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><h1 id="x3D-x3D-如果你想到的方向和网络上的代码不太一样，请看下面-x3D-x3D"><a href="#x3D-x3D-如果你想到的方向和网络上的代码不太一样，请看下面-x3D-x3D" class="headerlink" title="&#x3D;&#x3D;如果你想到的方向和网络上的代码不太一样，请看下面&#x3D;&#x3D;"></a>&#x3D;&#x3D;如果你想到的方向和网络上的代码不太一样，请看下面&#x3D;&#x3D;</h1><p>&#x3D;&#x3D;我也不知道为什么&#x3D;&#x3D;<br>&#x3D;&#x3D;我这想法还挺简单，实现起来这么难&#x3D;&#x3D;<br>具体来说：就是假设两个人在说谎，一个是狼人，一个是好人。然后再依次分析每个人说的话，首先把说谎的人说的话取反，然后判断是否有矛盾。如果合理，那么把结果都存到一个vector中，排序后输出第一个元素。</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>测试点三：我想了半天才想到的问题<br>如果你是按照我的想法来实现的（<del>真是太不幸了</del> ）<br>那有一种情况你必须考虑：如果把所有人说的都分析完了，还有一些人没有身份，而第二个狼人还没有确定下来，那么你就有必要把最小解加入到答案数组中（不能忽略）。<br>改过了就没问题了。<br><img src="https://img-blog.csdnimg.cn/ce8e924e2c8d46e888334ff91570177c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 105</span></span><br><span class="line"><span class="type">int</span> sy[N], n;</span><br><span class="line">vector&lt; pair&lt;<span class="type">int</span> , <span class="type">int</span>&gt; &gt;ans;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; a, <span class="type">const</span> pair&lt; <span class="type">int</span>, <span class="type">int</span>&gt; b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.first == b.first ? a.second &lt; b.second : a.first &lt; b.first;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> status[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">	sy[a] *= <span class="number">-1</span>;</span><br><span class="line">	sy[b] *= <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> lr1, <span class="type">int</span> lie)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(status, <span class="number">0</span>, <span class="built_in">sizeof</span>(status));</span><br><span class="line">	<span class="built_in">work</span>(lr1, lie);</span><br><span class="line">	status[lr1] = <span class="number">-1</span>;</span><br><span class="line">	status[lie] = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> lr2 = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="type">int</span> id = <span class="built_in">abs</span>(sy[i]);</span><br><span class="line">		<span class="keyword">if</span>(sy[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(status[id] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">work</span>(lr1, lie);	</span><br><span class="line">				<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>	status[id] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(sy[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(status[id] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">				<span class="built_in">work</span>(lr1, lie);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(id == lr1 || id == lr2) <span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">if</span>(!lr2)&#123;</span><br><span class="line">					lr2 = id;</span><br><span class="line">					status[lr2] = <span class="number">-1</span>;	</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="built_in">work</span>(lr1, lie);</span><br><span class="line">					<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">work</span>(lr1, lie);</span><br><span class="line">	<span class="keyword">if</span>(!lr2)&#123;</span><br><span class="line">		<span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">			<span class="keyword">if</span>(status[i] == <span class="number">0</span>)&#123;</span><br><span class="line">				flag = i;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125; </span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="keyword">return</span> flag;</span><br><span class="line">		<span class="keyword">else</span>	<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>	<span class="keyword">return</span> lr2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sy[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="type">int</span> ano = <span class="built_in">calc</span>(i, j);</span><br><span class="line">			<span class="keyword">if</span>(ano != <span class="number">-1</span>)	ans.<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(<span class="built_in">min</span>(ano, i), <span class="built_in">max</span>(ano, i)));</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans.<span class="built_in">size</span>() == <span class="number">0</span>)	<span class="built_in">puts</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>(), cmp);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, ans[<span class="number">0</span>].first, ans[<span class="number">0</span>].second);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1090%20%E5%8D%B1%E9%99%A9%E5%93%81%E8%A3%85%E7%AE%B1%20(25%20%E5%88%86)%EF%BC%88%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<h1 id="1090-危险品装箱-25-分"><a href="#1090-危险品装箱-25-分" class="headerlink" title="1090 危险品装箱 (25 分)"></a>1090 危险品装箱 (25 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429484026175488">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用vector存下读入的不相容数据，判断时用一个on数组标记是否能够相容在这个组内，然后再遍历一次就可以得到结果。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100005</span></span><br><span class="line">vector&lt; <span class="type">int</span> &gt;vec[N];</span><br><span class="line"><span class="type">int</span> x, y, k, on[N], temp[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		vec[x].<span class="built_in">push_back</span>(y);</span><br><span class="line">		vec[y].<span class="built_in">push_back</span>(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">memset</span>(on, <span class="number">0</span>, <span class="built_in">sizeof</span>(on));</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, temp + j);</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> p = <span class="number">0</span>; p &lt; vec[temp[j]].<span class="built_in">size</span>(); ++ p)</span><br><span class="line">				on[vec[temp[j]][p]] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= k; ++ j)</span><br><span class="line">			<span class="keyword">if</span>(on[temp[j]])&#123;</span><br><span class="line">				flag = <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">		<span class="keyword">else</span>	<span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1091%20N-%E8%87%AA%E5%AE%88%E6%95%B0%20(15%20%E5%88%86)(%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1091-N-自守数-15-分"><a href="#1091-N-自守数-15-分" class="headerlink" title="1091 N-自守数 (15 分)"></a>1091 N-自守数 (15 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785664454127616">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>题目也不难，对于每一个数，计算比它大的最小的10的x次方（代码中的函数cal（））<br>然后让Ｎ从１到９跑一下，如果满足条件就输出并跳出循环，如果没有满足条件的数，就用做好标记，然后输出Ｎｏ即可。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x)&#123;</span><br><span class="line">		x /= <span class="number">10</span>;</span><br><span class="line">		ans *= <span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, k;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">		<span class="type">int</span> devider = <span class="built_in">cal</span>(k);</span><br><span class="line">		<span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> N = <span class="number">1</span>; N &lt;= <span class="number">9</span>; ++ N)</span><br><span class="line">			<span class="keyword">if</span>(N * k * k % devider == k)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, N, N * k * k);</span><br><span class="line">				flag = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1092%20%E6%9C%80%E5%A5%BD%E5%90%83%E7%9A%84%E6%9C%88%E9%A5%BC%20(20%20%E5%88%86)(%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1092-最好吃的月饼-20-分"><a href="#1092-最好吃的月饼-20-分" class="headerlink" title="1092 最好吃的月饼 (20 分)"></a>1092 最好吃的月饼 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785779399028736">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>开一个月饼结构体,然后结构体排序就好.</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1005</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mooncake</span>&#123;</span><br><span class="line">	<span class="type">int</span> id, sales;</span><br><span class="line">&#125;mk[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> mooncake a, <span class="type">const</span> mooncake b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.sales == b.sales ? a.id &lt; b.id : a.sales &gt; b.sales;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, single_sale;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;single_sale);</span><br><span class="line">			mk[j].id = j;</span><br><span class="line">			mk[j].sales += single_sale;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">sort</span>(mk + <span class="number">1</span>, mk + n + <span class="number">1</span>, cmp);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mk[<span class="number">1</span>].sales);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(mk[i].sales == mk[<span class="number">1</span>].sales)&#123;</span><br><span class="line">			<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, mk[i].id);</span><br><span class="line">				flag = <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, mk[i].id);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1093%20%E5%AD%97%E7%AC%A6%E4%B8%B2A+B%20(20%20%E5%88%86)/</url>
    <content><![CDATA[<h1 id="1093-字符串A-B-20-分"><a href="#1093-字符串A-B-20-分" class="headerlink" title="1093 字符串A+B (20 分)"></a>1093 字符串A+B (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785884776722432">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>依次遍历两个字符串,用on数组标记是否输出过<br>值为1表示输出过,值为0表示没有输出过.</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 150</span></span><br><span class="line"><span class="type">int</span> on[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string a, b;</span><br><span class="line">	<span class="built_in">getline</span>(cin, a);</span><br><span class="line">	<span class="built_in">getline</span>(cin, b);</span><br><span class="line">	<span class="type">int</span> l1 = a.<span class="built_in">size</span>();</span><br><span class="line">	<span class="type">int</span> l2 = b.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l1; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(!on[a[i]])&#123;</span><br><span class="line">			on[a[i]] = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; l2; ++ i)</span><br><span class="line">		<span class="keyword">if</span>(!on[b[i]])&#123;</span><br><span class="line">			on[b[i]] = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, b[i]);</span><br><span class="line">		&#125;	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1094%20%E8%B0%B7%E6%AD%8C%E7%9A%84%E6%8B%9B%E8%81%98%20(20%20%E5%88%86)(%E6%B5%8B%E8%AF%95%E7%82%B92,5)(%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90+%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0)/</url>
    <content><![CDATA[<h1 id="1094-谷歌的招聘-20-分"><a href="#1094-谷歌的招聘-20-分" class="headerlink" title="1094 谷歌的招聘 (20 分)"></a>1094 谷歌的招聘 (20 分)</h1><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071785997033074688">题目链接</a></h2><h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>用一个动态移位的方法,比如现在有一个五位数$x$,那么$devider &#x3D; 10000$,读入下一位$y$之后呢,我们就进行这样的操作:$x&#x3D;x$%$devider+y$,就实现了动态移位.</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我错在测试点2和测试点5,后来发现源于我的一步优化,我是这么想的,如果这个数字末尾是2,那它一定不是素数(&#x3D;&#x3D;我大意了&#x3D;&#x3D;)比如说000002,它就是一个素数,删掉之后就对了.</p>
<h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><p><a href="https://blog.csdn.net/qq_34771124/article/details/121685095">printf输出如何用变量控制位宽?</a></p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">judge</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(x); ++ i)</span><br><span class="line">		<span class="keyword">if</span>(x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, k, cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> s;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> devider = <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%c&quot;</span>, &amp;n, &amp;k, &amp;s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; k; ++ i)	devider *= <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;s);</span><br><span class="line">		++ cnt;</span><br><span class="line">		sum = sum * <span class="number">10</span> + s - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(cnt == k)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">judge</span>(sum))&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%0*lld&quot;</span>, k, sum);</span><br><span class="line">				<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			sum = sum % devider;</span><br><span class="line">			-- cnt;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;404&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/09/05/1095%20%E8%A7%A3%E7%A0%81PAT%E5%87%86%E8%80%83%E8%AF%81%20(25%20%E5%88%86)(%E6%B5%8B%E8%AF%95%E7%82%B9%E4%B8%89%E5%92%8C%E6%B5%8B%E8%AF%95%E7%82%B9%E5%9B%9B)/</url>
    <content><![CDATA[<h1 id="1095-解码PAT准考证-25-分"><a href="#1095-解码PAT准考证-25-分" class="headerlink" title="1095 解码PAT准考证 (25 分)"></a>1095 解码PAT准考证 (25 分)</h1><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1071786104348536832">题目链接</a></h3><h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><p>这个题目算法的关键就是要针对于某一种指令进行对应的处理<br><strong>指令一</strong>：要求按分数非升序输出某个指定级别的考生的成绩，对应的 指令 则给出代表指定级别的字母；<br><strong>解决</strong>：我们就开三个结构体数组，分别存下三种级别考生的信息，然后写一个排序函数cmp1，用sort即可解决。<br><strong>指令二</strong>：要求将某指定考场的考生人数和总分统计输出，对应的 指令 则给出指定考场的编号；<br><strong>解决</strong>：我们开两个正常的数组（要注意下标的范围），然后分别存下某一考场的考生总人数和总成绩。<br><strong>指令三</strong>：要求将某指定日期的考生人数分考场统计输出，对应的指令则给出指定日期，格式与准考证上日期相同。输出按人数非递增顺序，格式为 （考场编号 总人数）。若人数并列则按考场编号递增顺序输出。<br><strong>解决</strong>：这个是最麻烦的，我们还是从正面来分析。<br>读入日期-&gt;那我们就针对日期，首先开一个结构体数组，但是在这里我们就不能直接开到1000000，这样空间会爆的，我们可以开一个类似于手动栈的结构体数组，那我们就能省下不少空间，为了实现，我们开标志数组on1，作用有两个，一是记录某一天考试的学生信息收录在下标为几的结构体数组中，二是如果之前已经读入过这一天考试的学生了，那么我们就用它的非0性来判断，并且直接在O（1）的效率下实现增加新的元素。<br>（有点难懂，希望能耐心对照代码理解一下）<br>而开的on2数组，作用就是标记当前这个日期是否排过序，保证只排一次，防止超时。</p>
<h3 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h3><h4 id="测试点三：我当时错误的原因主要是因为sort使用出了问题。"><a href="#测试点三：我当时错误的原因主要是因为sort使用出了问题。" class="headerlink" title="测试点三：我当时错误的原因主要是因为sort使用出了问题。"></a>测试点三：我当时错误的原因主要是因为sort使用出了问题。</h4><p><strong>sort（起始位置，终止位置的下一个，排序函数（有时可以省略））</strong></p>
<h4 id="测试点四：我的问题主要是超时，我把cin和cout改成scanf和printf，瞬间快了好多好多。"><a href="#测试点四：我的问题主要是超时，我把cin和cout改成scanf和printf，瞬间快了好多好多。" class="headerlink" title="测试点四：我的问题主要是超时，我把cin和cout改成scanf和printf，瞬间快了好多好多。"></a>测试点四：我的问题主要是超时，我把cin和cout改成scanf和printf，瞬间快了好多好多。</h4><p><img src="https://img-blog.csdnimg.cn/13e7b2847ed34631b807a40d8069c538.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="从耗时来看，我的算法还是比较优秀的（手动狗头）"><a href="#从耗时来看，我的算法还是比较优秀的（手动狗头）" class="headerlink" title="从耗时来看，我的算法还是比较优秀的（手动狗头）"></a>从耗时来看，我的算法还是比较优秀的（手动狗头）</h2><h2 id="但是可能看起来会比较繁琐，这是因为题目要求太多了"><a href="#但是可能看起来会比较繁琐，这是因为题目要求太多了" class="headerlink" title="但是可能看起来会比较繁琐，这是因为题目要求太多了"></a>但是可能看起来会比较繁琐，这是因为题目要求太多了</h2><h2 id="希望能对大家有所帮助！！！"><a href="#希望能对大家有所帮助！！！" class="headerlink" title="希望能对大家有所帮助！！！"></a>希望能对大家有所帮助！！！</h2><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 1010</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu_level</span>&#123;</span><br><span class="line">	string ID;</span><br><span class="line">	<span class="type">int</span>  mark;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//参加某一级别考试的学生结构 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mm</span>&#123;</span><br><span class="line">	<span class="type">int</span> roomid;</span><br><span class="line">	<span class="type">int</span> cnt;</span><br><span class="line">&#125;;<span class="comment">//用于配合下一个结构体使用 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">day</span>&#123;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="keyword">struct</span> <span class="title class_">mm</span> cnt[M];</span><br><span class="line">&#125;;<span class="comment">//考试日期结构体</span></span><br><span class="line"><span class="type">int</span> on1[<span class="number">1000000</span>], on2[<span class="number">1000000</span>];<span class="comment">//考试日期数组 </span></span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">day</span> Day[<span class="number">100000</span>];</span><br><span class="line"><span class="type">int</span> exam_cnt[M], exam_sum[M]; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">stu_level</span> lt[N], la[N], lb[N];</span><br><span class="line"><span class="type">int</span> lt_cnt, la_cnt, lb_cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">work</span><span class="params">(<span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c)</span></span>&#123;<span class="comment">//考场号计算函数 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">100</span> * (a - <span class="string">&#x27;0&#x27;</span>) + <span class="number">10</span> * (b - <span class="string">&#x27;0&#x27;</span>) + (c - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">work_l</span><span class="params">(<span class="type">char</span> a, <span class="type">char</span> b, <span class="type">char</span> c, <span class="type">char</span> d, <span class="type">char</span> e, <span class="type">char</span> f)</span></span>&#123;<span class="comment">//考试日期计算函数 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">1e5</span> * (a - <span class="string">&#x27;0&#x27;</span>) + <span class="number">1e4</span> * (b - <span class="string">&#x27;0&#x27;</span>) + <span class="number">1e3</span> * (c - <span class="string">&#x27;0&#x27;</span>) + <span class="number">1e2</span> * (d - <span class="string">&#x27;0&#x27;</span>) + <span class="number">10</span> * (e - <span class="string">&#x27;0&#x27;</span>) + (f - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(stu_level a, stu_level b)</span></span>&#123;<span class="comment">//第一种指令的结构体排序函数 </span></span><br><span class="line">	<span class="keyword">return</span> a.mark == b.mark ? a.ID &lt; b.ID : a.mark &gt; b.mark;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(mm a, mm b)</span></span>&#123;<span class="comment">//第三种指令的结构体排序函数 </span></span><br><span class="line">	<span class="keyword">return</span> a.cnt == b.cnt ? a.roomid &lt; b.roomid : a.cnt &gt; b.cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string id;</span><br><span class="line">	<span class="type">int</span> mk;</span><br><span class="line">	<span class="type">int</span> dy;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="type">int</span> examroom;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		cin&gt;&gt; id&gt;&gt; mk;</span><br><span class="line">		<span class="comment">//分三种情况存下学生信息 </span></span><br><span class="line">		<span class="keyword">if</span>(id[<span class="number">0</span>] == <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">			++lt_cnt;</span><br><span class="line">			lt[lt_cnt].ID = id;</span><br><span class="line">			lt[lt_cnt].mark = mk;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(id[<span class="number">0</span>] == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">			++la_cnt;</span><br><span class="line">			la[la_cnt].ID = id;</span><br><span class="line">			la[la_cnt].mark = mk;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			++lb_cnt;</span><br><span class="line">			lb[lb_cnt].ID = id;</span><br><span class="line">			lb[lb_cnt].mark = mk;</span><br><span class="line">		&#125;</span><br><span class="line">		examroom = <span class="built_in">work</span>(id[<span class="number">1</span>], id[<span class="number">2</span>], id[<span class="number">3</span>]);<span class="comment">//考场信息 </span></span><br><span class="line">		exam_cnt[examroom] ++;</span><br><span class="line">		exam_sum[examroom] += mk;</span><br><span class="line">		dy = <span class="built_in">work_l</span>(id[<span class="number">4</span>], id[<span class="number">5</span>], id[<span class="number">6</span>], id[<span class="number">7</span>], id[<span class="number">8</span>], id[<span class="number">9</span>]);<span class="comment">//考试日期 </span></span><br><span class="line">		<span class="keyword">if</span>(!on1[dy])&#123;<span class="comment">//第一次读入这一天考试的学生 </span></span><br><span class="line">			Day[++ t].id = dy;</span><br><span class="line">			Day[t].cnt[examroom].roomid = examroom;</span><br><span class="line">			Day[t].cnt[examroom].cnt ++;</span><br><span class="line">			on1[dy] = t;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;<span class="comment">//之前已经读入过这一天考试的学生 </span></span><br><span class="line">			Day[on1[dy]].cnt[examroom].roomid = examroom;</span><br><span class="line">			Day[on1[dy]].cnt[examroom].cnt ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(lt + <span class="number">1</span>, lt + lt_cnt + <span class="number">1</span>, cmp1);</span><br><span class="line">	<span class="built_in">sort</span>(la + <span class="number">1</span>, la + la_cnt + <span class="number">1</span>, cmp1);</span><br><span class="line">	<span class="built_in">sort</span>(lb + <span class="number">1</span>, lb + lb_cnt + <span class="number">1</span>, cmp1);</span><br><span class="line">	<span class="comment">//解决第一种指令</span></span><br><span class="line">	<span class="type">int</span> cs, x;</span><br><span class="line">	<span class="type">char</span> s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cs);</span><br><span class="line">		<span class="keyword">if</span>(cs == <span class="number">1</span>)&#123; </span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>, &amp;s);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d %c\n&quot;</span>, i, cs, s);</span><br><span class="line">			<span class="comment">//分三种情况判断 </span></span><br><span class="line">			<span class="keyword">if</span>(s == <span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(lt_cnt)</span><br><span class="line">					<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= lt_cnt; ++ j)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,lt[j].ID.<span class="built_in">c_str</span>(), lt[j].mark);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;NA&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">				<span class="keyword">if</span>(la_cnt)</span><br><span class="line">					<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= la_cnt; ++ j)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,la[j].ID.<span class="built_in">c_str</span>(), la[j].mark);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;NA&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(lb_cnt)</span><br><span class="line">					<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= lb_cnt; ++ j)</span><br><span class="line">						<span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,lb[j].ID.<span class="built_in">c_str</span>(), lb[j].mark);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="built_in">puts</span>(<span class="string">&quot;NA&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(cs == <span class="number">2</span>)&#123;<span class="comment">//第二种指令 </span></span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d %03d\n&quot;</span>, i, cs, x);</span><br><span class="line">			<span class="keyword">if</span>(exam_cnt[x])</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, exam_cnt[x], exam_sum[x]);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;NA&quot;</span>);	</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;<span class="comment">//第三种指令（最难解决的部分） </span></span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Case %d: %d %06d\n&quot;</span>, i, cs, x);</span><br><span class="line">			<span class="keyword">if</span>(!on1[x])&#123;<span class="comment">//如果这一天没有人考试 </span></span><br><span class="line">				<span class="built_in">puts</span>(<span class="string">&quot;NA&quot;</span>);</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(!on2[x])<span class="comment">//如果这一天还没有排过序（针对于一天只排序一次，防超时） </span></span><br><span class="line">				<span class="built_in">sort</span>(Day[on1[x]].cnt + <span class="number">100</span>, Day[on1[x]].cnt + <span class="number">1000</span>, cmp2);</span><br><span class="line">			on2[x] = <span class="number">1</span>;<span class="comment">//标记为已经排过序了 </span></span><br><span class="line">			<span class="type">int</span> k = <span class="number">100</span>;<span class="comment">//考场编号从100开始999结束 </span></span><br><span class="line">			<span class="keyword">while</span>(Day[on1[x]].cnt[k].cnt)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%03d %d\n&quot;</span>, Day[on1[x]].cnt[k].roomid, Day[on1[x]].cnt[k].cnt);</span><br><span class="line">				k ++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
  </entry>
  <entry>
    <title>ASCII的最大值</title>
    <url>/2022/08/31/ASCII%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E5%88%B0%E5%BA%95%E6%98%AF127%E8%BF%98%E6%98%AF255/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# ASCII
## 问题引入
我们知道，字符类型占一个字节，也就是八位，那平时我们所讲的ASCII范围只是0-127啊，那也就才7位，剩下的那一位呢？

<h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>我们所讲的是<strong>标准ASCII</strong>，范围是0-127，剩下的那一位是奇偶校验位（有点类似于汉明码），不过后来我们发现，这些字符不太能满足我们的需要，所以就有了<strong>扩展ASCII</strong>，范围是0-255，正好占八位（一个字节），下面摘录一段百度百科的内容。</p>
<h2 id="摘录"><a href="#摘录" class="headerlink" title="摘录"></a>摘录</h2><p>ASCII 码使用指定的7 位或8 位二进制数组合来表示128 或256 种可能的字符。<br><font color=green><br>前128个叫标准ASCII 码，也叫基础ASCII码，使用7 位二进制数（剩下的1位二进制为0）来表示有的大写和小写字母，数字0 到9、标点符号，以及在美式英语中使用的特殊控制字符。</p>
<font color=red>
同时还要注意，在标准ASCII中，其最高位用作奇偶校验位。所谓奇偶校验，是指在代码传送过程中用来检验是否出现错误的一种方法，一般分奇校验和偶校验两种。奇校验规定：正确的代码一个字节中1的个数必须是奇数，若非奇数，则在最高位添1；偶校验规定：正确的代码一个字节中1的个数必须是偶数，若非偶数，则在最高位添1  。

<p><font color=green>后128个称为扩展ASCII码。许多基于x86的系统都支持使用扩展（或“高”）ASCII。扩展ASCII 码允许将每个字符的第8 位用于确定附加的128 个特殊符号字符、外来语字母和图形符号 [1]  。</p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ sort自定义cmp的细节</title>
    <url>/2022/08/31/C++%20sort%E8%87%AA%E5%AE%9A%E4%B9%89cmp%E7%9A%84%E7%BB%86%E8%8A%82/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<font color=red>cmp函数在书写时，一定不要写出“return a <= b”的语句，否则程序就有崩溃的风险，这种错误极难观察出来，所以一定要注意。

<p>关于原因，我看了好多好多博客，这一篇最终解决了我的困惑<br>关键就是一个词：<font color=red>严格弱序比较<font color=black><br>链接：<a href="https://blog.csdn.net/llz62378/article/details/88937139">https://blog.csdn.net/llz62378/article/details/88937139</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ string 的substr的使用方法</title>
    <url>/2022/08/31/C++%20string%20%E7%9A%84substr%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# C++ string 的substr的使用方法
直接看代码

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	string s = <span class="string">&quot;Hello world !&quot;</span>;</span><br><span class="line">	cout&lt;&lt; s.<span class="built_in">substr</span>(<span class="number">1</span>)&lt;&lt; endl;<span class="comment">//下标从1开始到结束</span></span><br><span class="line">	cout&lt;&lt; s.<span class="built_in">substr</span>(<span class="number">1</span>, <span class="number">4</span>);<span class="comment">//下标从1开始后4个字符</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果<br><img src="https://img-blog.csdnimg.cn/ac658afbfa6043528de6cb364d11c7ef.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 引用和传参的区别</title>
    <url>/2022/08/31/C++%20%E5%BC%95%E7%94%A8%E5%92%8C%E4%BC%A0%E5%8F%82%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# C++ 引用和传参的区别
直接看代码

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func1</span><span class="params">(<span class="type">int</span> &amp;a)</span></span>&#123;</span><br><span class="line">	a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span>&#123;</span><br><span class="line">	a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> *a)</span></span>&#123;</span><br><span class="line">	*a = <span class="number">100</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">func1</span>(a);</span><br><span class="line">	<span class="built_in">func2</span>(b);</span><br><span class="line">	<span class="built_in">func3</span>(&amp;c);</span><br><span class="line">	cout&lt;&lt; a&lt;&lt; endl;</span><br><span class="line">	cout&lt;&lt; b&lt;&lt; endl;</span><br><span class="line">	cout&lt;&lt; c&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果<br><img src="https://img-blog.csdnimg.cn/20c10e183dc34558afbd940b3e290bfd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Chrome的headless配置语句（可粘贴）</title>
    <url>/2022/08/31/Chrome%E7%9A%84headless%E9%85%8D%E7%BD%AE%E8%AF%AD%E5%8F%A5%EF%BC%88%E5%8F%AF%E7%B2%98%E8%B4%B4%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line">chrome_options = Options()</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">chrome_options.add_argument(<span class="string">&#x27;--disable-gpu&#x27;</span>)</span><br><span class="line"><span class="comment">#path为自己的chrome.exe位置，我这里写的是我自己电脑中的位置</span></span><br><span class="line">path = <span class="string">r&#x27;C:\Users\86185\AppData\Local\Google\Chrome\Application\chrome.exe&#x27;</span></span><br><span class="line">chrome_options.binary_location = path</span><br><span class="line">browser = webdriver.Chrome(chrome_options=chrome_options)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言中的内部名和外部名</title>
    <url>/2022/08/31/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%86%85%E9%83%A8%E5%90%8D%E4%B8%8E%E5%A4%96%E9%83%A8%E5%90%8D/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
​	最近在看C语言的经典书籍——《The C Programming Language》，其中第二章讲到变量名时有这么一段话：“对于内部名而言，至少前31个字符是有效的。函数名与外部变量名包含的字符数目可能小于31，这是因为汇编程序和加载程序可能会使用这些外部名，而语言本身是无法控制加载和汇编程序的。对于外部名，ANSI标准仅保证前6个字符的唯一性，并且不区分大小写。” 怎么也读不懂，于是Google之，得到如下解释：

<p>​	A N S I标准规定，标识符可以为任意长度，但外部名必须至少能由前6个字符唯一地区分，并且不区分大小写。这里外部名指的是在链接过程中所涉及的标识符，其中包括文件间共享的函数名和全局变量名。因此外部名abcdefgh和abcdef将被当作同一个标识符处理，而且abcd和ABCD会当作一样处理。</p>
<p>​	A N S I标准还规定内部名必须至少能由前31个字符唯一地区分。内部名指的是仅出现于定义该标识符的文件中的那些标识符。C语言中的字母是有大小写区别的，因此count Count COUNT是三个不同的标识符。标识符不能和C语言的关键字相同，也不能和用户已编制的函数或C语言库函数同名。</p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>CS</tag>
      </tags>
  </entry>
  <entry>
    <title>GAMES101学习总结</title>
    <url>/2022/08/31/GAMES101%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<center>
今天就正式学完GAMES101了，发篇博客总结一下，顺便纪念一下这个历史性的时刻！
</center>

<span id="more"></span>

<p>图形学目前的学习资源并不多，GAMES101虽然是一门计算机图形学比较好的入门课，但自己由于在这方面毫无基础，这一路学下来还是比较坎坷的，感觉还是遇到了很多困难，大致有这么几个方面：</p>
<ol>
<li>C++基础薄弱，体现在类的使用，引用等等涉及到很多C++特性的东西，由于自己还没有这方面的能力，学习起来真的有点吃力，主要就是作业框架看的也不是很懂，基本都是上网找别人的代码进行一番学习才能勉强看懂，自己现在的安排是大二上一个学期把C++这边的东西学通一遍，参考书是C++ primiar plus（或许是其它），现在立下FLAG，希望到时侯能够实现吧~</li>
<li>没有很好的提问渠道，感觉可能有点孤军奋战，遇到一些问题只能上网去看别人的回答，身边没有一个小伙伴或者是前辈可以请教，这方面总是给自己带来一些困惑，以至于有时候心情和兴趣也会受一定的影响。</li>
</ol>
<p>总结这门课程中学到的东西，总共有以下几个方面：</p>
<ul>
<li>Rasterization（光栅化）与Graphics Pipline（图形管线）</li>
<li>Geometry（几何）</li>
<li>Ray Tracing（光线追踪）</li>
<li>Animation（动画）</li>
</ul>
<p>现在对每个方面都有所了解了，而且作业对于理解的帮助真的好大！目前的打算是接着听金老师安排，继续学习计算机图形学，争取能在这方面做点东西出来！</p>
<p>最后膜拜一下闫令琪大神，真的是太戳我了，是永远值得我去学习的榜样！</p>
<p>最后附上课程资料（课件，作业框架，参考答案），希望能对大家有帮助~</p>
<p>链接：<a href="https://pan.baidu.com/s/1yxST5bsw-OMR39uR-byUYQ">https://pan.baidu.com/s/1yxST5bsw-OMR39uR-byUYQ</a><br>提取码：tpo7<br>–来自百度网盘超级会员V1的分享</p>
<p>附：最后附上金老师的回复吧，还挺让我感到惊喜的，嘿嘿嘿加油！</p>
<p><img src="https://tva1.sinaimg.cn/large/008cRf41ly1h5pumfgqwpj31gg0dptg7.jpg" alt="image-20220831124437925"></p>
]]></content>
      <tags>
        <tag>CG</tag>
      </tags>
  </entry>
  <entry>
    <title>N个有理分数求和</title>
    <url>/2022/08/31/N%E4%B8%AA%E6%9C%89%E7%90%86%E5%88%86%E6%95%B0%E6%95%B0%E6%B1%82%E5%92%8C%20/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# N个有理分数求和 (20 分)
## 题目描述
本题的要求很简单，就是求N个数字的和。麻烦的是，这些数字是以有理数分子/分母的形式给出的，你输出的和也必须是有理数的形式。

<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入第一行给出一个正整数N（≤100）。随后一行按格式a1&#x2F;b1 a2&#x2F;b2 …给出N个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出上述数字和的最简形式 —— 即将结果写成整数部分 分数部分，其中分数部分写成分子&#x2F;分母，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p>
<p><strong>输入样例1</strong>：<br>5<br>2&#x2F;5 4&#x2F;15 1&#x2F;30 -2&#x2F;60 8&#x2F;3</p>
<p>输出样例1：<br>3 1&#x2F;3</p>
<p><strong>输入样例2</strong>：<br>2<br>4&#x2F;3 2&#x2F;3</p>
<p><strong>输入样例3</strong><br>3<br>1&#x2F;3 -1&#x2F;6 1&#x2F;8</p>
<p>输出样例3<br>7&#x2F;24</p>
<h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h2><p>由于是有理数加法，这里可以参照Basic level中的<strong>有理数四则运算</strong><br>（<a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805287624491008">题目链接</a>）（<a href="https://blog.csdn.net/qq_34771124/article/details/121479148">题解博客</a>）<br>两个核心：求最大公约数和特殊情况的判断</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>我这个题卡在测试点五<br><strong>运行超时</strong>：那么你在求最大公约数代码中加上这个就好了<br><img src="https://img-blog.csdnimg.cn/417908b7d5aa48548f7136e60cdd7434.png" alt="在这里插入图片描述"><br><strong>浮点错误</strong>：那么你是没有考虑0的情况，一个是求公约数不能出现0，另一个是如果结果为0，只输出一个0就好。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans_up, ans_down;<span class="comment">//分子和分母</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;<span class="comment">//辗转相除法求最大公约数</span></span><br><span class="line">	<span class="keyword">if</span>(a == b)</span><br><span class="line">		<span class="keyword">return</span> a;</span><br><span class="line">	<span class="keyword">if</span>(a &lt; b)&#123;</span><br><span class="line">		<span class="type">int</span> c = a;</span><br><span class="line">		a = b;</span><br><span class="line">		b = c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a % b == <span class="number">0</span>) <span class="keyword">return</span> b;</span><br><span class="line">	<span class="keyword">else</span>	<span class="keyword">return</span> <span class="built_in">lcd</span>(a - b, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c, <span class="type">int</span> d)</span></span>&#123;<span class="comment">//计算两个有理数计算的结果</span></span><br><span class="line">	ans_up = a * d + c * b;</span><br><span class="line">	ans_down = b * d;</span><br><span class="line">	<span class="keyword">if</span>(ans_up == <span class="number">0</span>)	<span class="keyword">return</span> ;</span><br><span class="line">	<span class="type">int</span> ld = <span class="built_in">lcd</span>(<span class="built_in">abs</span>(ans_up), ans_down);</span><br><span class="line">	ans_up /= ld;</span><br><span class="line">	ans_down /= ld;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="comment">//输出结果</span></span><br><span class="line">	<span class="keyword">if</span>(ans_up &lt; <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">		ans_up *= <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ans_up == <span class="number">0</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(ans_up &gt;= ans_down)&#123;</span><br><span class="line">		<span class="keyword">if</span>(ans_up % ans_down == <span class="number">0</span>)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans_up / ans_down);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d %d/%d&quot;</span>, ans_up / ans_down, ans_up % ans_down, ans_down);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d/%d&quot;</span>, ans_up, ans_down);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ans_up = <span class="number">0</span>, ans_down = <span class="number">1</span>;<span class="comment">//初始化结果</span></span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="type">int</span> x, y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d/%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line">		<span class="built_in">cal</span>(ans_up, ans_down, x, y);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">print</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>PTA基础题错题集</title>
    <url>/2022/08/31/PTA%E5%9F%BA%E7%A1%80%E9%A2%98%E9%94%99%E9%A2%98%E9%9B%86/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 1
>语句int *p; *p=50;执行时，不会有任何错误
分析：有错误，这个指针是空指针，没有对应的地址，直接赋值会出现错误。

<h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><blockquote>
<p>二维数组定义的一般形式如下，其中的类型名指定数组名的类型。 类型名 数组名[行长度][列长度]；<br>分析：错误，类型名指定的是数组中的元素类型。</p>
</blockquote>
<h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><blockquote>
<p>若变量已正确定义并赋值，符合C语言语法的表达式是 __.<br>A.a&#x3D;2++；<br>B.a&#x3D;3,5；<br>C.a&#x3D;a+1&#x3D;3；<br>D.12.3%4；<br>分析：选B<br>A 2++, 常量不能自加, 错误.<br>B a&#x3D;3,5等效于a&#x3D;3, 正确.<br>C a+1&#x3D;3错误.<br>D%取余运算只能用于整型. 错误</p>
</blockquote>
<h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><blockquote>
<p>运算符“+”不能作为单目运算符。<br>分析：错误，是可以的，表正数的意思</p>
</blockquote>
<h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><blockquote>
<p>表达式 <del>( ~2&lt;&lt;1)的值是5。<br>分析：正确，</del>的优先级高于&lt;&lt;</p>
</blockquote>
<h1 id="6"><a href="#6" class="headerlink" title="6"></a>6</h1><blockquote>
<p>函数f定义如下，执行语句“sum&#x3D;f(5)+f(3);”后，sum的值应为（ ）。<br>int f(int m)<br>{  static int i&#x3D;0;<br>   int s&#x3D;0;<br>     for(;i&lt;&#x3D;m;i++)<br>     s+&#x3D;i;<br>return s;<br>}<br>解析：答案为15，原因是静态局部变量的生存周期为整个程序。</p>
</blockquote>
<h1 id="7"><a href="#7" class="headerlink" title="7"></a>7</h1><blockquote>
<p>在定义嵌套的结构类型时，必须先定义成员的结构类型，再定义主结构类型。<br>解析：非常正确。不过有点难懂是什么意思，这里我再讲明白一点。定义嵌套的结构类型，在内部的结构必须在外部结构定义之前被定义一下，否则会报错。<br><img src="https://img-blog.csdnimg.cn/0fba5450ce50413fbdd20f743893eb45.jpg?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c34833ec5a0d4b9db1e4df4794feaf64.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="8"><a href="#8" class="headerlink" title="8"></a>8</h1><blockquote>
<p>全局变量只能定义在程序的最前面，即第一个函数的前面。<br>分析：错误，原因如下：<br><img src="https://img-blog.csdnimg.cn/40bb82d3af4345b7a1305eb34843d76a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>原文链接：<a href="http://c.biancheng.net/view/1858.html">http://c.biancheng.net/view/1858.html</a></p>
</blockquote>
<h1 id="9"><a href="#9" class="headerlink" title="9"></a>9</h1><blockquote>
<p>若变量已正确定义，执行以下while语句将陷入死循环。<br>i &#x3D; 1;<br>while (i &lt;&#x3D; 10) ;<br>    i++;<br>   分析：注意第二行末尾的；（阴间考法）</p>
</blockquote>
<h1 id="10"><a href="#10" class="headerlink" title="10"></a>10</h1><blockquote>
<p>下列程序输出结果为？<br>int main(void)<br>{<br>      int  a &#x3D; 2, b &#x3D; -1, c &#x3D; 2;<br>      if(a &lt; b)<br>            if(b &lt; 0)<br>                  c &#x3D; 0;<br>      else  c++;<br>      printf(“%d\n”,c);<br>      return 0;<br>}<br>解析：else与离他最近的且尚未配对的if配对，因此结果为2</p>
</blockquote>
<h1 id="11"><a href="#11" class="headerlink" title="11"></a>11</h1><blockquote>
<p>设计几组样例？<br>解析：这一类题保证每一个分支和单个条件的每一种都跑到就可以了。（虽然我觉得没有必要）</p>
</blockquote>
<h1 id="12"><a href="#12" class="headerlink" title="12"></a>12</h1><blockquote>
<p>执行以下程序段，输入1.1 0.01 365，输出1.1#0.010#365。<br>int day;<br>double factor, initial;<br>scanf(“%lf %d %lf”, &amp;initial, &amp;factor, &amp;day);<br>printf(“%.1f#%.3f#%d”, initial, factor, day);<br>解析：读入类型不匹配，出错。</p>
</blockquote>
<h1 id="13"><a href="#13" class="headerlink" title="13"></a>13</h1><blockquote>
<p>c语言源程序是文本文件，目标文件和可执行文件是二进制文件。<br>解析：正确。</p>
</blockquote>
<h1 id="14"><a href="#14" class="headerlink" title="14"></a>14</h1><blockquote>
<p>定义FILE *fp; 则文件指针fp 指向的是（）。(2分)<br>A,文件在磁盘上的读写位置<br>B,文件在缓冲区上的读写位置<br>C,整个磁盘文件<br>D,文件类型结构体<br>答案：D</p>
</blockquote>
<h1 id="15"><a href="#15" class="headerlink" title="15"></a>15</h1><blockquote>
<p>在定义结构类型时，关键字struct和它后面的结构名共同组成一个新的数据类型名。<br>正确（不过好像仅限于C，C++里面是可以不写struct的）</p>
</blockquote>
<h1 id="16"><a href="#16" class="headerlink" title="16"></a>16</h1><blockquote>
<p>一个结构类型变量所占的内存空间是其各个成员所占内存空间之和。<br>错误，解析见下面那篇博客。</p>
</blockquote>
<p><font color=red>我转载过一篇博客，说明了这个问题（<a href="https://blog.csdn.net/qq_34771124/article/details/121959579">戳这里</a>）</p>
<h1 id="17"><a href="#17" class="headerlink" title="17"></a>17</h1><blockquote>
<p>C语言 随机操作只适用于文本文件<br>错误。随机操作文本指的是用seek函数重新定位文件指针进行读写操作，访问数组中的元素也是随机的，知道下标就可以，所以说随机操作不只是针对于文件来讲。</p>
</blockquote>
<h1 id="18"><a href="#18" class="headerlink" title="18"></a>18</h1><blockquote>
<p>缓冲文件系统的文件缓冲区位于（）。<br>A.磁盘缓冲区中<br>B.磁盘文件中<br>C.内存数据区中<br>D.程序文件中<br>正确答案：C。文件缓冲区是用以暂时存放读写期间的文件数据而在内存区预留的一定空间</p>
</blockquote>
<h1 id="19"><a href="#19" class="headerlink" title="19"></a>19</h1><blockquote>
<p>函数fgetc的作用是从指定文件读入一个字符，该文件的打开方式必须是（ ）。<br>A.只写<br>B.追加<br>C.读或读写<br>D.答案B和C都正确<br>正确答案：D</p>
</blockquote>
<h1 id="20"><a href="#20" class="headerlink" title="20"></a>20</h1><blockquote>
<p>int *p &#x3D; 1000;请判断这个语句的正确性<br>答案：错误。在内存中常量的地址不能赋给指针。</p>
</blockquote>
<h1 id="21"><a href="#21" class="headerlink" title="21"></a>21</h1><blockquote>
<p>执行以下程序段，sum的值是1.5。<br>int i, sum;<br>sum &#x3D; 0;<br>for (i &#x3D; 1; i &lt;&#x3D; 2; i++){<br>    sum &#x3D; sum + 1.0&#x2F;i;<br>}<br>答案：错误。因为sum定义的类型为int</p>
</blockquote>
<h1 id="22"><a href="#22" class="headerlink" title="22"></a>22</h1><blockquote>
<p>对于以下结构定义，(*p)-&gt;str++中的++加在（）。<br>struct {<br>  int len;<br>  char *str<br>} *p;<br>答案：语法错误</p>
</blockquote>
<h1 id="23"><a href="#23" class="headerlink" title="23"></a>23</h1><blockquote>
<p>以下程序运行后的输出结果是<br>#include&lt;stdio.h&gt;<br>void point(char  *p)<br>{   p +&#x3D; 3;   }<br>int main( )<br>{<br>  char  b[4] &#x3D; {‘a’, ‘b’, ‘c’, ‘d’}, *p &#x3D; b;<br>  point(p);<br>  printf(“%c\n”, *p);<br>  return 0;<br>}<br>答案：‘a’。形参和实参的问题。</p>
</blockquote>
<h1 id="24"><a href="#24" class="headerlink" title="24"></a>24</h1><blockquote>
<p>对于 int 型的二级指针变量，它既可以指向同类型的一级指针变量，也可以指向同类型的普通（非指针）变量。<br>答案：错误<br>解析：二级指针间接引用一次后必须是地址值。</p>
</blockquote>
<h1 id="25"><a href="#25" class="headerlink" title="25"></a>25</h1><p>下列程序的运行结果为</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x[<span class="number">5</span>] = &#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>&#125;, *p, **pp;</span><br><span class="line">    </span><br><span class="line">    p = x;</span><br><span class="line">    pp = &amp;p;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span> , *(++p));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span> , (**pp)+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>答案：4,5</p>
<h1 id="26"><a href="#26" class="headerlink" title="26"></a>26</h1><p>写出下列程序段的运行结果</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *st[] = &#123;<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;world&quot;</span>, <span class="string">&quot;!&quot;</span>&#125;, **p = st; </span><br><span class="line"></span><br><span class="line">p++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s-%c\n&quot;</span>, *p, **p);</span><br><span class="line">(*p)++; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s-%c-%c\n&quot;</span>, *p, **p, (**p)+<span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>第一行：world-w<br>第二行：orld-o-p<br>解析：关键就在（*p）++的理解，其实就是把p指向的地址从原来的world的首地址改为次首地址。</p>
<h1 id="27"><a href="#27" class="headerlink" title="27"></a>27</h1><p>下列程序的输出结果为</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span> &#125;;</span><br><span class="line">	<span class="type">int</span> *ptr1 = (<span class="type">int</span> *)(&amp;a + <span class="number">1</span>);</span><br><span class="line">	<span class="built_in">printf</span>( <span class="string">&quot;%x&quot;</span>, ptr1[<span class="number">-1</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>答案：4<br>解析：&amp;a是一个4大小的数组指针，加一后指向4的下一个位置</p>
<h1 id="28"><a href="#28" class="headerlink" title="28"></a>28</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span>  s[ ]=<span class="string">&quot;159&quot;</span>,*p;</span><br><span class="line">    p=s;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,*p++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,*p++);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序的运行结果为：15<br>解析：++加在距离它最近的变量上（从右往左）</p>
<h1 id="29"><a href="#29" class="headerlink" title="29"></a>29</h1><p>若有函数max(a,b)，并且已使函数指针变量p指向函数max，当调用函数时，正确的调用方法是（ ）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">A.</span><br><span class="line">(*p)<span class="built_in">max</span>(a+b);</span><br><span class="line">B.</span><br><span class="line">*<span class="built_in">pmax</span>(a,b);</span><br><span class="line">C.</span><br><span class="line">(*p)(a,b);</span><br><span class="line">D.</span><br><span class="line">*<span class="built_in">p</span>(a,b);</span><br></pre></td></tr></table></figure>
<p>答案：C<br>解析：定义和调用均需要小括号</p>
<h1 id="30"><a href="#30" class="headerlink" title="30"></a>30</h1><p>假设有定义如下： int array[10]; 则该语句定义了一个数组array。其中array的类型是整型指针（即： int *）。<br>答案：F<br>原因：应当是数组指针 (int *)[10]</p>
<h1 id="31"><a href="#31" class="headerlink" title="31"></a>31</h1><p>对于以下程序，能够正确表示二维数组 t 的元素地址的表达式是（ ）。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k, t[<span class="number">3</span>][<span class="number">2</span>], *pt[<span class="number">3</span>];</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++) &#123;</span><br><span class="line">        pt[k] = t[k];</span><br><span class="line">        &#125;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>A.&amp;t[3][2]<br>B.<em>pt[0]<br>C.</em>(pt+1)<br>D.&amp;pt[2]<br>选择：C<br>t的元素即是t[0] t[1] t[2]……</p>
<h1 id="32"><a href="#32" class="headerlink" title="32"></a>32</h1><p>在 C 程序中，函数既可以嵌套定义，也可以嵌套调用。</p>
<p>答案：F<br>分析：可以嵌套调用，不能嵌套定义</p>
<h1 id="33"><a href="#33" class="headerlink" title="33"></a>33</h1><p>有一段程序如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">getSum</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> s;</span><br><span class="line">    s = <span class="built_in">getSum</span>(k+<span class="number">1</span>) + k;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">    sum = <span class="built_in">getSum</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>递归函数getSum设计不合理，这段程序将无限递归，始终不能结束。</p>
<p>答案：F<br>分析：当堆栈满了之后就会停下来</p>
<h1 id="34"><a href="#34" class="headerlink" title="34"></a>34</h1><p>对于以下程序，能够正确表示二维数组 t 的元素地址的表达式是（ ）。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k, t[<span class="number">3</span>][<span class="number">2</span>], *pt[<span class="number">3</span>];</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++) &#123;</span><br><span class="line">        pt[k] = t[k];</span><br><span class="line">        &#125;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>A. &amp;t[3][2]</p>
<p>B.*pt[0]</p>
<p>C.*(pt+1)</p>
<p>D.&amp;pt[2]</p>
<p>答案：C<br>解析：题目要求找到一个一级指针<br>        Ａ越界<br>        Ｂ元素的值<br>        Ｃpt[1]一级指针<br>         D 二级指针</p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>course</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>printf输出如何用变量控制位宽</title>
    <url>/2022/08/31/printf%E8%BE%93%E5%87%BA%E6%97%B6%E5%A6%82%E4%BD%95%E7%94%A8%E5%8F%98%E9%87%8F%E6%8E%A7%E5%88%B6%E4%BD%8D%E5%AE%BD_/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 看代码

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">2</span>, y = <span class="number">3</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%*d %0*d&quot;</span>, x, y, x, y);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>windows批处理学习</title>
    <url>/2022/08/31/windows%E6%89%B9%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
[转载链接](https://www.cnblogs.com/xpwi/p/9626959.html)
[转载链接](https://blog.csdn.net/qq_38199187/article/details/84642491)
]]></content>
  </entry>
  <entry>
    <title>一文搞懂结构体变量占用多大的内存空间</title>
    <url>/2022/08/31/%E4%B8%80%E6%96%87%E6%90%9E%E6%87%82%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E5%8D%A0%E7%94%A8%E5%A4%9A%E5%A4%A7%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%EF%BC%88%E8%AF%A6%E7%BB%86%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 一、首先做一道例题感受一下
请问下面定义的结构体变量aa在计算机内存中占用多少字节？
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span>  <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span>   <span class="type">float</span>    height;</span><br><span class="line">    <span class="type">short</span> <span class="type">int</span>  age ;</span><br><span class="line">    <span class="type">char</span>     sex ;</span><br><span class="line">&#125;aa;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(aa));  <span class="comment">//屏幕上将显示多少？</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
**错误解答**：我们都知道，char类型占用1个字节，float型占用4个字节，short int类型占用2个字节，int型在VC6.0中占用4个字节（TC2.0中占用2个字节），long占用8个字节，double占用8个字节。因此，我们可能会犯一个错误就是直接4+2+1=7，结构体aa占用7个字节。这是错的。

<p><strong>错误分析</strong>：计算结构体大小时需要考虑其内存布局，编译系统为了提高计算机访问数据的效率，在安排结构体每个成员的时候采用了内存对齐的方法，具体是：结构体在内存中的存放按单元进行存放，每个单元的大小取决于<font color=red>结构体中最大基本类型的大小。</p>
<h1 id="二、为解释清楚，我们列出以下几种格式"><a href="#二、为解释清楚，我们列出以下几种格式" class="headerlink" title="二、为解释清楚，我们列出以下几种格式"></a>二、为解释清楚，我们列出以下几种格式</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">格式一：</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagPhone</span>&#123;</span>    </span><br><span class="line"> <span class="type">char</span>   A;    </span><br><span class="line"> <span class="type">int</span>    B;    </span><br><span class="line"> <span class="type">short</span>  C;    </span><br><span class="line">&#125;Phone1;  </span><br><span class="line"></span><br><span class="line">格式二：  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagPhone</span>&#123;</span>    </span><br><span class="line"> <span class="type">char</span>   A;    </span><br><span class="line"> <span class="type">short</span>  C;   </span><br><span class="line"> <span class="type">int</span>    B;    </span><br><span class="line">&#125;Phone2;   </span><br><span class="line"></span><br><span class="line">格式三：  </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagPhone3</span>&#123;</span>    </span><br><span class="line"> <span class="type">char</span>    A;    </span><br><span class="line"> <span class="type">char</span>   B[<span class="number">2</span>];    </span><br><span class="line"> <span class="type">char</span>    C[<span class="number">4</span>];    </span><br><span class="line">&#125;Phone3;   </span><br><span class="line"></span><br><span class="line">格式四：</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tagPhone3</span>&#123;</span>    </span><br><span class="line"> <span class="type">char</span>    A;    </span><br><span class="line"> <span class="type">double</span>  B[<span class="number">2</span>];    </span><br><span class="line"> <span class="type">char</span>    C[<span class="number">4</span>];    </span><br><span class="line">&#125;Phone4;   </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><font size=5>然后我们一一分析<br><img src="https://img-blog.csdnimg.cn/e08eaeeff49e4bb9b8898214f94590b4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b53b2ef7e0234d1eb14c2076db3e51dd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/07bc4d274ece44978ae05d013451b9dc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ae67bfa5de134532bdbbebf75d7c7729.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>综上所述，作为一个优秀的程序员，有必要在声明结构体变量时考虑如何才能节省空间，因为这之间的差异是非常大的。</p>
<p>原文链接：<a href="http://blog.sina.com.cn/s/blog_75a2ecd20102xca0.html">http://blog.sina.com.cn/s/blog_75a2ecd20102xca0.html</a></p>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo+github搭建属于自己的博客</title>
    <url>/2022/08/29/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>自己最近在学CG（computer graphics）,想到能和前端联系起来，所以就一方面搭建个人网站，另一方面开始学习前端三宝（HTML，CSS，JS），这篇文章是自己搭建这个博客的方法。</p>
<span id="more"></span>

<h2 id="搭建自己的博客网站"><a href="#搭建自己的博客网站" class="headerlink" title="搭建自己的博客网站"></a>搭建自己的博客网站</h2><p>全流程参考知乎文章<a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程 - 知乎 (zhihu.com)</a></p>
<p>如果想要更换主题，不要用上面那篇文章里的教程</p>
<p>用这一个<a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next 主题博客个性化配置超详细，超全面(两万字)_Z小旋的博客-CSDN博客_hexo next主题配置</a></p>
<p>最后，再说一个我配置的时候遇到的最大的问题，为什么本地预览成功，但是部署到github上后却显示不出来，这里可以这样处理：</p>
<p>首先打开你的github项目</p>
<p>点击settings</p>
<p><img src="https://tvax4.sinaimg.cn/large/008cRf41ly1h5nq4ca5hbj3062042mx3.jpg" alt="image-20220829162224708"></p>
<p>然后打开pages选项</p>
<p><img src="https://tva2.sinaimg.cn/large/008cRf41ly1h5nq4cg87gj30ed0s5juo.jpg" alt="image-20220829162348247"></p>
<p>然后修改page site从原来的main改为master（如果你是把代码全都部署在master分支上的话，这样可以修改成功</p>
<p><img src="https://tvax1.sinaimg.cn/large/008cRf41ly1h5nq4clf4mj30ne0fnwiz.jpg" alt="image-20220829162454395"></p>
]]></content>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>最短路算法总结</title>
    <url>/2022/08/31/%E4%BA%94%E5%A4%A7%E6%9C%80%E7%9F%AD%E8%B7%AF%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 最短路算法总结
### 一、目录
##### 1.Floyd（n^3) n：点数
##### 2.dijikstra( n^2 -> mlogm) n：点数 m:边数 
##### 3.bellman-ford(nm) n: 点数 m:边数
##### 4.spfa(Km)  K:约为2的常数 m:边数
##### 5.Johnson (nmlogm) 

<h3 id="二、实现的代码"><a href="#二、实现的代码" class="headerlink" title="二、实现的代码"></a>二、实现的代码</h3><h3 id="1-floyd-全源最短路（可以解决负权边，但不能解决负权回路）"><a href="#1-floyd-全源最短路（可以解决负权边，但不能解决负权回路）" class="headerlink" title="1.floyd  全源最短路（可以解决负权边，但不能解决负权回路）"></a>1.floyd  全源最短路（可以解决负权边，但不能解决负权回路）</h3><p>代码的核心：从第i点到第j点的过程中，寻找是否有第k点（k ！&#x3D; i &amp;&amp; k ！&#x3D; j）作为中转点，使得i点和j点之间的最短路可以更新，从而完成代码。</p>
<h2 id="要注意：k要放在最外层循环（本质与动规状态转移有关）否则对于一些神奇的数据点，会出错！！！"><a href="#要注意：k要放在最外层循环（本质与动规状态转移有关）否则对于一些神奇的数据点，会出错！！！" class="headerlink" title="要注意：k要放在最外层循环（本质与动规状态转移有关）否则对于一些神奇的数据点，会出错！！！"></a>要注意：k要放在最外层循环（本质与动规状态转移有关）否则对于一些神奇的数据点，会出错！！！</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 200<span class="comment">//基本为最大数据范围</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];<span class="comment">//两个点之间的最短距离 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;<span class="comment">//n为点的数目，m为边的数目</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(f));<span class="comment">//初始化为无穷大</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		f[i][i] = <span class="number">0</span>;<span class="comment">//自己到自己的距离初始化为0</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ m)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">		<span class="keyword">if</span>(z &lt; f[x][y]) f[x][y] = f[y][x] = z;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; ++ k)<span class="comment">//k必须在最外层循环，作为动态转移的状态</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)</span><br><span class="line">				<span class="keyword">if</span>(i != k &amp;&amp; i != j &amp;&amp; k != j &amp;&amp; f[x][k] + f[k][y] &lt; f[x][y]) f[x][y] = f[y][x] = f[x][k] + f[k][y];</span><br><span class="line">	f[a][b]即为a,b两点之间的最短距离</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-dijikstra-单源最短路（不能解决负权边）"><a href="#2-dijikstra-单源最短路（不能解决负权边）" class="headerlink" title="2.dijikstra 单源最短路（不能解决负权边）"></a>2.dijikstra 单源最短路（不能解决负权边）</h3><p>使用 优先队列 + vector双重优化，复杂度低于mlogn<br>代码的核心：松弛操作若能实现，将点加入到优先队列中，每次取出距离起点最短距离的点进行拓展，并且保证每个点只进行一次遍历它所有相邻的点。</p>
<p>此处代码直接用堆优化，因为不优化的dijikstra意义不大（时间复杂度高）<br>补充：如何求最短路条数？<br>修改为如下代码即可：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">	dis[v] = dis[u] + w;</span><br><span class="line">	num[v] = num[u];</span><br><span class="line">	que.push(make_pair(-dis[v], v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dis[u] + w == dis[v])</span><br><span class="line">	num[v] += num[u];</span><br></pre></td></tr></table></figure>

<h2 id="注意：压入队列时，要压边权的相反数！（默认大根堆）"><a href="#注意：压入队列时，要压边权的相反数！（默认大根堆）" class="headerlink" title="注意：压入队列时，要压边权的相反数！（默认大根堆）"></a>注意：压入队列时，要压边权的相反数！（默认大根堆）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1050</span>;<span class="comment">//基本为最大数据范围 </span></span><br><span class="line"><span class="type">int</span> dis[N];</span><br><span class="line"><span class="type">bool</span> vis[N];</span><br><span class="line">vector&lt;pair &lt;<span class="type">int</span> , <span class="type">int</span>&gt; &gt;vec[N];</span><br><span class="line">priority_queue&lt;pair &lt;<span class="type">int</span> , <span class="type">int</span>&gt; &gt;que;<span class="comment">//大根堆 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijikstra</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, x));</span><br><span class="line">	dis[x] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(!que.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		<span class="type">int</span> u = que.<span class="built_in">top</span>().second;</span><br><span class="line">		que.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">		vis[u] = <span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> len = vec[u].<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">			<span class="type">int</span> v = vec[u][i].first;</span><br><span class="line">			<span class="type">int</span> w = vec[u][i].second;</span><br><span class="line">			<span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">				dis[v] = dis[u] + w;</span><br><span class="line">				que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[v], v));<span class="comment">//压</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> x, y, v;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;v);</span><br><span class="line">		vec[x].<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(y, v));</span><br><span class="line">		vec[y].<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(x, v));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> center;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;center);</span><br><span class="line">	<span class="built_in">memset</span>(dis, <span class="number">63</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">	<span class="built_in">dijikstra</span>(center);<span class="comment">//求出以center为起点的各点的最短路，存储在dis数组中 </span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, dis[目标点]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-bellman-ford-单源最短路（能解决负权边-不能解决负环，但可以判断负环）"><a href="#3-bellman-ford-单源最短路（能解决负权边-不能解决负环，但可以判断负环）" class="headerlink" title="3.bellman-ford 单源最短路（能解决负权边,不能解决负环，但可以判断负环）"></a>3.bellman-ford 单源最短路（能解决负权边,不能解决负环，但可以判断负环）</h3><p>代码核心：跑n次循环，每次跑m条边的首尾点之间的距离，如果能更新就及时更新。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="title">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 3050</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> Edge&#123;</span><br><span class="line">	<span class="built_in">int</span> u, v;</span><br><span class="line">	<span class="built_in">int</span> w;</span><br><span class="line">&#125;edge[N];<span class="comment">//结构体数组用来存边 </span></span><br><span class="line"><span class="built_in">int</span> dis[N];</span><br><span class="line"><span class="function"><span class="built_in">int</span> <span class="title">main</span>()</span>&#123;</span><br><span class="line">	<span class="built_in">int</span> U, V;<span class="comment">//起点和终点 </span></span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;U, &amp;V);</span><br><span class="line">	memset(dis, <span class="number">63</span>, <span class="keyword">sizeof</span>(dis));</span><br><span class="line">	dis[U] = <span class="number">0</span>;<span class="comment">//初始化 </span></span><br><span class="line">	<span class="built_in">int</span> n, m;</span><br><span class="line">	scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;edge[i].u, &amp;edge[i].v, edge[i].w);</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(dis[edge[j].u] + edge[j].w &lt; dis[edge[j].v])</span><br><span class="line">				dis[edge[j].v] = dis[edge[j].u] + edge[j].w;</span><br><span class="line">			<span class="keyword">if</span>(dis[edge[j].v] + edge[j].w &lt; dis[edge[j].u])</span><br><span class="line">				dis[edge[j].u] = dis[edge[j].v] + edge[j].w;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)</span><br><span class="line">		<span class="keyword">if</span>(dis[edge[j].u] + edge[j].w &lt; dis[edge[j].v] || dis[edge[j].v] + edge[j].w &lt; dis[edge[j].u])</span><br><span class="line">			printf(<span class="string">&quot;存在负环！！！&quot;</span>)</span><br><span class="line">	printf(<span class="string">&quot;%d&quot;</span>, dis[V]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-spfa求单源最短路（能解决负权边，不能解决负环，可判断负环）"><a href="#4-spfa求单源最短路（能解决负权边，不能解决负环，可判断负环）" class="headerlink" title="4.spfa求单源最短路（能解决负权边，不能解决负环，可判断负环）"></a>4.spfa求单源最短路（能解决负权边，不能解决负环，可判断负环）</h3><p>代码核心：用队列优化后的bellman-Ford算法，省去了冗余的循环，大大极高运行效率。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &gt;vec[N];</span><br><span class="line">queue&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &gt;que;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dis[N], d[N];<span class="comment">//d[N]为走最短路到达某点所需步数 </span></span><br><span class="line"><span class="type">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(dis, <span class="number">63</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">	dis[s] = <span class="number">0</span>;</span><br><span class="line">	vis[s] = <span class="number">1</span>;</span><br><span class="line">	que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, s));</span><br><span class="line">	<span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> u = que.<span class="built_in">front</span>().second;</span><br><span class="line">		vis[u] = <span class="number">0</span>;</span><br><span class="line">		que.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; vec[u].<span class="built_in">size</span>(); ++i)&#123;</span><br><span class="line">			<span class="type">int</span> v = vec[u][i].first;</span><br><span class="line">			<span class="type">int</span> w = vec[u][i].second;</span><br><span class="line">			<span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">				dis[v] = dis[u] + w;</span><br><span class="line">				d[v] = d[u] + <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(d[v] &gt;= n) <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//若无负环，走最短路到达某点最多用n-1条边 </span></span><br><span class="line">				<span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">					vis[v] = <span class="number">1</span>;</span><br><span class="line">					que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(dis[v], v));</span><br><span class="line">				&#125;	</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);	</span><br><span class="line">	<span class="type">int</span> x, y, z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">		vec[x].<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(y, z));</span><br><span class="line">		vec[y].<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(x, z));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> U, V;<span class="comment">//U:起点 V：终点 </span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;U, &amp;V);</span><br><span class="line">	<span class="type">int</span> judge = <span class="built_in">spfa</span>(U);</span><br><span class="line">	<span class="keyword">if</span>(judge == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;存在负环！！！&quot;</span>)</span><br><span class="line">	<span class="keyword">else</span>	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, dis[V]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-johnson全源最短路（能解决负权边，不能解决负环，可以判断负环）"><a href="#5-johnson全源最短路（能解决负权边，不能解决负环，可以判断负环）" class="headerlink" title="5.johnson全源最短路（能解决负权边，不能解决负环，可以判断负环）"></a>5.johnson全源最短路（能解决负权边，不能解决负环，可以判断负环）</h3><p>代码关键：bellman-ford与dijikstra的配合使用，大数据范围下优于spfa算法跑n次。</p>
<p>转载【洛谷日报#242】Johnson 全源最短路径算法学习笔记<br>链接：<a href="https://zhuanlan.zhihu.com/p/99802850">https://zhuanlan.zhihu.com/p/99802850</a></p>
<p>练习题：P5905 【模板】Johnson 全源最短路<br>链接：<a href="https://www.luogu.com.cn/problem/P5905">https://www.luogu.com.cn/problem/P5905</a></p>
<h2 id="建议先看笔记，后做题，下面是本题题解"><a href="#建议先看笔记，后做题，下面是本题题解" class="headerlink" title="建议先看笔记，后做题，下面是本题题解"></a>建议先看笔记，后做题，下面是本题题解</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 3005</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> h[N], vis[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dis[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>&#123;</span><br><span class="line">	<span class="type">int</span> u, v;</span><br><span class="line">	<span class="type">int</span> w;</span><br><span class="line">&#125;edge[N * <span class="number">2</span>];<span class="comment">//结构体数组用来存边</span></span><br><span class="line">vector&lt;pair &lt;<span class="type">int</span> , <span class="type">int</span>&gt; &gt;vec[N];</span><br><span class="line">priority_queue&lt;pair &lt;<span class="type">long</span> <span class="type">long</span> , <span class="type">int</span>&gt; &gt;que;<span class="comment">//大根堆 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dijikstra</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)</span><br><span class="line">		dis[i] = <span class="number">1e9</span>;</span><br><span class="line">	<span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">	que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, x));</span><br><span class="line">	dis[x] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(!que.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		<span class="type">int</span> u = que.<span class="built_in">top</span>().second;</span><br><span class="line">		que.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">		vis[u] = <span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> len = vec[u].<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; ++ i)&#123;</span><br><span class="line">			<span class="type">int</span> v = vec[u][i].first;</span><br><span class="line">			<span class="type">int</span> w = vec[u][i].second;</span><br><span class="line">			<span class="keyword">if</span>(dis[u] + w &lt; dis[v])&#123;</span><br><span class="line">				dis[v] = dis[u] + w;</span><br><span class="line">				que.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[v], v));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">	<span class="type">int</span> x, y, z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class="line">		edge[i].u = x;</span><br><span class="line">		edge[i].v = y;</span><br><span class="line">		edge[i].w = z;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; ++ i)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(h[edge[j].u] + edge[j].w &lt; h[edge[j].v])</span><br><span class="line">				h[edge[j].v] = h[edge[j].u] + edge[j].w;			</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; ++ j)</span><br><span class="line">		<span class="keyword">if</span>(h[edge[j].u] + edge[j].w &lt; h[edge[j].v])&#123;</span><br><span class="line">			<span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; ++ i)</span><br><span class="line">		vec[edge[i].u].<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(edge[i].v, edge[i].w + h[edge[i].u] - h[edge[i].v]));</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++ i)&#123;</span><br><span class="line">		<span class="built_in">dijikstra</span>(i);</span><br><span class="line">		<span class="type">long</span> <span class="type">long</span> tot = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; ++ j)&#123;</span><br><span class="line">			<span class="keyword">if</span>(dis[j] == <span class="number">1e9</span>) tot += j * <span class="number">1e9</span>;</span><br><span class="line">			<span class="keyword">else</span> tot += j * (dis[j] + h[j] - h[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, tot);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="以上就是最短路算法的总结了，或许还是有一些错误的存在，欢迎大家在评论区批评指正，谢谢！"><a href="#以上就是最短路算法的总结了，或许还是有一些错误的存在，欢迎大家在评论区批评指正，谢谢！" class="headerlink" title="以上就是最短路算法的总结了，或许还是有一些错误的存在，欢迎大家在评论区批评指正，谢谢！"></a>以上就是最短路算法的总结了，或许还是有一些错误的存在，欢迎大家在评论区批评指正，谢谢！</h1>]]></content>
      <tags>
        <tag>CS</tag>
        <tag>algorithm</tag>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>分辨率的认识</title>
    <url>/2022/09/04/%E5%88%86%E8%BE%A8%E7%8E%87%E7%9A%84%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<p>今天看到了《网页制作从新手到高手》的第四章P50，看到了图像分辨率的介绍，感觉讲的不是很清楚，于是自己搜索，对这个概念有了一些认识，记录为这篇博客</p>
<span id="more"></span>

<h1 id="分辨率的认识"><a href="#分辨率的认识" class="headerlink" title="分辨率的认识"></a>分辨率的认识</h1><h2 id="像素（pixel）"><a href="#像素（pixel）" class="headerlink" title="像素（pixel）"></a>像素（pixel）</h2><p>平时我们经常会接触到一个概念叫做 像素，如何去理解它呢，我们放大一张图片，当放到很大的时候，我们会发现图中变成了各种颜色的色块的组合，这样的每一个色块就叫做一个像素（pixel，简称px）其实我们平时接触到所有的图像都是这样组成的，只不过是我们看一张图片时，通常是从整体来看的，所以我们也不会感觉到有什么异常。</p>
<p>比如我们放大下面这张图里的篮球，就会看到一个个色块，所以其实从更小的角度来看，颜色是离散的（不连续的）</p>
<p><img src="https://tva2.sinaimg.cn/large/008cRf41ly1h5uvbbpsifj30cf0bg42t.jpg" alt="屏幕截图 2022-09-04 205358"></p>
<p><img src="https://tvax4.sinaimg.cn/large/008cRf41ly1h5uvbc0yhcj31z418g4qp.jpg" alt="屏幕截图 2022-09-04 205629"></p>
<h2 id="图像分辨率与屏幕分辨率"><a href="#图像分辨率与屏幕分辨率" class="headerlink" title="图像分辨率与屏幕分辨率"></a>图像分辨率与屏幕分辨率</h2><h3 id="图像分辨率"><a href="#图像分辨率" class="headerlink" title="图像分辨率"></a>图像分辨率</h3><p>这个概念其实我们平时接触的并不多，当我们说一个图片“像素高” “看起来很清晰”时，其实是在说图像分辨率大，图像分辨率的概念是一英寸正方形内一条边上像素的个数。比如我们在一张图（原始无放大的状态下）画出一个1英寸×1英寸的正方形，然后我们数一下其中的像素个数，如果是72px*72px，那么这个图像的分辨率就是72 ppi（pixels per inch）</p>
<p><img src="https://tvax4.sinaimg.cn/large/008cRf41ly1h5uvi0zpa8j30t90f4dmh.jpg" alt="image"></p>
<center>图片来源 [B站da西先生]([4.分辨率和图像大小_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1UC4y1a7Fx?spm_id_from=333.880.my_history.page.click&vd_source=64137ec6dfc52353d4c023a37a16203e))</center>

<h3 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h3><p>这个我们生活中用的还挺多的，比如我们说这个平板的分辨率是4k的，其实是说这个屏幕的宽上有4000左右个像素点（不同设备会有所区别），还有一种说法是这个屏幕的分辨率是1920 × 1280的，也就是说宽上有1920个像素点，高上有1280个像素点。<br></p>
<p>当屏幕尺寸一定时，分辨率越大，显示效果越好；当分辨率一定时，屏幕越小，显示效果越好。</p>
<img src="https://tva1.sinaimg.cn/large/008cRf41ly1h5uvqccveaj307s04qjs2.jpg" alt="image" style="zoom:200%;" />

<h2 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h2><p>要注意的是，分辨率并不是图像的文件大小和传输时间最主要的决定因素，因为网页使用的图像是以压缩形式存储的，而且分辨率高 ≠ 图像文件大，像素点越多，图像文件才会越大。</p>
<p>希望能对你有所帮助，如果问题请您批评指出！</p>
]]></content>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>关于from selenium import webdriver运行时报错</title>
    <url>/2022/08/31/%E5%85%B3%E4%BA%8Efrom%20selenium%20import%20webdriver%E8%BF%90%E8%A1%8C%E6%97%B6%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<font color=green>
首先要成功安装selenium<br>
我一开始的问题是文件名取了selnium.py<br>
然后一直报错，改一个其它名即可<br>
之后，报错就变了

<p><img src="https://img-blog.csdnimg.cn/f2609fd0ee694578a94d7ff607e128fb.png" alt="在这里插入图片描述"><br><font color=green>也就是说编译器显示都正常，一运行就有bug<br>然后我发现了解决的办法<br>左上角文件-设置-python解释器<br>在其中找到selenium，检查版本<br>如果过新，可能会导致不能正常使用<br>我一开始用的4.1.0，后来改为3.11.0就好了<br><img src="https://img-blog.csdnimg.cn/d643ffbca89146a9b579f2fd7f6e4ff2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red><br>祝愿你能尽快调出来！QWQ</p>
]]></content>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>栈和队列（手动与STL实现）</title>
    <url>/2022/08/31/%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E2%80%94%E2%80%94%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97%EF%BC%88%E6%89%8B%E5%8A%A8%E4%B8%8ESTL%E5%AE%9E%E7%8E%B0%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>

<h2 id="栈和队列的总结"><a href="#栈和队列的总结" class="headerlink" title="栈和队列的总结"></a>栈和队列的总结</h2><p><strong>一、栈</strong></p>
<ol>
<li><p>库函数的栈</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">stack&lt; <span class="type">int</span> &gt; S; </span><br><span class="line">stack&lt; pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; &gt;SS;</span><br><span class="line"></span><br><span class="line">S.<span class="built_in">push</span>(x);入栈</span><br><span class="line">SS.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(x, y));入栈</span><br><span class="line">S.<span class="built_in">pop</span>();出栈</span><br><span class="line">S.<span class="built_in">empty</span>()；判断是否为空，若空返回<span class="number">1</span>，不空返回<span class="number">0</span></span><br><span class="line">S.<span class="built_in">size</span>()；栈内元素个数</span><br><span class="line">S.<span class="built_in">top</span>();取出栈顶元素</span><br></pre></td></tr></table></figure></li>
<li><p>手写栈</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> s[];</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">s[++t] = x;入栈</span><br><span class="line">--t; 出栈</span><br><span class="line">t不为<span class="number">0</span>栈则不空</span><br><span class="line">t为栈内元素个数</span><br><span class="line">s[t] 栈顶元素</span><br></pre></td></tr></table></figure>
<p><strong>二.队列</strong></p>
</li>
<li><p>库函数的队列</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">queue&lt; <span class="type">int</span> &gt;que;</span><br><span class="line"></span><br><span class="line">que.<span class="built_in">push</span>();</span><br><span class="line">que.<span class="built_in">pop</span>();</span><br><span class="line">que.<span class="built_in">front</span>();</span><br><span class="line">que.<span class="built_in">back</span>();</span><br><span class="line">que.<span class="built_in">size</span>();</span><br><span class="line">que.<span class="built_in">empty</span>();</span><br><span class="line">标注基本同库函数的栈，此处忽略</span><br></pre></td></tr></table></figure>
</li>
<li><p>手写队列</p>
</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">que[];</span><br><span class="line"><span class="type">int</span> head = <span class="number">1</span>, tail = <span class="number">0</span>;</span><br><span class="line">que[++ tail] = x; 加入队列</span><br><span class="line">++head;删除队头</span><br><span class="line">--tail;删除队尾（区别于库函数的操作）</span><br><span class="line">head &gt; tail 队列为空</span><br><span class="line">tail - head 队列元素个数</span><br></pre></td></tr></table></figure>

<p>作者初步整理这些，用于自己日常复习，希望对大家有所帮助。</p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>十分钟搞懂C语言文件操作</title>
    <url>/2022/08/31/%E5%8D%81%E5%88%86%E9%92%9F%E6%90%9E%E6%87%82C%E8%AF%AD%E8%A8%80%E7%9A%84%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<font color=green><font size=5>
本文参考：浙大版《C语言程序设计（第4版）》
<br>

<ol>
<li><font color=blue>什么是文件操作</li>
<li><font color=blue>怎么实现基础文件操作</li>
<li><font color=blue>其它文件操作</li>
</ol>
<h1 id="一、什么是文件操作？"><a href="#一、什么是文件操作？" class="headerlink" title="一、什么是文件操作？"></a>一、什么是文件操作？</h1><p>直接来看不太方便理解，我们把它分开。</p>
<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><p>文件可以通过应用程序创建，如运行“记事本”程序，输入一些数据，然后保存并输入文件名，就会在磁盘中产生一个文本文件。<br><img src="https://img-blog.csdnimg.cn/b93c225bb94c43b392327b7cdcc2afd5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/5e41550760314605afe69b1841f46d46.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/49eec3e24e81491d95feb9df85c2bf1b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>刚刚我们创建的只是一种文件，叫做文本文件，还有好多其它类型的文件，每个文件都有&#x3D;&#x3D;自己的属性&#x3D;&#x3D;。</p>
<p><font size=5>文件的概念</p>
<p>在操作系统中，文件是指驻留在外部介质（如磁盘等）中的一个&#x3D;&#x3D;有序数据集&#x3D;&#x3D;<br>它可以是源文件、目标程序文件、可执行程序，也可以是待输入的原始数据，或是一组输出的结果。</p>
<p><font size=5>文件的分类</p>
<p>源文件、目标文件和可执行程序可称为&#x3D;&#x3D;程序文件&#x3D;&#x3D;，输入输出数据可称为&#x3D;&#x3D;数据文件&#x3D;&#x3D;。数据文件还可分为各种类型，如<font color=red>文本文件、图像文件、声音文件<font color=black>等。使用应用程序时，通常保存功能实现把数据从内存写入到文件，这就是所谓的（存盘），打开功能实现把磁盘文件的内容读入到内存。</p>
<p><font color=red>我们需要重点关注的类型就是数据文件<br>最直观的例子也就是记事本（可编辑的文本文档）</p>
<font size=4>
如果在用“记事本”程序编辑文件时不“保存”，数据就不会写入到磁盘，即若不保存而直接关闭了应用程序，数据就会消失。实际上，用“记事本”程序编辑文件时，输入的数据先是在内存中，保存后，数据才被写入到磁盘文件中。
这其实有点类似我们打游戏时的“存档”，不存档=刚刚的努力白费了


<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>我们需要了解的就是读和写两个操作，简单来说<br><font size=5><br>读：scanf做的事情<br>写：printf做的事情</p>
<p>当上升到文件层面时，“读”就不再是我们平时那样，从键盘读入，而是从数据文件中（最常见的就是记事本）读入；“写”也就是输出，同样地，不会像我们之前写程序那样，显示在屏幕上，而是写在数据文件中（最常见的也是记事本）<br><img src="https://img-blog.csdnimg.cn/e005c92cbebc4a8f96c8d7b69e0a20a6.png" alt="在这里插入图片描述"></p>
<h2 id="那为什么需要文件操作这种东西呢？"><a href="#那为什么需要文件操作这种东西呢？" class="headerlink" title="那为什么需要文件操作这种东西呢？"></a>那为什么需要文件操作这种东西呢？</h2><p>有的人想问，这不是找麻烦吗？我直接ctrl + c &#x2F; v，运行一下，结果显示在屏幕上，这不是很方便吗？整到记事本里面干什么。<br>其实，文件操作主要是运用于大量数据输入时，可能复制粘贴都得好几秒的那种，屏幕也放不下，那么这个时候用文件操作就很方便啦。</p>
<h1 id="二、怎么实现文件操作？"><a href="#二、怎么实现文件操作？" class="headerlink" title="二、怎么实现文件操作？"></a>二、怎么实现文件操作？</h1><p>直接上代码，用注释帮助理解。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">具体细节不表</span><br><span class="line">FILE *fp1, *fp2, *fp3;</span><br><span class="line">fp1 = <span class="built_in">fopen</span>(<span class="string">&quot;in.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);<span class="comment">//读</span></span><br><span class="line">fp2 = <span class="built_in">fopen</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);<span class="comment">//写</span></span><br><span class="line">/这里进行你的程序读写/</span><br><span class="line">（读入类型一）</span><br><span class="line"><span class="built_in">fscanf</span>(fp1, <span class="string">&quot;%d%lf&quot;</span>, &amp;n, &amp;ft);</span><br><span class="line"><span class="built_in">fprintf</span>(fp2, <span class="string">&quot;%d%f&quot;</span>, n, ft);</span><br><span class="line">（读入类型二）</span><br><span class="line">ch = <span class="built_in">fgetc</span>(fp1);</span><br><span class="line"><span class="built_in">fputc</span>(ch, fp2);</span><br><span class="line">（读入类型三）</span><br><span class="line"><span class="built_in">fgets</span>(s, len, fp1);</span><br><span class="line"><span class="built_in">fputs</span>(s, fp2);</span><br><span class="line">（关闭文件）</span><br><span class="line"><span class="built_in">fclose</span>(fp1);</span><br><span class="line"><span class="built_in">fclose</span>(fp2);</span><br><span class="line">fp3 = <span class="built_in">fopen</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);<span class="comment">//追加</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp3, <span class="string">&quot;需要补充在后面的东西****&quot;</span>);</span><br><span class="line">(关闭文件)</span><br><span class="line"><span class="built_in">fclost</span>(fp3);</span><br></pre></td></tr></table></figure>
<p>以上就是就是常用的用法，我们接下来从以下几个方面来读懂这个程序</p>
<ol>
<li>FILE</li>
<li>fopen和fclose</li>
<li>fscanf和fprintf</li>
<li>fgetc和fputc</li>
<li>fgets和fputs</li>
</ol>
<h2 id="1-FILE"><a href="#1-FILE" class="headerlink" title="1.FILE"></a>1.FILE</h2><p>简单来写，就是下面这样的（不必搞懂里面的细节）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">　　　　<span class="type">char</span> *_ptr; <span class="comment">//文件输入的下一个位置</span></span><br><span class="line">　　　　<span class="type">int</span> _cnt; <span class="comment">//当前缓冲区的相对位置</span></span><br><span class="line">　　　　<span class="type">char</span> *_base; <span class="comment">//指基础位置(即是文件的起始位置) </span></span><br><span class="line">　　　　<span class="type">int</span> _flag; <span class="comment">//文件标志</span></span><br><span class="line">　　　　<span class="type">int</span> _file; <span class="comment">//文件描述符id</span></span><br><span class="line">　　　　<span class="type">int</span> _charbuf; <span class="comment">//检查缓冲区状况,如果无缓冲区则不读取</span></span><br><span class="line">　　　　<span class="type">int</span> _bufsiz; <span class="comment">//文件缓冲区大小</span></span><br><span class="line">　　　　<span class="type">char</span> *_tmpfname; <span class="comment">//临时文件名</span></span><br><span class="line">  &#125;FILE;</span><br></pre></td></tr></table></figure>
<p>所以我们知道，FILE是一个结构体类型，我们定义时<br>FILE * fp；<br>其实是定义了一个结构体指针，我们对这个文件指针进行操作时，本质上就对文件进行了操作。</p>
<h2 id="2-fopen和fclose"><a href="#2-fopen和fclose" class="headerlink" title="2.fopen和fclose"></a>2.fopen和fclose</h2><p><font color=red>fopen（“文件名”，文件打开方式）；</p>
<p>例如：fp &#x3D; fopen(“in.txt”, “r”);</p>
<p>&#x3D;&#x3D;说明&#x3D;&#x3D;：(1)该函数有返回值。如果执行成功，函数将返回包含文件缓冲区等信息的FILE结构地址，赋给文件指针fp。否则，返回一个NULL(空值)的FILE指针。<br>(2)括号内包括两个参数：“文件名”和“文件打开方式”。两个参数都是字符串。“文件名”指出要对哪个具体文件进行操作，一般要指定文件的路径，如果不写出路径，则默认与应用程序的当前路径相同。<br><img src="https://img-blog.csdnimg.cn/4ed2d6cce36442e2908789da7513f5b6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_14,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<p>我们只讲解了前三种，大家可以借助于此继续理解其它的方式，我们在此就不多赘述。<br>不过重点还是放在&#x3D;&#x3D;文本文件&#x3D;&#x3D;（左边一栏），二进制文件用到的情况很少。<br><font color=red>fclose（文件指针）；.</p>
<p>例如：fclose(fp);</p>
<p>&#x3D;&#x3D;说明&#x3D;&#x3D;：fclose的作用就是关闭文件，至于为什么，我们在前面的介绍中也提到过，如果不及时关闭，可能会出现数据保存不成功的问题。<br>此外，你需要知道：<strong>C语言允许一个程序同时打开多个文件，但是不允许同一文件在关闭前被打开，也就是说，你这一次不关，很有可能导致以后再用这个文件时，就打不开。</strong></p>
<h2 id="3-fscanf和fprintf"><a href="#3-fscanf和fprintf" class="headerlink" title="3.fscanf和fprintf"></a>3.fscanf和fprintf</h2><p><font color=red>fscanf（文件指针，格式字符串，输入表)；<br>fprintf（文件指针，格式字符串，输出表)；</p>
<p>例如：<br>fscanf(fp1, “%d%lf”, &amp;n, &amp;ft);<br> fprintf(fp2, “%d%f”, n, ft);</p>
<p>&#x3D;&#x3D;说明&#x3D;&#x3D;：其实和scanf和printf差不多，多了一个参数是文件指针。</p>
<h2 id="4-fgetc和fputc"><a href="#4-fgetc和fputc" class="headerlink" title="4.fgetc和fputc"></a>4.fgetc和fputc</h2><font color=red>
fgetc(文件指针)；（返回一个字符）；<br>
fputc（字符，文件指针）；

<br>
例如：
<br>ch = fgetc(fp1);<br>fputc(ch, fp2);

<p>&#x3D;&#x3D;说明&#x3D;&#x3D;：其实和getchar()和putchar()差不多，多了一个参数是文件指针。</p>
<h2 id="5-fgets和fputs"><a href="#5-fgets和fputs" class="headerlink" title="5.fgets和fputs"></a>5.fgets和fputs</h2><font color=red>
fgets(字符串首地址，想要读入的字符串长度，文件指针)；<br>
fputs(字符串首地址， 文件指针)；

<br>
例如：<br>fgets(s, len, fp1);<br>
fputs(s, fp2);<br>

<p>&#x3D;&#x3D;说明&#x3D;&#x3D; :fgets（）比gets（）多了两个参数，一个是文件指针，一个是想要读入的长度，意思就是你想读进去几个字符存到字符串里，可以用变量来控制.<br>fputs()比puts()也就多了一个参数——文件指针。</p>
<h1 id="三、其它的文件操作（摘自教材）"><a href="#三、其它的文件操作（摘自教材）" class="headerlink" title="三、其它的文件操作（摘自教材）"></a>三、其它的文件操作（摘自教材）</h1><p><img src="https://img-blog.csdnimg.cn/a18c2e0d7fff4749a7c0e4b5593ad5c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/df72f633aa234a5db7b1611150e3f181.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h1 id="结语：虽然还有好多细节没有展示出来，不过那不影响学会使用文件操作，本文的作用就是帮助大家整理这一块的重要知识，学会用，进而形成自己的知识框架。如果要想深入理解，只靠这一篇博客还是不够的，有必要掌握好一些知识，比如说缓冲文件系统，指针等等。希望这篇博客能对大家有所帮助！"><a href="#结语：虽然还有好多细节没有展示出来，不过那不影响学会使用文件操作，本文的作用就是帮助大家整理这一块的重要知识，学会用，进而形成自己的知识框架。如果要想深入理解，只靠这一篇博客还是不够的，有必要掌握好一些知识，比如说缓冲文件系统，指针等等。希望这篇博客能对大家有所帮助！" class="headerlink" title="结语：虽然还有好多细节没有展示出来，不过那不影响学会使用文件操作，本文的作用就是帮助大家整理这一块的重要知识，学会用，进而形成自己的知识框架。如果要想深入理解，只靠这一篇博客还是不够的，有必要掌握好一些知识，比如说缓冲文件系统，指针等等。希望这篇博客能对大家有所帮助！"></a>结语：虽然还有好多细节没有展示出来，不过那不影响学会使用文件操作，本文的作用就是帮助大家整理这一块的重要知识，学会用，进而形成自己的知识框架。如果要想深入理解，只靠这一篇博客还是不够的，有必要掌握好一些知识，比如说缓冲文件系统，指针等等。希望这篇博客能对大家有所帮助！</h1>]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>复数变量的声明</title>
    <url>/2022/08/31/%E5%A4%8D%E6%95%B0%E5%8F%98%E9%87%8F%E7%9A%84%E5%A3%B0%E6%98%8E/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">头文件 <span class="meta">#include&lt;complex&gt;和using namespace std;</span></span><br><span class="line">complex &lt;<span class="built_in">double</span>&gt; x;</span><br><span class="line">实部：x.real();</span><br><span class="line">虚部：x.imag();</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>如何解决爬虫爬取的不是高清图</title>
    <url>/2022/08/31/%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E7%9A%84%E4%B8%8D%E6%98%AF%E9%AB%98%E6%B8%85%E5%9B%BE/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
<font color=red>
只要把url中的‘_s’删掉即可<br>
使用以下代码：

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url = url.replace(&#x27;_s&#x27;, &#x27;&#x27;)</span><br></pre></td></tr></table></figure>
<p><font color=red>快去试试吧！QWQ</p>
]]></content>
      <tags>
        <tag>tips</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>复杂度的渐进表示</title>
    <url>/2022/08/31/%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E6%B8%90%E8%BF%9B%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 复杂度的渐进表示
## 1. O（n）（常用）
$$T(n)=O(f(n))$$
这个式子表示存在常数$C>0$ $n_0 >0$使得当 $n>=n_0$ 时，$T(n)<=C*O(f(n))$
简单来说，$O(f(n))$ 表示的就是$f(n)$的复杂度中的某个上界
例如，$f(n)=(n*(n+1))/2$ 则$O(f(n))=n^2$（不唯一）
## 2. Ω（n）
$$T(n)=Ω(f(n))$$
这个式子表示存在常数$C>0$ $n_0 >0$使得当 $n>=n_0$ 时，$T(n)>=C*Ω(f(n))$
简单来说，$Ω(f(n))$ 表示的就是$f(n)$的复杂度的某个下界
例如，$f(n)=(n*(n+1))/2$ 则$Ω(f(n))=n^2/2$（不唯一）
## 3. Θ（n）
$$T(n)=Θ(f(n))$$
这个式子表示同时有以下两个式子成立$$T(n)=O(f(n))$$$$T(n)=Ω(f(n))$$
]]></content>
      <tags>
        <tag>tips</tag>
        <tag>course</tag>
      </tags>
  </entry>
  <entry>
    <title>异或的巧妙使用</title>
    <url>/2022/08/31/%E6%89%BE%E5%88%B0%E9%82%A3%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%88%E5%BC%82%E6%88%96%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 异或的巧妙使用
## 题目来源：偶然在网上看到这样一个题目，有很大的学习价值，于是就收录在此了
 [原文链接](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484505&idx=1&sn=4c1c056dd4852c3b4b1ead51c90a9b2d&chksm=fa0e6bd8cd79e2ce8188dcdd8843a5d071248906bfb8971c62d513dbd69b816acc191a78e4b2&scene=21#wechat_redirect)
 ## 题目描述

<blockquote>
<p> 给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p>
<p>说明： 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p>
<p>示例 1:<br>输入: [2,2,1]<br>输出: 1</p>
<p>示例 2:<br>输入: [4,1,2,1,2]<br>输出: 4</p>
</blockquote>
<br/>
<br/>
<br/>

<h3 id="看答案之前，独立思考一下哦！"><a href="#看答案之前，独立思考一下哦！" class="headerlink" title="看答案之前，独立思考一下哦！"></a>看答案之前，独立思考一下哦！</h3><br/>
<br/>
<br/>

<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h3><blockquote>
<p>时间复杂度不难想O（n），但是能不能用空间复杂度为O（1）的算法解决呢？<br>我们发现，题目中告诉我们，出现的次数只有两种情况：两次和一次。<br>因此我们来想两个相同的数异或结果是多少呢？是0<br>那0和一个非0的数异或呢？就是那个非0的数。<br>所以我们就得到了这样的算法：（⊕ ：异或）<br>将所有元素做异或运算，即a[1] ⊕  a[2] ⊕  a[3] ⊕ …⊕  a[n]，所得的结果就是那个只出现一次的数字。</p>
</blockquote>
<h4 id="是不是非常巧妙？？？"><a href="#是不是非常巧妙？？？" class="headerlink" title="是不是非常巧妙？？？"></a>是不是非常巧妙？？？</h4><h4 id="我们不难得到进一步的思考，只要是-x3D-x3D-偶数次-x3D-x3D-和-x3D-x3D-奇数次-x3D-x3D-的类似问题，都可以这样解决的。"><a href="#我们不难得到进一步的思考，只要是-x3D-x3D-偶数次-x3D-x3D-和-x3D-x3D-奇数次-x3D-x3D-的类似问题，都可以这样解决的。" class="headerlink" title="我们不难得到进一步的思考，只要是&#x3D;&#x3D;偶数次&#x3D;&#x3D;和&#x3D;&#x3D;奇数次&#x3D;&#x3D;的类似问题，都可以这样解决的。"></a>我们不难得到进一步的思考，只要是&#x3D;&#x3D;偶数次&#x3D;&#x3D;和&#x3D;&#x3D;奇数次&#x3D;&#x3D;的类似问题，都可以这样解决的。</h4><br/>
<br/>

<h2 id="题目的进阶"><a href="#题目的进阶" class="headerlink" title="题目的进阶"></a>题目的进阶</h2><blockquote>
<p>有一个 n 个元素的数组，除了两个数只出现一次外，其余元素都出现两次，让你找出这两个只出现一次的数分别是几，要求时间复杂度为 O(n) 且再开辟的内存空间固定(与 n 无关)。<br>示例 :<br>输入: [1,2,2,1,3,4]<br>输出: [3,4]</p>
</blockquote>
<h3 id="算法分析-1"><a href="#算法分析-1" class="headerlink" title="算法分析"></a>算法分析</h3><blockquote>
<p>我们发现不像刚刚那个题那么简单了，那我们要怎么解决呢？<br>我们本质上考虑一件事情，如果能让这两个数分开来和其它数进行异或<br>那各自的结果不就是我们所求的答案了吗？<br>那我们就来想一个把两个数分开来的方法<br>因为这两个数肯定是互不相同的，所以它们的异或结果一定不为0，我们选择其中一位出来<br>接下来对所有的数跑一次循环，与这一位异或结果为1的所有数进行异或，与这一位抑或结果为0的所有数进行异或，那结果就是我们想要的那两个数了</p>
</blockquote>
<h3 id="同样，这个算法也是非常巧妙，也同样可以扩展到所有的奇数和偶数次的情况。"><a href="#同样，这个算法也是非常巧妙，也同样可以扩展到所有的奇数和偶数次的情况。" class="headerlink" title="同样，这个算法也是非常巧妙，也同样可以扩展到所有的奇数和偶数次的情况。"></a>同样，这个算法也是非常巧妙，也同样可以扩展到所有的奇数和偶数次的情况。</h3><h2 id="其他应用"><a href="#其他应用" class="headerlink" title="其他应用"></a>其他应用</h2><p>比如两个数的交换（a和b）<br>如何不用另外的变量就实现呢？</p>
<blockquote>
<p>a &#x3D; a ^ b;<br>b &#x3D; a ^ b;<br>a &#x3D; a ^ b;</p>
</blockquote>
]]></content>
      <tags>
        <tag>algorithm</tag>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>整除光棍（20分）</title>
    <url>/2022/08/31/%E6%95%B4%E9%99%A4%E5%85%89%E6%A3%8D%20(20%20%E5%88%86)%EF%BC%88%E6%B5%8B%E8%AF%95%E7%82%B91%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 整除光棍 (20 分)
## 题目描述
这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数x，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字s，表示x乘以s是一个光棍，第二个数字n是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。

<p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除x为止。但难点在于，s可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</p>
<h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出一个不以5结尾的正奇数x（&lt;1000）。</p>
<h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出相应的最小的s和n，其间以1个空格分隔。</p>
<p><strong>输入样例</strong>：<br>31<br><strong>输出样例</strong>：<br>3584229390681 15</p>
<h2 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h2><p>本质上就是模拟除法运算，其实有点类似于高精度除法（<a href="https://blog.csdn.net/qq_34771124/article/details/121453990">高精度合集可以参考这里</a>）</p>
<h2 id="测试点"><a href="#测试点" class="headerlink" title="测试点"></a>测试点</h2><p>这个题我一开始卡在了测试点1，其实问题就出在“0”，一共有两种，一种是在商的最前面的0，不能输出，一种是在商中间的“0”，必须输出。<br>这里我为了解决这个问题，用了一个flag来标记是否已经输出一个非0值。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt, x, flag, n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x &lt; n)&#123;</span><br><span class="line">			<span class="keyword">if</span>(flag)	<span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);<span class="comment">//特判</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			flag = <span class="number">1</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, x / n);<span class="comment">//输出每一步的除法结果</span></span><br><span class="line">			x %= n;</span><br><span class="line">			<span class="keyword">if</span>(x == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		x = x * <span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line">		cnt ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, cnt);<span class="comment">//输出1的个数</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样自己亲手搭建一个四比特加法器</title>
    <url>/2022/08/31/%E6%80%8E%E6%A0%B7%E8%87%AA%E5%B7%B1%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%9B%9B%E6%AF%94%E7%89%B9%E5%8A%A0%E6%B3%95%E5%99%A8/</url>
    <content><![CDATA[<center>大一上《信息与电子工程导论》大作业</center>
<span id="more"></span>
# 怎样自己亲手搭建一个四比特加法器
## 一、前言
<font color=green>作为大一上学期第一个大作业，最终还是拖到了冬学期的第八周，从第七周的周六开始，一直到第八周周五上午课上展示，中间连续熬了好几天的夜，另外，白天凡是有时间都用在研究它了，最终大约是用了30个小时，完成了这个四比特加法器的“从零到一”。
最终，小组得分92，个人分数100（贡献比35%），也不枉自己投入的心血
![在这里插入图片描述](https://img-blog.csdnimg.cn/a5ced433f0e44b12adf4f1f6b04bc4b7.png)

<h2 id="二、器材"><a href="#二、器材" class="headerlink" title="二、器材"></a>二、器材</h2><p>电阻 1 包（10kΩ×100，1kΩ×50）<br>三极管 1 包（9013×100，LED×6）<br>跳线 3 短 1.5 长<br>电源 1 个<br>USB 线 1 条<br>面包板 1 块<br>万用表 1 只<br><img src="https://img-blog.csdnimg.cn/8ff0c2bcc7014108866f0512eae094b5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="三、步骤"><a href="#三、步骤" class="headerlink" title="三、步骤"></a>三、步骤</h2><font color = green>
1) 利用三极管搭建逻辑门（与或非）并进行仿真测试；<br>
2) 利用逻辑门搭建一位半加器并进行仿真测试；<br>
3) 在一位半加器的基础上搭建一位全加器并进行仿真测试；<br>
4) 利用一位全加器进行适当地级联，搭建 4-bit 加法器，并进行仿真测试；<br>
5) 进行实物搭建并测试；

<h2 id="四、实现"><a href="#四、实现" class="headerlink" title="四、实现"></a>四、实现</h2><h3 id="1-简单逻辑门的搭建"><a href="#1-简单逻辑门的搭建" class="headerlink" title="1.简单逻辑门的搭建"></a>1.简单逻辑门的搭建</h3><p><img src="https://img-blog.csdnimg.cn/9ae8f673639d43ec887013875bcae933.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/79e28736999644fb9e1895daa5b2cf14.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/83952eb48f1b4535bc6c8eb6eac63e93.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e72f8d73792541ec99c2643613ddb962.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h3 id="2-半加器的搭建"><a href="#2-半加器的搭建" class="headerlink" title="2.半加器的搭建"></a>2.半加器的搭建</h3><p><img src="https://img-blog.csdnimg.cn/42005dcedeb7493f9cd11dd05dc3c687.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="最初选择"><br>本质上多了的就是异或门，如何搭建异或门呢？<br>这中间经历了好几代的迭代<br><font color=red>第一代<br><img src="https://img-blog.csdnimg.cn/ad48b3cbb77f4c5e887f3e46d5d0422b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=black>我们清点一下三极管的数目，发现总共用到七个，而且有很大的损失，必须得改进<br><font color=red>第二代<br><font color=black>我们考虑对与非门进行改进(节省一个三极管)<br><img src="https://img-blog.csdnimg.cn/a5b189af6a6d470bbc3635aba681c498.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>仿真结果可知，这样的与非门效果很好，同样的思路我们得到了或非门的改进版，将来在进位中可能会用到。<br><img src="https://img-blog.csdnimg.cn/0c9549156c134c639962ab92d11eb33f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>接下来我们搭建半加器<br><font color=black>考虑到进位的与门有损失的问题，我们搭建时，进位采用了无损与门<br><font color=blac>无损与门与无损或门<br><img src="https://img-blog.csdnimg.cn/43e631ec8a154e67ab35877a54515ba3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>然后我们得到了半加器的电路</p>
<p><img src="https://img-blog.csdnimg.cn/9cc5acb2b24240829b37f6c2edfbd4b6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>总共是用到了<strong>七个</strong>三极管，能够完成计算本位（上面的电压表）和进位（下面的电压表）<br><font color=red>考虑到整个电路的简洁性（三极管越多，电路搭建难度越大），我们对半加器进行进一步的改进<br>本位：或非门结果和与门结果进行或非<br>进位：与门结果<br><img src="https://img-blog.csdnimg.cn/175c804bfe60486db8c2f6c300da06f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现只用到了四个三级管，这也是我们最终加法器里面用的半加器方案。</p>
<h3 id="3-全加器的搭建"><a href="#3-全加器的搭建" class="headerlink" title="3.全加器的搭建"></a>3.全加器的搭建</h3><p>在上面四个三极管的基础上，我们进行相应的改进，得到最终的全加器。<br><font color=blac>本位：两次半加器的本位计算结果（A和B的本位计算结果再与C进位进行本位计算）<br>进位：无损与门（考虑后面的级联问题——损失可能导致结果错误）<br><img src="https://img-blog.csdnimg.cn/2a35aa5463bf45b38a3b9b45873ad1c8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>清点一下，我们发现总共用到了10个三极管，同样也是我们的最终版本。</p>
<h3 id="4-半加器与全加器级联实现两位加法器"><a href="#4-半加器与全加器级联实现两位加法器" class="headerlink" title="4.半加器与全加器级联实现两位加法器"></a>4.半加器与全加器级联实现两位加法器</h3><p>其实就是把半加器的进位结果作为全加器的C输入即可。<br><img src="https://img-blog.csdnimg.cn/d6a4361543094fd0a698a06832d622cf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>仿真结果<br><img src="https://img-blog.csdnimg.cn/1961b1e2920a4c8aad7dadb189706bce.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/6db05306d96d4dfda4cb4f62ecb4078e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/338d1beef189445cbfdfe70624cd1e07.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>我们发现结果完全正确！<br>两位加法器完成！</p>
<h3 id="5-四位加法器的搭建"><a href="#5-四位加法器的搭建" class="headerlink" title="5.四位加法器的搭建"></a>5.四位加法器的搭建</h3><p>其实就是半加器+三个全加器，由于我们之前考虑到了进位有损的问题，所以这里搭建起来也是非常的容易。<br><img src="https://img-blog.csdnimg.cn/e88db013db6e406db97e01bc7c2b8c4c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=red>经仿真，我们发现结果依旧完全正确！<br>至此，我们就完成了四位加法器的搭建</p>
<h2 id="五、实物图"><a href="#五、实物图" class="headerlink" title="五、实物图"></a>五、实物图</h2><font color=orange>
1. 与门、或门和非门

<p><img src="https://img-blog.csdnimg.cn/39e8f333521742149d41dc44fb903f04.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>2. 异或门<br><img src="https://img-blog.csdnimg.cn/94fd5b21a7d34ca5be701dc012e9a65e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>3. 与非门<br><img src="https://img-blog.csdnimg.cn/89da0c1d181f41b494347cf098572afc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>4.无损与门<br><img src="https://img-blog.csdnimg.cn/16e220237fe8411c88bf0ccab2763702.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>4. 半加器<br><img src="https://img-blog.csdnimg.cn/44c4042a80b542c29cde2ca7ece8478a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>5. 全加器<br><img src="https://img-blog.csdnimg.cn/7f15dc4765c74f4d9ac836e071a46a36.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>6. 两位加法器<br><img src="https://img-blog.csdnimg.cn/c325bbdbbc024b2394ddae72dca67a9a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><font color=orange><br>7.四位加法器<br><img src="https://img-blog.csdnimg.cn/372d7fa9c2714b68ac36e00bbd4d2e4f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
<h2 id="六、总结与思考"><a href="#六、总结与思考" class="headerlink" title="六、总结与思考"></a>六、总结与思考</h2><font color=pink>
 1. 完成一个大作业，需要小组成员合理的分工，这对工作的完成十分重要。<br>
 2. 建议遵循先仿真后搭建的思路，如果反过来，完成难度大（进位损失须提前考虑）<br>
 3. 电阻的使用：排电阻用剪刀在红线位置（如下图）剪下，如果拔下的话，管脚会留有胶，易造成接触不良

<blockquote>
<p><img src="https://img-blog.csdnimg.cn/a00ba0908aee438885aefa44af4111c0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="这里是引用"></p>
</blockquote>
<font color=pink>
4.搭建电路时，可以考虑把一些电阻、三极管的金属段同时插在面包板的同一个孔内，防止因松动导致接触不良。<br>
5.完成这项作业，也算是帮助我对计算机底层原理有了新的认识，收获满满！

<h1 id="希望这篇文章对你有所帮助，奥里给QWQ！"><a href="#希望这篇文章对你有所帮助，奥里给QWQ！" class="headerlink" title="希望这篇文章对你有所帮助，奥里给QWQ！"></a>希望这篇文章对你有所帮助，奥里给QWQ！</h1>]]></content>
      <tags>
        <tag>tips</tag>
        <tag>hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>最长子序列的长度问题</title>
    <url>/2022/08/31/%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 最长子序列长度问题（两种方法）
## 【题目描述】：
    Bob 吃完烤串之后又充满了精力，现在 Alice 给了他一个难题：
    有一个长度为 n 的有序序列a[i],
    但是 Alice 修改了其中某 k个位置的值，得到新序列 b[i].
    Bob 拿到序列 b 之后，希望可以改不超过 k 个位置的值
    使得 b 序列也满足有序
    这个问题对他来说太难了，他想寻求你的帮助你需要告诉他如何修改使得满足要求。

<h2 id="【输入格式】："><a href="#【输入格式】：" class="headerlink" title="【输入格式】："></a>【输入格式】：</h2><pre><code>第一行两个整数 n, k，意义如上所述。（0&lt;=n, k&lt;=5000）
接下来一行 n 个整数，第 i个整数表示b[i].
</code></pre>
<h2 id="【输出格式】："><a href="#【输出格式】：" class="headerlink" title="【输出格式】："></a>【输出格式】：</h2><pre><code>第一行一个整数 t，表示你要修改的次数。需要满足t&lt;=k;
接下来 t行，第 i 行两个整数 
如果有多组解符合要求，输出任意一组即可。你不必最小化 t，只要满足条件即可。
</code></pre>
<h2 id="【输入输出样例】："><a href="#【输入输出样例】：" class="headerlink" title="【输入输出样例】："></a>【输入输出样例】：</h2><pre><code>输入样例#1： 
5 1
1 2 7 4 5
输出样例#1： 
1
3 3
输入样例#2： 
5 2
1 2 3 4 5
输出样例#2： 
0
输入样例#3：
5 5
5 4 3 2 1
输出样例#3： 
4
1 1
2 1
3 1
4 1
输入样例#4： 
5 0
1 2 3 4 5
输出样例#4：
0
</code></pre>
<h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p>实质上是一个最长子序列问题，如果找到最长子序列长度LIS，那么需要进行更改次数为 n-LIS，每次跑循环找到不在LIS中的数据改为前一个或后一个LIS中的数据即可。</p>
<h2 id="【参考代码】："><a href="#【参考代码】：" class="headerlink" title="【参考代码】："></a>【参考代码】：</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">5005</span> ;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[MAXN],SK[MAXN];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span>  n, k;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;k; </span><br><span class="line">	<span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ; ++i)</span><br><span class="line">		cin&gt;&gt;a[i]; </span><br><span class="line">	<span class="type">int</span> len = <span class="number">1</span>;</span><br><span class="line">	SK[len] = a[<span class="number">1</span>] ;</span><br><span class="line">	<span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; ++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>( a[i] &gt; SK[len])</span><br><span class="line">			SK[++len] = a[i];</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">int</span> j = <span class="built_in">lower_bound</span>(SK+<span class="number">1</span>,SK+len+<span class="number">1</span>,a[i])-SK;</span><br><span class="line">			SK[j] = a[i];</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">	cout&lt;&lt; n-len &lt;&lt;endl;</span><br><span class="line">	<span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>( a[i] == SK[cnt] ) cnt++;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			cout&lt;&lt; i &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt; SK[cnt<span class="number">-1</span>] &lt;&lt;endl;</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p><strong>———————————————————————————————————————</strong></p>
<p><strong>复杂度为O（n^2）</strong><br>朴素算法， 代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span><span class="comment">//或者用bits万能库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>  std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX=<span class="number">1001</span>;</span><br><span class="line"><span class="type">int</span> a[MAX];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lis</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> num[MAX];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++)&#123;</span><br><span class="line">    num[i] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[j] &lt; a[i] &amp;&amp; num[j] + <span class="number">1</span> &gt; num[i])</span><br><span class="line">        <span class="comment">//每次都在这个元素前进行循环，看是否能替换当前最大子序列长度</span></span><br><span class="line">               num[i] = num[j] + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="type">int</span> maxx = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; x; i++)</span><br><span class="line">	    <span class="keyword">if</span>(maxx &lt; num[i])</span><br><span class="line">	        maxx = num[i];</span><br><span class="line">	<span class="keyword">return</span> maxx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++)</span><br><span class="line">    	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">lis</span>(n));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.<strong>复杂度为O (nlogn)</strong><br>    复杂度降低主要是利用了二分的思想，代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span><span class="comment">//或者用bits万能库</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">200001</span>;</span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"><span class="type">int</span> d[MAXN];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	d[<span class="number">1</span>] = a[<span class="number">1</span>];</span><br><span class="line">	<span class="type">int</span> len=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">    	<span class="keyword">if</span>(a[i]&gt;d[len])</span><br><span class="line">          d[++len]=a[i];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j=std::<span class="built_in">lower_bound</span>(d+<span class="number">1</span>,d+len+<span class="number">1</span>,a[i])-d;</span><br><span class="line"><span class="comment">//lower_bound()作用：找到在某有序序列中大于等于x的第一个数的位置，返回该位置的地址；</span></span><br><span class="line"><span class="comment">//upper_bound()作用: 找到在某有序序列中大于x的第一个数的位置，返回该位置的地址；</span></span><br><span class="line">        d[j]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);    </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="希望这些能够对大家有帮助…………"><a href="#希望这些能够对大家有帮助…………" class="headerlink" title="希望这些能够对大家有帮助…………"></a>希望这些能够对大家有帮助…………</h2>]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>求一个数组的所有子集</title>
    <url>/2022/08/31/%E6%B1%82%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E7%9A%84%E5%AD%90%E9%9B%86%EF%BC%88%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 求一个数组的所有子集（经典面试题）
## 偶然在网上看到这样一个题，觉得很有意思，总结下来它的算法
## 题目描述
现在给定一个包含N个数的集合，请你输出它的所有子集。
注意：题目保证 0 <= N <= 1000000
## 输入样例
3
1 3 5
## 输出样例（前后顺序不固定）
16
(空行)
1
3
5
1 3
1 5
3 5
1 3 5
## 得到的思考
如果我们考虑一个O（N^2）的算法，肯定是过不去的，所以我们来想想其他办法
我们高中时学过：一个含有n个元素的集合的子集个数为$2^n$，因此我们联系二进制
从$000-111$一共八个数，分别是：
$000,001,010,011,100,101,110,111$
所以我们就明白了：用1表示这个元素要取，0表示不取，这样我们就完成了输出。
## 伪代码
让$i$从$0 - >n-1$跑一趟循环，配合>>和&1把最低二进制位取出来，然后判断对应的元素是否输出就好。
]]></content>
      <tags>
        <tag>algorithm</tag>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>结构体类型的三种声明方式</title>
    <url>/2022/08/31/%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%89%E7%A7%8D%E5%A3%B0%E6%98%8E%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>

<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>有类型名称且声明的结构体变量直接跟在后面。<br>如果不直接跟在后面声明，接下来就无法声明结构体变量。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="type">int</span> y;</span><br><span class="line">&#125;a;</span><br></pre></td></tr></table></figure>


<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>有类型名称，声明的结构体变量不直接跟在后面。<br>弥补了方法一的缺陷，可以不直接在结构体定义时声明。<br>当然，也可以直接跟在后面声明。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="type">int</span> y;</span><br><span class="line">&#125;b;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> a;</span><br></pre></td></tr></table></figure>

<p><font color=red>注意：上述代码在C或C++编译环境下都不报错。但是如果写成下面这种形式，在C编译环境下会报错,而在C++下不报错。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line">node a;</span><br></pre></td></tr></table></figure>
<h2 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h2><p>自定义变量名称（常用于复杂名称的简化）<br>进阶用法，建议掌握。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">	<span class="type">int</span> x;</span><br><span class="line">	<span class="type">int</span> y;</span><br><span class="line">&#125;node;</span><br><span class="line">node a;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>欧拉筛法及其改进方法（素数的判断）</title>
    <url>/2022/08/31/%E6%AC%A7%E6%8B%89%E7%AD%9B%E6%B3%95%E5%8F%8A%E5%85%B6%E6%94%B9%E8%BF%9B%E6%96%B9%E6%B3%95%EF%BC%88%E7%B4%A0%E6%95%B0%E7%9A%84%E5%88%A4%E6%96%AD%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 素数的筛法（欧拉筛法）及其改进

<h2 id="欧拉筛法的算法分析："><a href="#欧拉筛法的算法分析：" class="headerlink" title="欧拉筛法的算法分析："></a>欧拉筛法的算法分析：</h2><blockquote>
<pre><code>1.使用一个prime[N]存下当前素数 
2.使用一个on[N]数组标志i 是不是素数。
3.每一个素数都将其当前的i倍数标记为非素数（凡是有因子的数一定不是素数）。
</code></pre>
</blockquote>
<h2 id="处理函数"><a href="#处理函数" class="headerlink" title="处理函数"></a>处理函数</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">	on[<span class="number">0</span>] = on[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">		<span class="comment">//0和1不是素数</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!on[i])	prime[++cnt] = i;</span><br><span class="line">				素数存入栈中</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= n; ++j)&#123;</span><br><span class="line">			on[i * prime[j]] = <span class="number">1</span>;</span><br><span class="line">				标记为不是素数</span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">	此处是精髓，如果当前的i能够被整除，那么这个数之前一定已经被处理过了，</span><br><span class="line">		（欧拉筛法的关键）</span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="欧拉筛法的关键"><a href="#欧拉筛法的关键" class="headerlink" title="欧拉筛法的关键"></a>欧拉筛法的关键</h2><blockquote>
<p>i % prime[j] &#x3D;&#x3D; 0 这一步到底有什么用？<br> 答：保证每个数只被它的最小质因子筛一次。（比较难以理解）<br> 我们假设 <strong>i % prime[j] &#x3D; 0</strong>成立，那么设<strong>k &#x3D; i &#x2F; prime[j]</strong> 则prime[j]*k &#x3D; i成立<br>那么对于下一个需要筛选的 i * prime[j+1]&#x3D;prime[j]<em>k</em>prime[j+1]<br>我们令m &#x3D; k *prime[j+1]&gt;  i<br>因此当i增大时，k * prime[j+1]肯定会被筛出来的，因此我们这一次就不用处理了<br> 进而我们就保证了每一个非素数只被它的最小质因子筛选一次。</p>
</blockquote>
<h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a><strong>例题</strong></h1><h2 id="【题目描述】"><a href="#【题目描述】" class="headerlink" title="【题目描述】"></a>【题目描述】</h2><blockquote>
<p>求1,2,⋯,N 中素数的个数。</p>
</blockquote>
<h2 id="【输入输出格式】"><a href="#【输入输出格式】" class="headerlink" title="【输入输出格式】"></a>【输入输出格式】</h2><blockquote>
<p>【输入】：	<br>一个整数N。<br>【输出】：<br>1 个整数，表示素数的个数。<br><strong>注意</strong>:<br>• 对于40% 的数据，1≤ N ≤10 ^6^<br>• 对于80% 的数据，1≤ N ≤10 ^7^<br>• 对于100% 的数据	1≤ N ≤10 ^8^</p>
</blockquote>
<h2 id="【算法分析】"><a href="#【算法分析】" class="headerlink" title="【算法分析】"></a>【算法分析】</h2><p>这么大的数据如果真的要让普通判断方法，那么一定会超时(O（n^2^）).那么就需要一个黑科技来解决——<strong>欧拉筛法</strong>。</p>
<h2 id="【代码实现】"><a href="#【代码实现】" class="headerlink" title="【代码实现】"></a>【代码实现】</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100000100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> cnt, n;</span><br><span class="line"><span class="type">int</span> prime[N];</span><br><span class="line"><span class="type">bool</span> on[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	on[<span class="number">0</span>] = on[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">		<span class="comment">//0和1不是素数</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!on[i])	prime[++cnt] = i;</span><br><span class="line">			<span class="comment">//素数存入栈中</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * prime[j] &lt;= n; ++j)&#123;</span><br><span class="line">			on[i * prime[j]] = <span class="number">1</span>;</span><br><span class="line">				<span class="comment">//标记为不是素数</span></span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">				<span class="comment">//此处是精髓，如果当前的i能够被整除，那么这个数之前一定已经被处理过了，然后直接跳过。（欧拉筛法的关键）</span></span><br><span class="line">		&#125;		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> tot = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">  	<span class="keyword">if</span>(!on[i]) tot++;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, tot);  <span class="comment">//计算数量</span></span><br><span class="line">							<span class="comment">//不过作者此处还有一个思路，就是由于存进去时候是有序的，所以使用一下low_bound()[上一篇博客有使用方法]，或者二分查找也可以的。</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="上述代码中on数组和prime数组均为准确的"><a href="#上述代码中on数组和prime数组均为准确的" class="headerlink" title="上述代码中on数组和prime数组均为准确的"></a>上述代码中on数组和prime数组均为准确的</h3><h3 id="on-x3D-x3D-1-表示不是素数-on-x3D-x3D-0表示是素数"><a href="#on-x3D-x3D-1-表示不是素数-on-x3D-x3D-0表示是素数" class="headerlink" title="(on[] &#x3D;&#x3D; 1 表示不是素数 on[] &#x3D;&#x3D;0表示是素数)"></a>(on[] &#x3D;&#x3D; 1 表示不是素数 on[] &#x3D;&#x3D;0表示是素数)</h3><p><strong>————————————————————————————————</strong></p>
<h1 id="2021年后续-欧拉筛法的优化-O-n-x2F-2"><a href="#2021年后续-欧拉筛法的优化-O-n-x2F-2" class="headerlink" title="2021年后续(欧拉筛法的优化 O(n &#x2F; 2))"></a>2021年后续(欧拉筛法的优化 O(n &#x2F; 2))</h1><p>此处只给出处理的函数代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ct, prime[<span class="number">100010</span>];</span><br><span class="line"><span class="type">int</span> on[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">	<span class="built_in">memset</span>(on, <span class="number">1</span>, <span class="built_in">sizeof</span>(on));</span><br><span class="line">	on[<span class="number">0</span>] = on[<span class="number">1</span>] = on[<span class="number">4</span>] = <span class="number">0</span>;</span><br><span class="line">	on[<span class="number">2</span>] = <span class="number">1</span>; prime[++ ct] = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span>; i &lt;= n; i += <span class="number">2</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(on[i])	prime[++ ct] = i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;=ct &amp;&amp; prime[j] * i &lt;= n; ++ j)&#123;</span><br><span class="line">			on[prime[j] * i] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(i % prime[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">	<span class="built_in">pre</span>(n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ct);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="要注意优化后的代码中on数组对于偶数的标记不准确-但是prime数组依旧准确。"><a href="#要注意优化后的代码中on数组对于偶数的标记不准确-但是prime数组依旧准确。" class="headerlink" title="要注意优化后的代码中on数组对于偶数的标记不准确,但是prime数组依旧准确。"></a>要注意优化后的代码中on数组对于偶数的标记不准确,但是prime数组依旧准确。</h1><p>&#x3D;&#x3D;(所有的素数中只有2一个偶数)&#x3D;&#x3D;</p>
]]></content>
      <tags>
        <tag>素数筛</tag>
      </tags>
  </entry>
  <entry>
    <title>获取Xpath的两种方法</title>
    <url>/2022/08/31/%E8%8E%B7%E5%8F%96Xpath%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 方法一：利用chrome插件Xpath Helper
打开一个网页，按下ctrl+shift+x显示插件
![在这里插入图片描述](https://img-blog.csdnimg.cn/934cd2dc164c470b80ecc4621bcb1d2e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16)
按F12在“检查”中找到特殊的标签，并在QUERY内输入想要验证的标签
![在这里插入图片描述](https://img-blog.csdnimg.cn/bab147ace3fc4724bf6b11d8747873f3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16)
当result显示为1时，即表明该标签唯一确定你想要的元素
# 方法二：直接在“检查”页中定位
按F12打开检查页，然后点击右上角定位键
![在这里插入图片描述](https://img-blog.csdnimg.cn/6f781872a2c74967bb2c9f864462a6ad.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16)
之后在网页中找到你想要的元素并点击
![在这里插入图片描述](https://img-blog.csdnimg.cn/92a0f34c2a6749629d4fb524a67667ae.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16)
然后对高亮部分按下鼠标右键，找到copy，然后选择xpath即可
![在这里插入图片描述](https://img-blog.csdnimg.cn/775413910728422281b85bbe9642f8b9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16)



]]></content>
      <tags>
        <tag>tips</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>自下而上与自上而下的归并排序</title>
    <url>/2022/08/31/%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E4%B8%8E%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E7%9A%84%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
## 自下而上与自上而下的归并排序
### 问题来源：我一开始也没有注意到这一点，直到我做了[这个题](https://pintia.cn/problem-sets/994805260223102976/problems/994805286714327040)
这个题目中所描述的归并排序是这样的：![在这里插入图片描述](https://img-blog.csdnimg.cn/536ff93a94144c81ab71485d24b138d5.png)
也就是说，对于十个元素的情况，比如
**3 1 2 8 7 5 9 4 6 0**
相邻元素两两结合后，就成了
（3 1）（2 8）（7 5）（9 4）（6 0）
**一次排序**后为
（1 3）（2 8）（5 7）（4 9）（0 6）
**二次排序**后为
（1 2 3 8）（4 5 7 9）（0 6）
**三次排序**后为
（1 2 3 4 5 7 8 9）（0 6）
**四次排序**后为
（0 1 2 3 4 5 6 7 8 9）
## 以上为“自下而上”的归并排序
## 但是！！！
## 如果为“自上而下”的归并排序
(3 1 2 8 7 5 9 4 6 0)
第一次递归下去
（3 1 2 8 7）（5 9 4 6 0）
第二次递归下去
（3 1 2）（8 7）（5 9 4）（6 0）
第三次递归下去
（3 1）（2）（8 ）（7）（5 9）（4）（6）（0）
第四次递归下去
（3）（1）（2）（8）（7）（5）（9）（4）（6）（0）
第一次回溯（**一次排序**后为）
（1 3）（2）（7 8）（5 9）（4）（0 6）
第二次回溯（**二次排序**后为）
（1 2 3）（7 8）（4 5 9）（0 6）
第三次回溯（**三次排序**后为）
（1 2 3 7 8）（0 4 5 6 9）
第四次回溯（**四次排序**后为）
（0 1 2 3 4 5 6 7 8 9）
## 我们不难发现，两次过程中的数组排列情况是不同的
## 因此，在归并排序方面，要认识到自上而下与自下而上的区别
**---------------------------------------------------------------------------------------------------------------------**

<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge_sort_downtoup</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = <span class="number">2</span>;<span class="comment">//最小分割单元 </span></span><br><span class="line">	<span class="keyword">while</span>(t &lt;= n)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i += t)&#123;</span><br><span class="line">			<span class="built_in">sort</span>(a + i, a + <span class="built_in">min</span>(i + t, n + <span class="number">1</span>));<span class="comment">//注意sort的使用 </span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">/*这里可以进行一些操作 */</span> </span><br><span class="line">		t *= <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge_sort_uptodown</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l == r) <span class="keyword">return</span> ;</span><br><span class="line">	<span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">Merge_sort_uptodown</span>(l, mid);</span><br><span class="line">	<span class="built_in">Merge_sort_uptodown</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">	<span class="type">int</span> i = l, j = mid + <span class="number">1</span>, t = l;</span><br><span class="line">	<span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] &lt;= a[j])&#123;</span><br><span class="line">			k[t] = a[i];</span><br><span class="line">			t ++;</span><br><span class="line">			i ++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			k[t] = a[j];</span><br><span class="line">			t ++;</span><br><span class="line">			j ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(i &lt;= mid)&#123;</span><br><span class="line">		k[t] = a[i];</span><br><span class="line">		t ++;</span><br><span class="line">		i ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(j &lt;= r)&#123;</span><br><span class="line">		k[t] = a[j];</span><br><span class="line">		t ++;</span><br><span class="line">		j ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = l; i &lt;= r; ++ i)</span><br><span class="line">		a[i] = k[i];</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>C</tag>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title>逻辑运算符的性能优化（短路问题）</title>
    <url>/2022/08/31/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%EF%BC%88%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 逻辑运算符的性能优化（短路问题）
<font color=orange>在Python中存在这样的规则
我们举个例子

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = <span class="number">35</span></span><br><span class="line">a &gt; <span class="number">32</span> <span class="keyword">and</span> <span class="built_in">print</span>(<span class="string">&#x27;我被运行了&#x27;</span>)</span><br><span class="line"></span><br><span class="line">输出结果：我被运行了</span><br><span class="line"></span><br><span class="line">a = <span class="number">35</span></span><br><span class="line">a &gt; <span class="number">38</span> <span class="keyword">and</span> <span class="built_in">print</span>(<span class="string">&#x27;我被运行了&#x27;</span>)</span><br><span class="line"></span><br><span class="line">无输出结果</span><br><span class="line"></span><br><span class="line">a = <span class="number">35</span></span><br><span class="line">a &gt; <span class="number">32</span> <span class="keyword">or</span> <span class="built_in">print</span>(<span class="string">&#x27;我被运行了&#x27;</span>)</span><br><span class="line"></span><br><span class="line">无输出结果</span><br><span class="line"></span><br><span class="line">a = <span class="number">35</span></span><br><span class="line">a &gt; <span class="number">38</span> <span class="keyword">or</span> <span class="built_in">print</span>(<span class="string">&#x27;我被运行了&#x27;</span>)</span><br><span class="line"></span><br><span class="line">输出结果：我被运行了</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<font color=red>
从上面的代码和它的输出结果来看，Python中存在这样的规则：<br>
a and b 如果a为false，则b直接跳过<br>
a or b 如果a为true，则b直接跳过<br>

<font color=green>
其实，C语言中也有类似的规则，本质上是为了提高代码的性能。<br>
希望这篇文章能给你带来帮助！
]]></content>
      <tags>
        <tag>CS</tag>
      </tags>
  </entry>
  <entry>
    <title>（对于换行符）gets和fgets的区别，puts和fputs的区别</title>
    <url>/2022/08/31/%EF%BC%88%E5%AF%B9%E4%BA%8E%E6%8D%A2%E8%A1%8C%E7%AC%A6%EF%BC%89gets%E5%92%8Cfgets%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%8Cputs%E5%92%8Cfputs%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
## 转载两篇博客，说的很清楚。
 [关于fets与gets](https://blog.csdn.net/qq_45849888/article/details/104562038)
 [关于fputs与puts](https://blog.csdn.net/qq_21835111/article/details/84445302)
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>高精度模板合集与优化</title>
    <url>/2022/08/31/%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%A8%A1%E6%9D%BF%E5%90%88%E9%9B%86%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E5%85%A8%EF%BC%89/</url>
    <content><![CDATA[<center></center>
<span id="more"></span>
# 高精度模板合集与优化（无注释版）
我把所有的高精度模板总结了一下，收录在这里，希望对大家有帮助。
## 目录
**1.高精度加法
2.高精度减法
3.高精度乘法
4.高精度除法
（1）高精度除以低精度
（2）高精度除以高精度**
**5.高精度算法的优化思路**

<h2 id="一、高精度加法"><a href="#一、高精度加法" class="headerlink" title="一、高精度加法"></a>一、高精度加法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000000</span></span><br><span class="line"><span class="type">int</span> t1[N], t2[N], c[N];</span><br><span class="line"><span class="type">char</span> a[N], b[N];<span class="comment">// 两个加数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;<span class="comment">//输入两个加数 </span></span><br><span class="line">	<span class="type">int</span> lena = <span class="built_in">strlen</span>(a);</span><br><span class="line">	<span class="type">int</span> lenb = <span class="built_in">strlen</span>(b);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i) t1[lena - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;<span class="comment">//存下两个加数 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i) t2[lenb - i] = b[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> len = lena &gt; lenb ? lena : lenb;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= len; ++ i)&#123;<span class="comment">//从低位到高位的处理 </span></span><br><span class="line">		c[i] += t1[i] + t2[i];</span><br><span class="line">		<span class="keyword">if</span>(c[i] &gt;= <span class="number">10</span>)&#123;</span><br><span class="line">			c[i] %= <span class="number">10</span>;</span><br><span class="line">			c[i + <span class="number">1</span>] ++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">if</span>(c[len + <span class="number">1</span>]) len ++;<span class="comment">//最高位的判断 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二、高精度减法"><a href="#二、高精度减法" class="headerlink" title="二、高精度减法"></a>二、高精度减法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000000</span></span><br><span class="line"><span class="type">int</span> t1[N], t2[N], c[N];</span><br><span class="line"><span class="type">char</span> a[N], b[N];<span class="comment">// 两个数</span></span><br><span class="line"><span class="type">char</span> ch[N];<span class="comment">//中间字符串</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;<span class="comment">//输入数 </span></span><br><span class="line">	<span class="type">int</span> lena = <span class="built_in">strlen</span>(a);</span><br><span class="line">	<span class="type">int</span> lenb = <span class="built_in">strlen</span>(b);</span><br><span class="line">	<span class="keyword">if</span>(lena &lt; lenb || (lena == lenb &amp;&amp; <span class="built_in">strcmp</span>(a, b) &lt; <span class="number">0</span>))&#123;</span><br><span class="line">		<span class="built_in">strcpy</span>(ch, a);</span><br><span class="line">		<span class="built_in">strcpy</span>(a, b);</span><br><span class="line">		<span class="built_in">strcpy</span>(b, ch);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">	&#125;<span class="comment">//如果前一个数小于后一个数，则交换二者 </span></span><br><span class="line">	lena = <span class="built_in">strlen</span>(a); </span><br><span class="line">	lenb = <span class="built_in">strlen</span>(b);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i) t1[lena - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;<span class="comment">//存下两个数 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i) t2[lenb - i] = b[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> len = lena &gt; lenb ? lena : lenb;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= len; ++ i)&#123;<span class="comment">//从低位到高位的处理 </span></span><br><span class="line">		c[i] += t1[i] - t2[i];</span><br><span class="line">		<span class="keyword">if</span>(c[i] &lt; <span class="number">0</span>)&#123;</span><br><span class="line">			c[i] += <span class="number">10</span>;</span><br><span class="line">			c[i + <span class="number">1</span>] --;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">while</span>(!c[len] &amp;&amp; len &gt; <span class="number">0</span>) len --;</span><br><span class="line">	<span class="keyword">if</span>(!len)&#123;<span class="comment">//特殊情况的判断 </span></span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、高精度乘法"><a href="#三、高精度乘法" class="headerlink" title="三、高精度乘法"></a>三、高精度乘法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000000</span></span><br><span class="line"><span class="type">int</span> t1[N], t2[N], c[N];</span><br><span class="line"><span class="type">char</span> a[N], b[N];<span class="comment">// 两个数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;<span class="comment">//输入两个数 </span></span><br><span class="line">	<span class="type">int</span> lena = <span class="built_in">strlen</span>(a);</span><br><span class="line">	<span class="type">int</span> lenb = <span class="built_in">strlen</span>(b);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i) t1[lena - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;<span class="comment">//存下两个加数 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lenb; ++ i) t2[lenb - i] = b[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="type">int</span> len = lena + lenb;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= lena; ++ i)&#123;<span class="comment">//两层循环依次计算 </span></span><br><span class="line">		<span class="type">int</span> x = <span class="number">0</span>;<span class="comment">//存储进位 </span></span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= lenb; ++ j)&#123;</span><br><span class="line">			c[i + j - <span class="number">1</span>] += t1[i] * t2[j] + x;<span class="comment">//</span></span><br><span class="line">			x = c[i + j - <span class="number">1</span>] / <span class="number">10</span>;</span><br><span class="line">			c[i + j - <span class="number">1</span>] %= <span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		c[i + lenb] = x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!c[len] &amp;&amp; len &gt; <span class="number">1</span>) len --;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="四、高精度除法"><a href="#四、高精度除法" class="headerlink" title="四、高精度除法"></a>四、高精度除法</h2><h3 id="1-高精度除以低精度"><a href="#1-高精度除以低精度" class="headerlink" title="1.高精度除以低精度"></a>1.高精度除以低精度</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10000000</span></span><br><span class="line"><span class="type">int</span> t1[N], c[N];</span><br><span class="line"><span class="type">char</span> a[N];<span class="comment">// 两个数</span></span><br><span class="line"><span class="type">int</span> b; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt; a&gt;&gt; b;<span class="comment">//输入两个数 </span></span><br><span class="line">	<span class="type">int</span> lena = <span class="built_in">strlen</span>(a);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; lena; ++ i) t1[lena - i] = a[i] - <span class="string">&#x27;0&#x27;</span>;<span class="comment">//存下被除数 </span></span><br><span class="line">	<span class="type">int</span> len = lena;</span><br><span class="line">	<span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)&#123;<span class="comment">//从高位到低位的处理 </span></span><br><span class="line">		c[i] += (x * <span class="number">10</span> + t1[i]) / b;</span><br><span class="line">		x = (x * <span class="number">10</span> + t1[i]) % b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!c[len] &amp;&amp; len &gt; <span class="number">1</span>) len --;<span class="comment">//最高位的判断</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = len; i &gt;= <span class="number">1</span>; -- i)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c[i]);<span class="comment">//商 </span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, x);<span class="comment">//余数 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-高精度除以高精度"><a href="#2-高精度除以高精度" class="headerlink" title="2.高精度除以高精度"></a>2.高精度除以高精度</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 305</span></span><br><span class="line"><span class="type">int</span> a[N], b[N], c[N];<span class="comment">//anan-1&#x27;&#x27;&#x27;a1-&gt;数字的正常顺序 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Init</span><span class="params">(<span class="type">int</span> a[])</span></span>&#123;<span class="comment">//读入数据并进行存储 </span></span><br><span class="line">	string s;</span><br><span class="line">	cin&gt;&gt; s;</span><br><span class="line">	a[<span class="number">0</span>] = s.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">0</span>]; ++ i)</span><br><span class="line">		a[i] = s[a[<span class="number">0</span>]-i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">(<span class="type">int</span> a[])</span></span>&#123;<span class="comment">//输出结果函数 </span></span><br><span class="line">	<span class="keyword">if</span>(a[<span class="number">0</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">		cout&lt;&lt; <span class="string">&#x27;0&#x27;</span>&lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = a[<span class="number">0</span>]; i &gt; <span class="number">0</span>; -- i)</span><br><span class="line">		cout&lt;&lt; a[i];</span><br><span class="line">	cout&lt;&lt; endl;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> b[])</span></span>&#123;<span class="comment">//比较两个数大小的函数 </span></span><br><span class="line">	<span class="keyword">if</span>(a[<span class="number">0</span>] &gt; b[<span class="number">0</span>]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(a[<span class="number">0</span>] &lt; b[<span class="number">0</span>]) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = a[<span class="number">0</span>]; i &gt; <span class="number">0</span>; -- i)&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] &gt; b[i]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[i] &lt; b[i]) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">numcpy</span><span class="params">(<span class="type">int</span> p[], <span class="type">int</span> q[], <span class="type">int</span> det)</span></span>&#123;<span class="comment">//复制p数组到q数组从det开始的地方</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= p[<span class="number">0</span>]; ++ i)</span><br><span class="line">		q[i + det - <span class="number">1</span>] = p[i];</span><br><span class="line">	q[<span class="number">0</span>] = p[<span class="number">0</span>] + det - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Minus</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> b[])</span></span>&#123;<span class="comment">//减法操作 </span></span><br><span class="line">	<span class="type">int</span> flag;</span><br><span class="line">	flag = <span class="built_in">compare</span>(a, b);</span><br><span class="line">	<span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">		a[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(flag)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= a[<span class="number">0</span>]; ++ i)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i] &lt; b[i])&#123;</span><br><span class="line">				a[i + <span class="number">1</span>] --;</span><br><span class="line">				a[i] += <span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			a[i] -= b[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(a[<span class="number">0</span>] &gt; <span class="number">0</span> &amp;&amp; a[a[<span class="number">0</span>]] == <span class="number">0</span>) a[<span class="number">0</span>] --;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">High_accuracy_division</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> b[], <span class="type">int</span> c[])</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> tmp[N];</span><br><span class="line">	c[<span class="number">0</span>] = a[<span class="number">0</span>] - b[<span class="number">0</span>] + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = c[<span class="number">0</span>]; i &gt; <span class="number">0</span>; -- i)&#123;</span><br><span class="line">		<span class="built_in">memset</span>(tmp, <span class="number">0</span>, <span class="built_in">sizeof</span>(tmp));</span><br><span class="line">		<span class="built_in">numcpy</span>(b, tmp, i);</span><br><span class="line">		<span class="keyword">while</span>(<span class="built_in">compare</span>(a, tmp) &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">			c[i] ++;</span><br><span class="line">			<span class="built_in">Minus</span>(a, tmp);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(c[<span class="number">0</span>] &gt; <span class="number">0</span> &amp;&amp; c[c[<span class="number">0</span>]] == <span class="number">0</span>)</span><br><span class="line">		c[<span class="number">0</span>] --;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">Init</span>(a);</span><br><span class="line">	<span class="built_in">Init</span>(b);</span><br><span class="line">	<span class="built_in">High_accuracy_division</span>(a, b, c);</span><br><span class="line">	<span class="built_in">Print</span>(c);</span><br><span class="line">	<span class="built_in">Print</span>(a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="五、高精度算法的优化思路"><a href="#五、高精度算法的优化思路" class="headerlink" title="五、高精度算法的优化思路"></a>五、高精度算法的优化思路</h2><p><img src="https://img-blog.csdnimg.cn/0dc48c5a34064fc3bee0e0738faef51a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAQ3Jlcl9sdQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>C</tag>
        <tag>高精度</tag>
        <tag>模板</tag>
      </tags>
  </entry>
</search>
